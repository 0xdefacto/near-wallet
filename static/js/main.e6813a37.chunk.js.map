{"version":3,"sources":["../../nearlib/browser.js","../../nearlib/signing/browser_local_storage_key_store.js","../../nearlib/signing/simple_key_store_signer.js","../../nearlib/protos.js","images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-arrow-right.svg","../../nearlib/nearclient.js","../../nearlib/local_node_connection.js","images/icon-contacts.svg","images/icon-authorized.svg","images/icon-logout.svg","images/icon-activity.svg","images/icon-t-transfer.svg","images/icon-m-transaction.svg","../../nearlib/near.js","../../nearlib/signing/account_info.js","../../nearlib/internal/send-json.js","../../nearlib/account.js","images/icon-account-grey.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-t-stake.svg","images/near_logo.svg","images/icon-deny.svg","images/icon-app-default.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","utils/wallet.js","images/footer-nearkat.svg","../../nearlib/signing/in_memory_key_store.js","../../nearlib/wallet-account.js","../../nearlib/dev.js","../../nearlib/wallet-access-key.js","images/icon-check-blue.svg","images/icon-activity-grey.svg","images/icon-authorized-grey.svg","images/icon-contacts-grey.svg","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/common/Disclaimer.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/common/RequestStatusBox.js","components/accounts/AccountFormSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccountContainer.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/pagination/PaginationSummary.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-arrow-down.svg","images/icon-problems.svg","../../nearlib/signing/key_pair.js","images/icon-send.svg","images/icon-close.svg"],"names":["Near","__webpack_require__","NearClient","Account","SimpleKeyStoreSigner","InMemoryKeyStore","BrowserLocalStorageKeystore","LocalNodeConnection","KeyPair","WalletAccount","dev","AccountInfo","WalletAccessKey","module","exports","_regeneratorRuntime","_asyncToGenerator","_classCallCheck","_createClass","networkId","arguments","length","undefined","localStorage","window","this","key","value","_setKey","mark","_callee","accountId","wrap","_context","prev","next","setItem","storageKeyForPublicKey","getPublicKey","storageKeyForSecretKey","getSecretKey","stop","_x","_x2","apply","_removeKey","_callee2","_context2","removeItem","_x3","_setKeyFromJson","_callee3","json","accountInfo","_context3","fromJson","Error","setKey","keyPair","_x4","_getKey","_callee4","publicKey","secretKey","_context4","getItem","abrupt","_x5","Object","keys","map","endsWith","substr","_toConsumableArray","bs58","nacl","sha256","google","keyStore","_signBuffer","buffer","originator","signHash","Uint8Array","array","_signHash","hash","encodedKey","signature","getKey","sent","concat","decode","sign","detached","from","protobuf","BytesValue","create","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","CreateAccountTransaction","properties","i","prototype","nonce","Long","fromBits","newAccountId","amount","newBuffer","encode","message","writer","hasOwnProperty","uint32","uint64","string","bytes","encodeDelimited","ldelim","reader","end","len","pos","tag","skipType","decodeDelimited","verify","isInteger","low","high","isString","fromObject","object","fromValue","unsigned","parseInt","LongBits","toNumber","String","base64","toObject","options","defaults","long","longs","toString","Number","Array","call","slice","toJSON","constructor","toJSONOptions","DeployContractTransaction","contractId","wasmByteArray","FunctionCallTransaction","methodName","args","SendMoneyTransaction","receiver","StakeTransaction","blsPublicKey","SwapKeyTransaction","curKey","newKey","AddKeyTransaction","accessKey","AccessKey","fork","error","TypeError","DeleteKeyTransaction","SignedTransaction","$oneOfFields","createAccount","deployContract","functionCall","sendMoney","stake","swapKey","addKey","deleteKey","defineProperty","get","oneOfGetter","set","oneOfSetter","body","oneofs","DoubleValue","double","isFinite","FloatValue","float","Int64Value","int64","UInt64Value","Int32Value","int32","UInt32Value","BoolValue","bool","Boolean","StringValue","balanceOwner","p","Buffer","_arrayBufferToBase64","_base64ToBuffer","str","signer","nearConnection","_viewAccount","response","jsonRpcRequest","JSON","parse","_submitTransaction","signedTransaction","transaction","params","finish","_callViewFunction","contractAccountId","serializedArgs","result","stringify","_printLogs","log","t0","_getTransactionStatus","transactionHash","encodedHash","status","logs","0","1","2","tx_result","code","split","data","_x6","_getNonce","_callee5","_context5","viewAccount","_x7","_jsonRpcRequest","_callee6","method","request","_response$error","_code","info","_context6","jsonrpc","id","Date","now","console","_x8","_x9","_request","_callee7","_context7","_x10","_x11","forEach","line","sendJson","baseUrl","createError","_require","nearClient","callViewFunction","_scheduleFunctionCall","signatureAndPublicKey","getNonce","signBuffer","submitTransaction","_deployContract","getTransactionStatus","_waitForTransactionResult","transactionResponseOrHash","hashStr","alreadyDisplayedLogs","j","errorMessage","_args5","sleep","warn","push","lastResult","find","it","startsWith","_x12","_loadContract","_callee8","contract","near","_context8","viewMethods","_ref","_x15","changeMethods","_ref2","scheduleFunctionCall","sender","waitForTransactionResult","_x16","_x13","_x14","nodeUrl","time","Promise","resolve","setTimeout","account_id","public_key","secret_key","network_id","fileName","keyFileName","text","element","document","createElement","setAttribute","encodeURIComponent","style","display","appendChild","click","removeChild","fetch","name","_sendJson","url","headers","Content-type","ok","t1","t2","_objectSpread","_createAccount","_addAccessKey","ownersAccountId","newPublicKey","fundingOwner","fundingAmount","_createAccountWithRandomKey","originatorAccountId","keyWithRandomSeed","createAccountResult","fromRandomSeed","ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","NODE_URL","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","key_store","nearlib","createDefaultConfig","account","accounts","tokens","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","save","app_url","app_title","contract_id","token","possible","charAt","Math","floor","random","isLegitAccountId","test","_sendTransaction","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","senderId","receiverId","history","param","next_url","location","search","reset_accounts","WALLET_CREATE_NEW_ACCOUNT_URL","replace","isEmpty","redirectToCreateAccount","_loadAccount","_checkAccount","_checkNewAccount","remoteAccount","_createNewAccount","_this","reject","newAccountPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","catch","responseText","send","successUrl","addAccessKeyResponse","parsedUrl","redirectUrl","addAccessKey","URL","searchParams","href","addEventListener","receiveMessage","bind","_processTransactionMessage","action","app_data","sendTransaction","phoneNumber","_validateCode","securityCode","_x17","_x18","_x19","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","success","_clear","LOCAL_STORAGE_KEY_SUFFIX","appKeyPrefix","walletBaseUrl","_walletBaseUrl","_authDataKey","_keyStore","_authData","isSignedIn","_completeSignInWithAccessKey","title","success_url","failure_url","currentUrl","newUrl","getAccountId","_moveKeyFromTempToPermanent","_moveKeyFromTempToPermanent2","removeKey","devKey","getCookie","v","cookie","match","getConfig","_getConfig","decodeURIComponent","connect","_connect","_args2","assign","deps","useDevAccount","helperUrl","createAccountWithContractHelper","createAccountWithLocalNodeConnection","storage","getOrCreateDevUser","_getOrCreateDevUser","tempUserAccountId","accountKey","accountLib","keypair","myAccountId","_createAccountWithLocalNodeConnection","newAccountName","createAccountResponse","_createAccountWithContractHelper","_signer","_tryInitFromUrl","failureUrl","_saveAuthData","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","type","loader","loadAccount","authToken","newAccessToken","code_hash","indexOf","clearState","handleRefreshUrl","createActions","REQUEST_CODE","requestCode","successCode","errorCode","VALIDATE_CODE","validateCode","initialState","formLoader","sentSms","requestResultReducer","handleActions","combineActions","state","payload","meta","objectSpread","requestStatus","messageCode","reducer","_ref3","ready","reduceReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","CustomResponsive","styled","Responsive","_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","dropdown","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","react_default","maxWidth","Segment","basic","className","Menu","borderless","Item","as","Link","to","Image","src","LogoImage","position","onClick","Loader","active","inline","size","MobileMenuImage","CloseImage","react_router_dom","RecentImage","ActivityImage","SendImage","AccountGreyImage","ContactsGreyImage","AuthorizedGreyImage","LogoutImage","List","filter","Button","children","Component","defaultProps","mapDispatchToProps","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","trigger","ArrowDownImage","on","Icon","AccountImage","Content","DesktopView_templateObject","DesktopView","fixed","activeItem","hideFixedMenu","showFixedMenu","handleItemClick","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","pointing","target","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","DashboardOtherAssets_templateObject","TContractImage","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","Row","Header","DashboardNotice_templateObject","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","DashboardActivity_templateObject","DashboardDetail","notice","activity","authorizedaps","newcontacts","handleNotice","_","TTransferImage","TStakeImage","_this$state","dashboard_DashboardContainer","CustomGrid","CreateAccountSection_templateObject","CreateAccountSection","successMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","CustomList","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","stackable","Dimmer","inverted","accounts_NearInfo","common_Disclaimer","CreateAccount","componentDidMount","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","AccountFormSection","common_RequestStatusBox","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","nextUrl","isValidPhoneNumber","trim","combinedState","accounts_SetRecoveryInfoContainer","accounts_AccountFormSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref4","_ref5","RecoverAccountForm_templateObject","RecoverAccountForm","RecoverAccountForm_RecoveryInfoForm","RecoverAccountContainer_templateObject","RecoverAccountContainer","RecoverAccountContainer_CustomContainer","RecoverAccount","accounts_RecoverAccountContainer","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","horizontal","AuthorizeImage","AppDefaultImage","largeScreen","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","step","PaginationTab","_Component","_getPrototypeOf2","classCallCheck","_len","_key","possibleConstructorReturn","getPrototypeOf","currentPage","gotoPage","page","onPageChanged","handleClick","evt","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","createClass","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPagingList","PaginationPaging_templateObject","pagingTypes","PaginationFilter","handleOnClickPaging","pagingValue","pagingDropdown","handlePagingDropdownClick","backgroundImage","ArrowDown","selection","PaginationSummary","pageNumber","SearchForm","Search_templateObject","MSearchImage","Search","PaginationFilterList","PaginationSortBy_templateObject","filterTypesByType","handleDropdownClick","img","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","TransactionFilter","buttonRadio","buttonRadioClick","_this$props","_this$props$pageNumbe","_this$props$showSub","subPage","_this$props2","_this$props2$totalRec","_this$props2$pageLimi","_this$props2$initialP","_this$props2$onPageCh","_this$props2$pageNeig","width","PaginationSortBy","common_Search","backgroundColor","PaginationPaging","pagination_PaginationSummary","PaginationTab_PaginationTab","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_this3","contacts_ContactsContainer","pagination_PaginationBlock","dashboard_ListItem","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","checkAccount","paramId","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileNotice_templateObject","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","basename","process","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","getElementById","navigator","serviceWorker","registration","unregister","newKeypair","encodeBufferInBs58"],"mappings":"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","file":"static/js/main.e6813a37.chunk.js","sourcesContent":["var Near = require('./near');\n\nvar NearClient = require('./nearclient');\n\nvar Account = require('./account');\n\nvar SimpleKeyStoreSigner = require('./signing/simple_key_store_signer');\n\nvar InMemoryKeyStore = require('./signing/in_memory_key_store');\n\nvar BrowserLocalStorageKeystore = require('./signing/browser_local_storage_key_store');\n\nvar LocalNodeConnection = require('./local_node_connection');\n\nvar KeyPair = require('./signing/key_pair');\n\nvar WalletAccount = require('./wallet-account');\n\nvar dev = require('./dev');\n\nvar AccountInfo = require('./signing/account_info');\n\nvar WalletAccessKey = require('./wallet-access-key');\n\nmodule.exports = {\n  Near: Near,\n  NearClient: NearClient,\n  Account: Account,\n  SimpleKeyStoreSigner: SimpleKeyStoreSigner,\n  InMemoryKeyStore: InMemoryKeyStore,\n  BrowserLocalStorageKeystore: BrowserLocalStorageKeystore,\n  LocalNodeConnection: LocalNodeConnection,\n  KeyPair: KeyPair,\n  WalletAccount: WalletAccount,\n  dev: dev,\n  AccountInfo: AccountInfo,\n  WalletAccessKey: WalletAccessKey\n};","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * Stores keys in the browser local storage. This allows to retain keys between\n * browser sessions. Local storage likes to work with strings so we store public and private key separately.\n */\nvar KeyPair = require('./key_pair');\n\nvar AccountInfo = require('./account_info');\n\nvar LOCAL_STORAGE_SECRET_KEY_SUFFIX = '_secretkey';\nvar LOCAL_STORAGE_PUBLIC_KEY_SUFFIX = '_publickey';\n\nvar BrowserLocalStorageKeystore =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function BrowserLocalStorageKeystore() {\n    var networkId = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'unknown';\n    var localStorage = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : window.localStorage;\n\n    _classCallCheck(this, BrowserLocalStorageKeystore);\n\n    this.networkId = networkId;\n    this.localStorage = localStorage;\n  }\n\n  _createClass(BrowserLocalStorageKeystore, [{\n    key: \"setKey\",\n\n    /**\n     * Save the key in local storage. \n     * @param {string} accountId \n     * @param {KeyPair} key \n     */\n    value: function () {\n      var _setKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accountId, key) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.localStorage.setItem(BrowserLocalStorageKeystore.storageKeyForPublicKey(accountId), key.getPublicKey());\n                this.localStorage.setItem(BrowserLocalStorageKeystore.storageKeyForSecretKey(accountId), key.getSecretKey());\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setKey(_x, _x2) {\n        return _setKey.apply(this, arguments);\n      }\n\n      return setKey;\n    }()\n    /**\n     * Removes the key from local storage for a given id. Please be sure to store the key somewhere before doing this\n     * to prevent permanent key loss.\n     * @param {string} accountId\n     */\n\n  }, {\n    key: \"removeKey\",\n    value: function () {\n      var _removeKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(accountId) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                this.localStorage.removeItem(BrowserLocalStorageKeystore.storageKeyForPublicKey(accountId));\n                this.localStorage.removeItem(BrowserLocalStorageKeystore.storageKeyForSecretKey(accountId));\n\n              case 2:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function removeKey(_x3) {\n        return _removeKey.apply(this, arguments);\n      }\n\n      return removeKey;\n    }()\n  }, {\n    key: \"setKeyFromJson\",\n    value: function () {\n      var _setKeyFromJson = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(json) {\n        var accountInfo;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                accountInfo = AccountInfo.fromJson(json);\n\n                if (!(this.networkId != accountInfo.networkId)) {\n                  _context3.next = 3;\n                  break;\n                }\n\n                throw new Error('Setting key for a wrong network');\n\n              case 3:\n                this.setKey(accountInfo.accountId, accountInfo.keyPair);\n\n              case 4:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function setKeyFromJson(_x4) {\n        return _setKeyFromJson.apply(this, arguments);\n      }\n\n      return setKeyFromJson;\n    }()\n    /**\n     * Get the key from local storage and return as KeyPair object.\n     * @param {string} accountId \n     */\n\n  }, {\n    key: \"getKey\",\n    value: function () {\n      var _getKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(accountId) {\n        var publicKey, secretKey;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                publicKey = this.localStorage.getItem(BrowserLocalStorageKeystore.storageKeyForPublicKey(accountId));\n                secretKey = this.localStorage.getItem(BrowserLocalStorageKeystore.storageKeyForSecretKey(accountId));\n\n                if (!(!publicKey || !secretKey)) {\n                  _context4.next = 4;\n                  break;\n                }\n\n                return _context4.abrupt(\"return\", null);\n\n              case 4:\n                return _context4.abrupt(\"return\", new KeyPair(publicKey, secretKey));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getKey(_x5) {\n        return _getKey.apply(this, arguments);\n      }\n\n      return getKey;\n    }()\n  }], [{\n    key: \"storageKeyForPublicKey\",\n    value: function storageKeyForPublicKey(accountId) {\n      return accountId + '_' + this.networkId + LOCAL_STORAGE_PUBLIC_KEY_SUFFIX;\n    }\n  }, {\n    key: \"storageKeyForSecretKey\",\n    value: function storageKeyForSecretKey(accountId) {\n      return accountId + '_' + this.networkId + LOCAL_STORAGE_SECRET_KEY_SUFFIX;\n    }\n  }, {\n    key: \"getAccounts\",\n    value: function getAccounts() {\n      return Object.keys(this.localStorage).map(function (key) {\n        if (key.endsWith('_public')) {\n          return key.substr(0, key.length() - 7);\n        }\n      });\n    }\n  }]);\n\n  return BrowserLocalStorageKeystore;\n}();\n\nmodule.exports = BrowserLocalStorageKeystore;","var _toConsumableArray = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/toConsumableArray\");\n\nvar _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * Simple signer that acquires a key from its single keystore and signs transactions.\n */\nvar bs58 = require('bs58');\n\nvar nacl = require('tweetnacl');\n\nvar _require = require('js-sha256'),\n    sha256 = _require.sha256;\n\nvar _require2 = require('../protos'),\n    google = _require2.google;\n\nvar SimpleKeyStoreSigner =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function SimpleKeyStoreSigner(keyStore) {\n    _classCallCheck(this, SimpleKeyStoreSigner);\n\n    this.keyStore = keyStore;\n  }\n  /**\n   * Signs a buffer. If the key for originator is not present,\n   * this operation will fail.\n   * @param {Uint8Array} buffer\n   * @param {string} originator\n   */\n\n\n  _createClass(SimpleKeyStoreSigner, [{\n    key: \"signBuffer\",\n    value: function () {\n      var _signBuffer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(buffer, originator) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.signHash(new Uint8Array(sha256.array(buffer)), originator));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function signBuffer(_x, _x2) {\n        return _signBuffer.apply(this, arguments);\n      }\n\n      return signBuffer;\n    }()\n  }, {\n    key: \"signHash\",\n    value: function () {\n      var _signHash = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(hash, originator) {\n        var encodedKey, key, signature;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.keyStore.getKey(originator);\n\n              case 2:\n                encodedKey = _context2.sent;\n\n                if (encodedKey) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                throw new Error(\"Cannot find key for originator \".concat(originator));\n\n              case 5:\n                key = bs58.decode(encodedKey.getSecretKey());\n                signature = _toConsumableArray(nacl.sign.detached(Uint8Array.from(hash), key));\n                return _context2.abrupt(\"return\", {\n                  signature: signature,\n                  publicKey: google.protobuf.BytesValue.create({\n                    value: bs58.decode(encodedKey.getPublicKey())\n                  })\n                });\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signHash(_x3, _x4) {\n        return _signHash.apply(this, arguments);\n      }\n\n      return signHash;\n    }()\n  }]);\n\n  return SimpleKeyStoreSigner;\n}();\n\nmodule.exports = SimpleKeyStoreSigner;","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\"); // Common aliases\n\n\nvar $Reader = $protobuf.Reader,\n    $Writer = $protobuf.Writer,\n    $util = $protobuf.util; // Exported root namespace\n\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.CreateAccountTransaction = function () {\n  /**\n   * Properties of a CreateAccountTransaction.\n   * @exports ICreateAccountTransaction\n   * @interface ICreateAccountTransaction\n   * @property {number|Long|null} [nonce] CreateAccountTransaction nonce\n   * @property {string|null} [originator] CreateAccountTransaction originator\n   * @property {string|null} [newAccountId] CreateAccountTransaction newAccountId\n   * @property {number|Long|null} [amount] CreateAccountTransaction amount\n   * @property {Uint8Array|null} [publicKey] CreateAccountTransaction publicKey\n   */\n\n  /**\n   * Constructs a new CreateAccountTransaction.\n   * @exports CreateAccountTransaction\n   * @classdesc Represents a CreateAccountTransaction.\n   * @implements ICreateAccountTransaction\n   * @constructor\n   * @param {ICreateAccountTransaction=} [properties] Properties to set\n   */\n  function CreateAccountTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * CreateAccountTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof CreateAccountTransaction\n   * @instance\n   */\n\n\n  CreateAccountTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * CreateAccountTransaction originator.\n   * @member {string} originator\n   * @memberof CreateAccountTransaction\n   * @instance\n   */\n\n  CreateAccountTransaction.prototype.originator = \"\";\n  /**\n   * CreateAccountTransaction newAccountId.\n   * @member {string} newAccountId\n   * @memberof CreateAccountTransaction\n   * @instance\n   */\n\n  CreateAccountTransaction.prototype.newAccountId = \"\";\n  /**\n   * CreateAccountTransaction amount.\n   * @member {number|Long} amount\n   * @memberof CreateAccountTransaction\n   * @instance\n   */\n\n  CreateAccountTransaction.prototype.amount = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * CreateAccountTransaction publicKey.\n   * @member {Uint8Array} publicKey\n   * @memberof CreateAccountTransaction\n   * @instance\n   */\n\n  CreateAccountTransaction.prototype.publicKey = $util.newBuffer([]);\n  /**\n   * Creates a new CreateAccountTransaction instance using the specified properties.\n   * @function create\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {ICreateAccountTransaction=} [properties] Properties to set\n   * @returns {CreateAccountTransaction} CreateAccountTransaction instance\n   */\n\n  CreateAccountTransaction.create = function create(properties) {\n    return new CreateAccountTransaction(properties);\n  };\n  /**\n   * Encodes the specified CreateAccountTransaction message. Does not implicitly {@link CreateAccountTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {ICreateAccountTransaction} message CreateAccountTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  CreateAccountTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.newAccountId != null && message.hasOwnProperty(\"newAccountId\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.newAccountId);\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint64(message.amount);\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).bytes(message.publicKey);\n    return writer;\n  };\n  /**\n   * Encodes the specified CreateAccountTransaction message, length delimited. Does not implicitly {@link CreateAccountTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {ICreateAccountTransaction} message CreateAccountTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  CreateAccountTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a CreateAccountTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {CreateAccountTransaction} CreateAccountTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  CreateAccountTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.CreateAccountTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.newAccountId = reader.string();\n          break;\n\n        case 4:\n          message.amount = reader.uint64();\n          break;\n\n        case 5:\n          message.publicKey = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a CreateAccountTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {CreateAccountTransaction} CreateAccountTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  CreateAccountTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a CreateAccountTransaction message.\n   * @function verify\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  CreateAccountTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.newAccountId != null && message.hasOwnProperty(\"newAccountId\")) if (!$util.isString(message.newAccountId)) return \"newAccountId: string expected\";\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (!$util.isInteger(message.amount) && !(message.amount && $util.isInteger(message.amount.low) && $util.isInteger(message.amount.high))) return \"amount: integer|Long expected\";\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) if (!(message.publicKey && typeof message.publicKey.length === \"number\" || $util.isString(message.publicKey))) return \"publicKey: buffer expected\";\n    return null;\n  };\n  /**\n   * Creates a CreateAccountTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {CreateAccountTransaction} CreateAccountTransaction\n   */\n\n\n  CreateAccountTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.CreateAccountTransaction) return object;\n    var message = new $root.CreateAccountTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.newAccountId != null) message.newAccountId = String(object.newAccountId);\n    if (object.amount != null) if ($util.Long) (message.amount = $util.Long.fromValue(object.amount)).unsigned = true;else if (typeof object.amount === \"string\") message.amount = parseInt(object.amount, 10);else if (typeof object.amount === \"number\") message.amount = object.amount;else if (typeof object.amount === \"object\") message.amount = new $util.LongBits(object.amount.low >>> 0, object.amount.high >>> 0).toNumber(true);\n    if (object.publicKey != null) if (typeof object.publicKey === \"string\") $util.base64.decode(object.publicKey, message.publicKey = $util.newBuffer($util.base64.length(object.publicKey)), 0);else if (object.publicKey.length) message.publicKey = object.publicKey;\n    return message;\n  };\n  /**\n   * Creates a plain object from a CreateAccountTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof CreateAccountTransaction\n   * @static\n   * @param {CreateAccountTransaction} message CreateAccountTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  CreateAccountTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n      object.newAccountId = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.amount = options.longs === String ? \"0\" : 0;\n\n      if (options.bytes === String) object.publicKey = \"\";else {\n        object.publicKey = [];\n        if (options.bytes !== Array) object.publicKey = $util.newBuffer(object.publicKey);\n      }\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.newAccountId != null && message.hasOwnProperty(\"newAccountId\")) object.newAccountId = message.newAccountId;\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (typeof message.amount === \"number\") object.amount = options.longs === String ? String(message.amount) : message.amount;else object.amount = options.longs === String ? $util.Long.prototype.toString.call(message.amount) : options.longs === Number ? new $util.LongBits(message.amount.low >>> 0, message.amount.high >>> 0).toNumber(true) : message.amount;\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) object.publicKey = options.bytes === String ? $util.base64.encode(message.publicKey, 0, message.publicKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.publicKey) : message.publicKey;\n    return object;\n  };\n  /**\n   * Converts this CreateAccountTransaction to JSON.\n   * @function toJSON\n   * @memberof CreateAccountTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  CreateAccountTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return CreateAccountTransaction;\n}();\n\n$root.DeployContractTransaction = function () {\n  /**\n   * Properties of a DeployContractTransaction.\n   * @exports IDeployContractTransaction\n   * @interface IDeployContractTransaction\n   * @property {number|Long|null} [nonce] DeployContractTransaction nonce\n   * @property {string|null} [contractId] DeployContractTransaction contractId\n   * @property {Uint8Array|null} [wasmByteArray] DeployContractTransaction wasmByteArray\n   */\n\n  /**\n   * Constructs a new DeployContractTransaction.\n   * @exports DeployContractTransaction\n   * @classdesc Represents a DeployContractTransaction.\n   * @implements IDeployContractTransaction\n   * @constructor\n   * @param {IDeployContractTransaction=} [properties] Properties to set\n   */\n  function DeployContractTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * DeployContractTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof DeployContractTransaction\n   * @instance\n   */\n\n\n  DeployContractTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * DeployContractTransaction contractId.\n   * @member {string} contractId\n   * @memberof DeployContractTransaction\n   * @instance\n   */\n\n  DeployContractTransaction.prototype.contractId = \"\";\n  /**\n   * DeployContractTransaction wasmByteArray.\n   * @member {Uint8Array} wasmByteArray\n   * @memberof DeployContractTransaction\n   * @instance\n   */\n\n  DeployContractTransaction.prototype.wasmByteArray = $util.newBuffer([]);\n  /**\n   * Creates a new DeployContractTransaction instance using the specified properties.\n   * @function create\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {IDeployContractTransaction=} [properties] Properties to set\n   * @returns {DeployContractTransaction} DeployContractTransaction instance\n   */\n\n  DeployContractTransaction.create = function create(properties) {\n    return new DeployContractTransaction(properties);\n  };\n  /**\n   * Encodes the specified DeployContractTransaction message. Does not implicitly {@link DeployContractTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {IDeployContractTransaction} message DeployContractTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  DeployContractTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.contractId);\n    if (message.wasmByteArray != null && message.hasOwnProperty(\"wasmByteArray\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).bytes(message.wasmByteArray);\n    return writer;\n  };\n  /**\n   * Encodes the specified DeployContractTransaction message, length delimited. Does not implicitly {@link DeployContractTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {IDeployContractTransaction} message DeployContractTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  DeployContractTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a DeployContractTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {DeployContractTransaction} DeployContractTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  DeployContractTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.DeployContractTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.contractId = reader.string();\n          break;\n\n        case 3:\n          message.wasmByteArray = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a DeployContractTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {DeployContractTransaction} DeployContractTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  DeployContractTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a DeployContractTransaction message.\n   * @function verify\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  DeployContractTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) if (!$util.isString(message.contractId)) return \"contractId: string expected\";\n    if (message.wasmByteArray != null && message.hasOwnProperty(\"wasmByteArray\")) if (!(message.wasmByteArray && typeof message.wasmByteArray.length === \"number\" || $util.isString(message.wasmByteArray))) return \"wasmByteArray: buffer expected\";\n    return null;\n  };\n  /**\n   * Creates a DeployContractTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {DeployContractTransaction} DeployContractTransaction\n   */\n\n\n  DeployContractTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.DeployContractTransaction) return object;\n    var message = new $root.DeployContractTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.contractId != null) message.contractId = String(object.contractId);\n    if (object.wasmByteArray != null) if (typeof object.wasmByteArray === \"string\") $util.base64.decode(object.wasmByteArray, message.wasmByteArray = $util.newBuffer($util.base64.length(object.wasmByteArray)), 0);else if (object.wasmByteArray.length) message.wasmByteArray = object.wasmByteArray;\n    return message;\n  };\n  /**\n   * Creates a plain object from a DeployContractTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof DeployContractTransaction\n   * @static\n   * @param {DeployContractTransaction} message DeployContractTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  DeployContractTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.contractId = \"\";\n      if (options.bytes === String) object.wasmByteArray = \"\";else {\n        object.wasmByteArray = [];\n        if (options.bytes !== Array) object.wasmByteArray = $util.newBuffer(object.wasmByteArray);\n      }\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) object.contractId = message.contractId;\n    if (message.wasmByteArray != null && message.hasOwnProperty(\"wasmByteArray\")) object.wasmByteArray = options.bytes === String ? $util.base64.encode(message.wasmByteArray, 0, message.wasmByteArray.length) : options.bytes === Array ? Array.prototype.slice.call(message.wasmByteArray) : message.wasmByteArray;\n    return object;\n  };\n  /**\n   * Converts this DeployContractTransaction to JSON.\n   * @function toJSON\n   * @memberof DeployContractTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  DeployContractTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return DeployContractTransaction;\n}();\n\n$root.FunctionCallTransaction = function () {\n  /**\n   * Properties of a FunctionCallTransaction.\n   * @exports IFunctionCallTransaction\n   * @interface IFunctionCallTransaction\n   * @property {number|Long|null} [nonce] FunctionCallTransaction nonce\n   * @property {string|null} [originator] FunctionCallTransaction originator\n   * @property {string|null} [contractId] FunctionCallTransaction contractId\n   * @property {Uint8Array|null} [methodName] FunctionCallTransaction methodName\n   * @property {Uint8Array|null} [args] FunctionCallTransaction args\n   * @property {number|Long|null} [amount] FunctionCallTransaction amount\n   */\n\n  /**\n   * Constructs a new FunctionCallTransaction.\n   * @exports FunctionCallTransaction\n   * @classdesc Represents a FunctionCallTransaction.\n   * @implements IFunctionCallTransaction\n   * @constructor\n   * @param {IFunctionCallTransaction=} [properties] Properties to set\n   */\n  function FunctionCallTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * FunctionCallTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof FunctionCallTransaction\n   * @instance\n   */\n\n\n  FunctionCallTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * FunctionCallTransaction originator.\n   * @member {string} originator\n   * @memberof FunctionCallTransaction\n   * @instance\n   */\n\n  FunctionCallTransaction.prototype.originator = \"\";\n  /**\n   * FunctionCallTransaction contractId.\n   * @member {string} contractId\n   * @memberof FunctionCallTransaction\n   * @instance\n   */\n\n  FunctionCallTransaction.prototype.contractId = \"\";\n  /**\n   * FunctionCallTransaction methodName.\n   * @member {Uint8Array} methodName\n   * @memberof FunctionCallTransaction\n   * @instance\n   */\n\n  FunctionCallTransaction.prototype.methodName = $util.newBuffer([]);\n  /**\n   * FunctionCallTransaction args.\n   * @member {Uint8Array} args\n   * @memberof FunctionCallTransaction\n   * @instance\n   */\n\n  FunctionCallTransaction.prototype.args = $util.newBuffer([]);\n  /**\n   * FunctionCallTransaction amount.\n   * @member {number|Long} amount\n   * @memberof FunctionCallTransaction\n   * @instance\n   */\n\n  FunctionCallTransaction.prototype.amount = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * Creates a new FunctionCallTransaction instance using the specified properties.\n   * @function create\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {IFunctionCallTransaction=} [properties] Properties to set\n   * @returns {FunctionCallTransaction} FunctionCallTransaction instance\n   */\n\n  FunctionCallTransaction.create = function create(properties) {\n    return new FunctionCallTransaction(properties);\n  };\n  /**\n   * Encodes the specified FunctionCallTransaction message. Does not implicitly {@link FunctionCallTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {IFunctionCallTransaction} message FunctionCallTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  FunctionCallTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.contractId);\n    if (message.methodName != null && message.hasOwnProperty(\"methodName\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).bytes(message.methodName);\n    if (message.args != null && message.hasOwnProperty(\"args\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).bytes(message.args);\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) writer.uint32(\n    /* id 6, wireType 0 =*/\n    48).uint64(message.amount);\n    return writer;\n  };\n  /**\n   * Encodes the specified FunctionCallTransaction message, length delimited. Does not implicitly {@link FunctionCallTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {IFunctionCallTransaction} message FunctionCallTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  FunctionCallTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a FunctionCallTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {FunctionCallTransaction} FunctionCallTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  FunctionCallTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.FunctionCallTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.contractId = reader.string();\n          break;\n\n        case 4:\n          message.methodName = reader.bytes();\n          break;\n\n        case 5:\n          message.args = reader.bytes();\n          break;\n\n        case 6:\n          message.amount = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a FunctionCallTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {FunctionCallTransaction} FunctionCallTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  FunctionCallTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a FunctionCallTransaction message.\n   * @function verify\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  FunctionCallTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) if (!$util.isString(message.contractId)) return \"contractId: string expected\";\n    if (message.methodName != null && message.hasOwnProperty(\"methodName\")) if (!(message.methodName && typeof message.methodName.length === \"number\" || $util.isString(message.methodName))) return \"methodName: buffer expected\";\n    if (message.args != null && message.hasOwnProperty(\"args\")) if (!(message.args && typeof message.args.length === \"number\" || $util.isString(message.args))) return \"args: buffer expected\";\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (!$util.isInteger(message.amount) && !(message.amount && $util.isInteger(message.amount.low) && $util.isInteger(message.amount.high))) return \"amount: integer|Long expected\";\n    return null;\n  };\n  /**\n   * Creates a FunctionCallTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {FunctionCallTransaction} FunctionCallTransaction\n   */\n\n\n  FunctionCallTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.FunctionCallTransaction) return object;\n    var message = new $root.FunctionCallTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.contractId != null) message.contractId = String(object.contractId);\n    if (object.methodName != null) if (typeof object.methodName === \"string\") $util.base64.decode(object.methodName, message.methodName = $util.newBuffer($util.base64.length(object.methodName)), 0);else if (object.methodName.length) message.methodName = object.methodName;\n    if (object.args != null) if (typeof object.args === \"string\") $util.base64.decode(object.args, message.args = $util.newBuffer($util.base64.length(object.args)), 0);else if (object.args.length) message.args = object.args;\n    if (object.amount != null) if ($util.Long) (message.amount = $util.Long.fromValue(object.amount)).unsigned = true;else if (typeof object.amount === \"string\") message.amount = parseInt(object.amount, 10);else if (typeof object.amount === \"number\") message.amount = object.amount;else if (typeof object.amount === \"object\") message.amount = new $util.LongBits(object.amount.low >>> 0, object.amount.high >>> 0).toNumber(true);\n    return message;\n  };\n  /**\n   * Creates a plain object from a FunctionCallTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof FunctionCallTransaction\n   * @static\n   * @param {FunctionCallTransaction} message FunctionCallTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  FunctionCallTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n      object.contractId = \"\";\n      if (options.bytes === String) object.methodName = \"\";else {\n        object.methodName = [];\n        if (options.bytes !== Array) object.methodName = $util.newBuffer(object.methodName);\n      }\n      if (options.bytes === String) object.args = \"\";else {\n        object.args = [];\n        if (options.bytes !== Array) object.args = $util.newBuffer(object.args);\n      }\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.amount = options.longs === String ? \"0\" : 0;\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) object.contractId = message.contractId;\n    if (message.methodName != null && message.hasOwnProperty(\"methodName\")) object.methodName = options.bytes === String ? $util.base64.encode(message.methodName, 0, message.methodName.length) : options.bytes === Array ? Array.prototype.slice.call(message.methodName) : message.methodName;\n    if (message.args != null && message.hasOwnProperty(\"args\")) object.args = options.bytes === String ? $util.base64.encode(message.args, 0, message.args.length) : options.bytes === Array ? Array.prototype.slice.call(message.args) : message.args;\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (typeof message.amount === \"number\") object.amount = options.longs === String ? String(message.amount) : message.amount;else object.amount = options.longs === String ? $util.Long.prototype.toString.call(message.amount) : options.longs === Number ? new $util.LongBits(message.amount.low >>> 0, message.amount.high >>> 0).toNumber(true) : message.amount;\n    return object;\n  };\n  /**\n   * Converts this FunctionCallTransaction to JSON.\n   * @function toJSON\n   * @memberof FunctionCallTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  FunctionCallTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return FunctionCallTransaction;\n}();\n\n$root.SendMoneyTransaction = function () {\n  /**\n   * Properties of a SendMoneyTransaction.\n   * @exports ISendMoneyTransaction\n   * @interface ISendMoneyTransaction\n   * @property {number|Long|null} [nonce] SendMoneyTransaction nonce\n   * @property {string|null} [originator] SendMoneyTransaction originator\n   * @property {string|null} [receiver] SendMoneyTransaction receiver\n   * @property {number|Long|null} [amount] SendMoneyTransaction amount\n   */\n\n  /**\n   * Constructs a new SendMoneyTransaction.\n   * @exports SendMoneyTransaction\n   * @classdesc Represents a SendMoneyTransaction.\n   * @implements ISendMoneyTransaction\n   * @constructor\n   * @param {ISendMoneyTransaction=} [properties] Properties to set\n   */\n  function SendMoneyTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * SendMoneyTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof SendMoneyTransaction\n   * @instance\n   */\n\n\n  SendMoneyTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * SendMoneyTransaction originator.\n   * @member {string} originator\n   * @memberof SendMoneyTransaction\n   * @instance\n   */\n\n  SendMoneyTransaction.prototype.originator = \"\";\n  /**\n   * SendMoneyTransaction receiver.\n   * @member {string} receiver\n   * @memberof SendMoneyTransaction\n   * @instance\n   */\n\n  SendMoneyTransaction.prototype.receiver = \"\";\n  /**\n   * SendMoneyTransaction amount.\n   * @member {number|Long} amount\n   * @memberof SendMoneyTransaction\n   * @instance\n   */\n\n  SendMoneyTransaction.prototype.amount = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * Creates a new SendMoneyTransaction instance using the specified properties.\n   * @function create\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {ISendMoneyTransaction=} [properties] Properties to set\n   * @returns {SendMoneyTransaction} SendMoneyTransaction instance\n   */\n\n  SendMoneyTransaction.create = function create(properties) {\n    return new SendMoneyTransaction(properties);\n  };\n  /**\n   * Encodes the specified SendMoneyTransaction message. Does not implicitly {@link SendMoneyTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {ISendMoneyTransaction} message SendMoneyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SendMoneyTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.receiver != null && message.hasOwnProperty(\"receiver\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).string(message.receiver);\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) writer.uint32(\n    /* id 4, wireType 0 =*/\n    32).uint64(message.amount);\n    return writer;\n  };\n  /**\n   * Encodes the specified SendMoneyTransaction message, length delimited. Does not implicitly {@link SendMoneyTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {ISendMoneyTransaction} message SendMoneyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SendMoneyTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SendMoneyTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SendMoneyTransaction} SendMoneyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SendMoneyTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SendMoneyTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.receiver = reader.string();\n          break;\n\n        case 4:\n          message.amount = reader.uint64();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SendMoneyTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SendMoneyTransaction} SendMoneyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SendMoneyTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SendMoneyTransaction message.\n   * @function verify\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SendMoneyTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.receiver != null && message.hasOwnProperty(\"receiver\")) if (!$util.isString(message.receiver)) return \"receiver: string expected\";\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (!$util.isInteger(message.amount) && !(message.amount && $util.isInteger(message.amount.low) && $util.isInteger(message.amount.high))) return \"amount: integer|Long expected\";\n    return null;\n  };\n  /**\n   * Creates a SendMoneyTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SendMoneyTransaction} SendMoneyTransaction\n   */\n\n\n  SendMoneyTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.SendMoneyTransaction) return object;\n    var message = new $root.SendMoneyTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.receiver != null) message.receiver = String(object.receiver);\n    if (object.amount != null) if ($util.Long) (message.amount = $util.Long.fromValue(object.amount)).unsigned = true;else if (typeof object.amount === \"string\") message.amount = parseInt(object.amount, 10);else if (typeof object.amount === \"number\") message.amount = object.amount;else if (typeof object.amount === \"object\") message.amount = new $util.LongBits(object.amount.low >>> 0, object.amount.high >>> 0).toNumber(true);\n    return message;\n  };\n  /**\n   * Creates a plain object from a SendMoneyTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SendMoneyTransaction\n   * @static\n   * @param {SendMoneyTransaction} message SendMoneyTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SendMoneyTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n      object.receiver = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.amount = options.longs === String ? \"0\" : 0;\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.receiver != null && message.hasOwnProperty(\"receiver\")) object.receiver = message.receiver;\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (typeof message.amount === \"number\") object.amount = options.longs === String ? String(message.amount) : message.amount;else object.amount = options.longs === String ? $util.Long.prototype.toString.call(message.amount) : options.longs === Number ? new $util.LongBits(message.amount.low >>> 0, message.amount.high >>> 0).toNumber(true) : message.amount;\n    return object;\n  };\n  /**\n   * Converts this SendMoneyTransaction to JSON.\n   * @function toJSON\n   * @memberof SendMoneyTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SendMoneyTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SendMoneyTransaction;\n}();\n\n$root.StakeTransaction = function () {\n  /**\n   * Properties of a StakeTransaction.\n   * @exports IStakeTransaction\n   * @interface IStakeTransaction\n   * @property {number|Long|null} [nonce] StakeTransaction nonce\n   * @property {string|null} [originator] StakeTransaction originator\n   * @property {number|Long|null} [amount] StakeTransaction amount\n   * @property {string|null} [publicKey] StakeTransaction publicKey\n   * @property {string|null} [blsPublicKey] StakeTransaction blsPublicKey\n   */\n\n  /**\n   * Constructs a new StakeTransaction.\n   * @exports StakeTransaction\n   * @classdesc Represents a StakeTransaction.\n   * @implements IStakeTransaction\n   * @constructor\n   * @param {IStakeTransaction=} [properties] Properties to set\n   */\n  function StakeTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * StakeTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof StakeTransaction\n   * @instance\n   */\n\n\n  StakeTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * StakeTransaction originator.\n   * @member {string} originator\n   * @memberof StakeTransaction\n   * @instance\n   */\n\n  StakeTransaction.prototype.originator = \"\";\n  /**\n   * StakeTransaction amount.\n   * @member {number|Long} amount\n   * @memberof StakeTransaction\n   * @instance\n   */\n\n  StakeTransaction.prototype.amount = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * StakeTransaction publicKey.\n   * @member {string} publicKey\n   * @memberof StakeTransaction\n   * @instance\n   */\n\n  StakeTransaction.prototype.publicKey = \"\";\n  /**\n   * StakeTransaction blsPublicKey.\n   * @member {string} blsPublicKey\n   * @memberof StakeTransaction\n   * @instance\n   */\n\n  StakeTransaction.prototype.blsPublicKey = \"\";\n  /**\n   * Creates a new StakeTransaction instance using the specified properties.\n   * @function create\n   * @memberof StakeTransaction\n   * @static\n   * @param {IStakeTransaction=} [properties] Properties to set\n   * @returns {StakeTransaction} StakeTransaction instance\n   */\n\n  StakeTransaction.create = function create(properties) {\n    return new StakeTransaction(properties);\n  };\n  /**\n   * Encodes the specified StakeTransaction message. Does not implicitly {@link StakeTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof StakeTransaction\n   * @static\n   * @param {IStakeTransaction} message StakeTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  StakeTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) writer.uint32(\n    /* id 3, wireType 0 =*/\n    24).uint64(message.amount);\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).string(message.publicKey);\n    if (message.blsPublicKey != null && message.hasOwnProperty(\"blsPublicKey\")) writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).string(message.blsPublicKey);\n    return writer;\n  };\n  /**\n   * Encodes the specified StakeTransaction message, length delimited. Does not implicitly {@link StakeTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof StakeTransaction\n   * @static\n   * @param {IStakeTransaction} message StakeTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  StakeTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a StakeTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof StakeTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {StakeTransaction} StakeTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  StakeTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.StakeTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.amount = reader.uint64();\n          break;\n\n        case 4:\n          message.publicKey = reader.string();\n          break;\n\n        case 5:\n          message.blsPublicKey = reader.string();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a StakeTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof StakeTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {StakeTransaction} StakeTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  StakeTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a StakeTransaction message.\n   * @function verify\n   * @memberof StakeTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  StakeTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (!$util.isInteger(message.amount) && !(message.amount && $util.isInteger(message.amount.low) && $util.isInteger(message.amount.high))) return \"amount: integer|Long expected\";\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) if (!$util.isString(message.publicKey)) return \"publicKey: string expected\";\n    if (message.blsPublicKey != null && message.hasOwnProperty(\"blsPublicKey\")) if (!$util.isString(message.blsPublicKey)) return \"blsPublicKey: string expected\";\n    return null;\n  };\n  /**\n   * Creates a StakeTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof StakeTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {StakeTransaction} StakeTransaction\n   */\n\n\n  StakeTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.StakeTransaction) return object;\n    var message = new $root.StakeTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.amount != null) if ($util.Long) (message.amount = $util.Long.fromValue(object.amount)).unsigned = true;else if (typeof object.amount === \"string\") message.amount = parseInt(object.amount, 10);else if (typeof object.amount === \"number\") message.amount = object.amount;else if (typeof object.amount === \"object\") message.amount = new $util.LongBits(object.amount.low >>> 0, object.amount.high >>> 0).toNumber(true);\n    if (object.publicKey != null) message.publicKey = String(object.publicKey);\n    if (object.blsPublicKey != null) message.blsPublicKey = String(object.blsPublicKey);\n    return message;\n  };\n  /**\n   * Creates a plain object from a StakeTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof StakeTransaction\n   * @static\n   * @param {StakeTransaction} message StakeTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  StakeTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.amount = options.longs === String ? \"0\" : 0;\n\n      object.publicKey = \"\";\n      object.blsPublicKey = \"\";\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (typeof message.amount === \"number\") object.amount = options.longs === String ? String(message.amount) : message.amount;else object.amount = options.longs === String ? $util.Long.prototype.toString.call(message.amount) : options.longs === Number ? new $util.LongBits(message.amount.low >>> 0, message.amount.high >>> 0).toNumber(true) : message.amount;\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) object.publicKey = message.publicKey;\n    if (message.blsPublicKey != null && message.hasOwnProperty(\"blsPublicKey\")) object.blsPublicKey = message.blsPublicKey;\n    return object;\n  };\n  /**\n   * Converts this StakeTransaction to JSON.\n   * @function toJSON\n   * @memberof StakeTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  StakeTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return StakeTransaction;\n}();\n\n$root.SwapKeyTransaction = function () {\n  /**\n   * Properties of a SwapKeyTransaction.\n   * @exports ISwapKeyTransaction\n   * @interface ISwapKeyTransaction\n   * @property {number|Long|null} [nonce] SwapKeyTransaction nonce\n   * @property {string|null} [originator] SwapKeyTransaction originator\n   * @property {Uint8Array|null} [curKey] SwapKeyTransaction curKey\n   * @property {Uint8Array|null} [newKey] SwapKeyTransaction newKey\n   */\n\n  /**\n   * Constructs a new SwapKeyTransaction.\n   * @exports SwapKeyTransaction\n   * @classdesc Represents a SwapKeyTransaction.\n   * @implements ISwapKeyTransaction\n   * @constructor\n   * @param {ISwapKeyTransaction=} [properties] Properties to set\n   */\n  function SwapKeyTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * SwapKeyTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof SwapKeyTransaction\n   * @instance\n   */\n\n\n  SwapKeyTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * SwapKeyTransaction originator.\n   * @member {string} originator\n   * @memberof SwapKeyTransaction\n   * @instance\n   */\n\n  SwapKeyTransaction.prototype.originator = \"\";\n  /**\n   * SwapKeyTransaction curKey.\n   * @member {Uint8Array} curKey\n   * @memberof SwapKeyTransaction\n   * @instance\n   */\n\n  SwapKeyTransaction.prototype.curKey = $util.newBuffer([]);\n  /**\n   * SwapKeyTransaction newKey.\n   * @member {Uint8Array} newKey\n   * @memberof SwapKeyTransaction\n   * @instance\n   */\n\n  SwapKeyTransaction.prototype.newKey = $util.newBuffer([]);\n  /**\n   * Creates a new SwapKeyTransaction instance using the specified properties.\n   * @function create\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {ISwapKeyTransaction=} [properties] Properties to set\n   * @returns {SwapKeyTransaction} SwapKeyTransaction instance\n   */\n\n  SwapKeyTransaction.create = function create(properties) {\n    return new SwapKeyTransaction(properties);\n  };\n  /**\n   * Encodes the specified SwapKeyTransaction message. Does not implicitly {@link SwapKeyTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {ISwapKeyTransaction} message SwapKeyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SwapKeyTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.curKey != null && message.hasOwnProperty(\"curKey\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).bytes(message.curKey);\n    if (message.newKey != null && message.hasOwnProperty(\"newKey\")) writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).bytes(message.newKey);\n    return writer;\n  };\n  /**\n   * Encodes the specified SwapKeyTransaction message, length delimited. Does not implicitly {@link SwapKeyTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {ISwapKeyTransaction} message SwapKeyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SwapKeyTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SwapKeyTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SwapKeyTransaction} SwapKeyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SwapKeyTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SwapKeyTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.curKey = reader.bytes();\n          break;\n\n        case 4:\n          message.newKey = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SwapKeyTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SwapKeyTransaction} SwapKeyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SwapKeyTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SwapKeyTransaction message.\n   * @function verify\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SwapKeyTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.curKey != null && message.hasOwnProperty(\"curKey\")) if (!(message.curKey && typeof message.curKey.length === \"number\" || $util.isString(message.curKey))) return \"curKey: buffer expected\";\n    if (message.newKey != null && message.hasOwnProperty(\"newKey\")) if (!(message.newKey && typeof message.newKey.length === \"number\" || $util.isString(message.newKey))) return \"newKey: buffer expected\";\n    return null;\n  };\n  /**\n   * Creates a SwapKeyTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SwapKeyTransaction} SwapKeyTransaction\n   */\n\n\n  SwapKeyTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.SwapKeyTransaction) return object;\n    var message = new $root.SwapKeyTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.curKey != null) if (typeof object.curKey === \"string\") $util.base64.decode(object.curKey, message.curKey = $util.newBuffer($util.base64.length(object.curKey)), 0);else if (object.curKey.length) message.curKey = object.curKey;\n    if (object.newKey != null) if (typeof object.newKey === \"string\") $util.base64.decode(object.newKey, message.newKey = $util.newBuffer($util.base64.length(object.newKey)), 0);else if (object.newKey.length) message.newKey = object.newKey;\n    return message;\n  };\n  /**\n   * Creates a plain object from a SwapKeyTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SwapKeyTransaction\n   * @static\n   * @param {SwapKeyTransaction} message SwapKeyTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SwapKeyTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n      if (options.bytes === String) object.curKey = \"\";else {\n        object.curKey = [];\n        if (options.bytes !== Array) object.curKey = $util.newBuffer(object.curKey);\n      }\n      if (options.bytes === String) object.newKey = \"\";else {\n        object.newKey = [];\n        if (options.bytes !== Array) object.newKey = $util.newBuffer(object.newKey);\n      }\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.curKey != null && message.hasOwnProperty(\"curKey\")) object.curKey = options.bytes === String ? $util.base64.encode(message.curKey, 0, message.curKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.curKey) : message.curKey;\n    if (message.newKey != null && message.hasOwnProperty(\"newKey\")) object.newKey = options.bytes === String ? $util.base64.encode(message.newKey, 0, message.newKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.newKey) : message.newKey;\n    return object;\n  };\n  /**\n   * Converts this SwapKeyTransaction to JSON.\n   * @function toJSON\n   * @memberof SwapKeyTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SwapKeyTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SwapKeyTransaction;\n}();\n\n$root.AddKeyTransaction = function () {\n  /**\n   * Properties of an AddKeyTransaction.\n   * @exports IAddKeyTransaction\n   * @interface IAddKeyTransaction\n   * @property {number|Long|null} [nonce] AddKeyTransaction nonce\n   * @property {string|null} [originator] AddKeyTransaction originator\n   * @property {Uint8Array|null} [newKey] AddKeyTransaction newKey\n   * @property {IAccessKey|null} [accessKey] AddKeyTransaction accessKey\n   */\n\n  /**\n   * Constructs a new AddKeyTransaction.\n   * @exports AddKeyTransaction\n   * @classdesc Represents an AddKeyTransaction.\n   * @implements IAddKeyTransaction\n   * @constructor\n   * @param {IAddKeyTransaction=} [properties] Properties to set\n   */\n  function AddKeyTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * AddKeyTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof AddKeyTransaction\n   * @instance\n   */\n\n\n  AddKeyTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * AddKeyTransaction originator.\n   * @member {string} originator\n   * @memberof AddKeyTransaction\n   * @instance\n   */\n\n  AddKeyTransaction.prototype.originator = \"\";\n  /**\n   * AddKeyTransaction newKey.\n   * @member {Uint8Array} newKey\n   * @memberof AddKeyTransaction\n   * @instance\n   */\n\n  AddKeyTransaction.prototype.newKey = $util.newBuffer([]);\n  /**\n   * AddKeyTransaction accessKey.\n   * @member {IAccessKey|null|undefined} accessKey\n   * @memberof AddKeyTransaction\n   * @instance\n   */\n\n  AddKeyTransaction.prototype.accessKey = null;\n  /**\n   * Creates a new AddKeyTransaction instance using the specified properties.\n   * @function create\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {IAddKeyTransaction=} [properties] Properties to set\n   * @returns {AddKeyTransaction} AddKeyTransaction instance\n   */\n\n  AddKeyTransaction.create = function create(properties) {\n    return new AddKeyTransaction(properties);\n  };\n  /**\n   * Encodes the specified AddKeyTransaction message. Does not implicitly {@link AddKeyTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {IAddKeyTransaction} message AddKeyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  AddKeyTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.newKey != null && message.hasOwnProperty(\"newKey\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).bytes(message.newKey);\n    if (message.accessKey != null && message.hasOwnProperty(\"accessKey\")) $root.AccessKey.encode(message.accessKey, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified AddKeyTransaction message, length delimited. Does not implicitly {@link AddKeyTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {IAddKeyTransaction} message AddKeyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  AddKeyTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes an AddKeyTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {AddKeyTransaction} AddKeyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  AddKeyTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.AddKeyTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.newKey = reader.bytes();\n          break;\n\n        case 4:\n          message.accessKey = $root.AccessKey.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes an AddKeyTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {AddKeyTransaction} AddKeyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  AddKeyTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies an AddKeyTransaction message.\n   * @function verify\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  AddKeyTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.newKey != null && message.hasOwnProperty(\"newKey\")) if (!(message.newKey && typeof message.newKey.length === \"number\" || $util.isString(message.newKey))) return \"newKey: buffer expected\";\n\n    if (message.accessKey != null && message.hasOwnProperty(\"accessKey\")) {\n      var error = $root.AccessKey.verify(message.accessKey);\n      if (error) return \"accessKey.\" + error;\n    }\n\n    return null;\n  };\n  /**\n   * Creates an AddKeyTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {AddKeyTransaction} AddKeyTransaction\n   */\n\n\n  AddKeyTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.AddKeyTransaction) return object;\n    var message = new $root.AddKeyTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.newKey != null) if (typeof object.newKey === \"string\") $util.base64.decode(object.newKey, message.newKey = $util.newBuffer($util.base64.length(object.newKey)), 0);else if (object.newKey.length) message.newKey = object.newKey;\n\n    if (object.accessKey != null) {\n      if (typeof object.accessKey !== \"object\") throw TypeError(\".AddKeyTransaction.accessKey: object expected\");\n      message.accessKey = $root.AccessKey.fromObject(object.accessKey);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from an AddKeyTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof AddKeyTransaction\n   * @static\n   * @param {AddKeyTransaction} message AddKeyTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  AddKeyTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n      if (options.bytes === String) object.newKey = \"\";else {\n        object.newKey = [];\n        if (options.bytes !== Array) object.newKey = $util.newBuffer(object.newKey);\n      }\n      object.accessKey = null;\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.newKey != null && message.hasOwnProperty(\"newKey\")) object.newKey = options.bytes === String ? $util.base64.encode(message.newKey, 0, message.newKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.newKey) : message.newKey;\n    if (message.accessKey != null && message.hasOwnProperty(\"accessKey\")) object.accessKey = $root.AccessKey.toObject(message.accessKey, options);\n    return object;\n  };\n  /**\n   * Converts this AddKeyTransaction to JSON.\n   * @function toJSON\n   * @memberof AddKeyTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  AddKeyTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return AddKeyTransaction;\n}();\n\n$root.DeleteKeyTransaction = function () {\n  /**\n   * Properties of a DeleteKeyTransaction.\n   * @exports IDeleteKeyTransaction\n   * @interface IDeleteKeyTransaction\n   * @property {number|Long|null} [nonce] DeleteKeyTransaction nonce\n   * @property {string|null} [originator] DeleteKeyTransaction originator\n   * @property {Uint8Array|null} [curKey] DeleteKeyTransaction curKey\n   */\n\n  /**\n   * Constructs a new DeleteKeyTransaction.\n   * @exports DeleteKeyTransaction\n   * @classdesc Represents a DeleteKeyTransaction.\n   * @implements IDeleteKeyTransaction\n   * @constructor\n   * @param {IDeleteKeyTransaction=} [properties] Properties to set\n   */\n  function DeleteKeyTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * DeleteKeyTransaction nonce.\n   * @member {number|Long} nonce\n   * @memberof DeleteKeyTransaction\n   * @instance\n   */\n\n\n  DeleteKeyTransaction.prototype.nonce = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * DeleteKeyTransaction originator.\n   * @member {string} originator\n   * @memberof DeleteKeyTransaction\n   * @instance\n   */\n\n  DeleteKeyTransaction.prototype.originator = \"\";\n  /**\n   * DeleteKeyTransaction curKey.\n   * @member {Uint8Array} curKey\n   * @memberof DeleteKeyTransaction\n   * @instance\n   */\n\n  DeleteKeyTransaction.prototype.curKey = $util.newBuffer([]);\n  /**\n   * Creates a new DeleteKeyTransaction instance using the specified properties.\n   * @function create\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {IDeleteKeyTransaction=} [properties] Properties to set\n   * @returns {DeleteKeyTransaction} DeleteKeyTransaction instance\n   */\n\n  DeleteKeyTransaction.create = function create(properties) {\n    return new DeleteKeyTransaction(properties);\n  };\n  /**\n   * Encodes the specified DeleteKeyTransaction message. Does not implicitly {@link DeleteKeyTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {IDeleteKeyTransaction} message DeleteKeyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  DeleteKeyTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.nonce);\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).string(message.originator);\n    if (message.curKey != null && message.hasOwnProperty(\"curKey\")) writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).bytes(message.curKey);\n    return writer;\n  };\n  /**\n   * Encodes the specified DeleteKeyTransaction message, length delimited. Does not implicitly {@link DeleteKeyTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {IDeleteKeyTransaction} message DeleteKeyTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  DeleteKeyTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a DeleteKeyTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {DeleteKeyTransaction} DeleteKeyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  DeleteKeyTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.DeleteKeyTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.nonce = reader.uint64();\n          break;\n\n        case 2:\n          message.originator = reader.string();\n          break;\n\n        case 3:\n          message.curKey = reader.bytes();\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a DeleteKeyTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {DeleteKeyTransaction} DeleteKeyTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  DeleteKeyTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a DeleteKeyTransaction message.\n   * @function verify\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  DeleteKeyTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (!$util.isInteger(message.nonce) && !(message.nonce && $util.isInteger(message.nonce.low) && $util.isInteger(message.nonce.high))) return \"nonce: integer|Long expected\";\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) if (!$util.isString(message.originator)) return \"originator: string expected\";\n    if (message.curKey != null && message.hasOwnProperty(\"curKey\")) if (!(message.curKey && typeof message.curKey.length === \"number\" || $util.isString(message.curKey))) return \"curKey: buffer expected\";\n    return null;\n  };\n  /**\n   * Creates a DeleteKeyTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {DeleteKeyTransaction} DeleteKeyTransaction\n   */\n\n\n  DeleteKeyTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.DeleteKeyTransaction) return object;\n    var message = new $root.DeleteKeyTransaction();\n    if (object.nonce != null) if ($util.Long) (message.nonce = $util.Long.fromValue(object.nonce)).unsigned = true;else if (typeof object.nonce === \"string\") message.nonce = parseInt(object.nonce, 10);else if (typeof object.nonce === \"number\") message.nonce = object.nonce;else if (typeof object.nonce === \"object\") message.nonce = new $util.LongBits(object.nonce.low >>> 0, object.nonce.high >>> 0).toNumber(true);\n    if (object.originator != null) message.originator = String(object.originator);\n    if (object.curKey != null) if (typeof object.curKey === \"string\") $util.base64.decode(object.curKey, message.curKey = $util.newBuffer($util.base64.length(object.curKey)), 0);else if (object.curKey.length) message.curKey = object.curKey;\n    return message;\n  };\n  /**\n   * Creates a plain object from a DeleteKeyTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof DeleteKeyTransaction\n   * @static\n   * @param {DeleteKeyTransaction} message DeleteKeyTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  DeleteKeyTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.nonce = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.nonce = options.longs === String ? \"0\" : 0;\n\n      object.originator = \"\";\n      if (options.bytes === String) object.curKey = \"\";else {\n        object.curKey = [];\n        if (options.bytes !== Array) object.curKey = $util.newBuffer(object.curKey);\n      }\n    }\n\n    if (message.nonce != null && message.hasOwnProperty(\"nonce\")) if (typeof message.nonce === \"number\") object.nonce = options.longs === String ? String(message.nonce) : message.nonce;else object.nonce = options.longs === String ? $util.Long.prototype.toString.call(message.nonce) : options.longs === Number ? new $util.LongBits(message.nonce.low >>> 0, message.nonce.high >>> 0).toNumber(true) : message.nonce;\n    if (message.originator != null && message.hasOwnProperty(\"originator\")) object.originator = message.originator;\n    if (message.curKey != null && message.hasOwnProperty(\"curKey\")) object.curKey = options.bytes === String ? $util.base64.encode(message.curKey, 0, message.curKey.length) : options.bytes === Array ? Array.prototype.slice.call(message.curKey) : message.curKey;\n    return object;\n  };\n  /**\n   * Converts this DeleteKeyTransaction to JSON.\n   * @function toJSON\n   * @memberof DeleteKeyTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  DeleteKeyTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return DeleteKeyTransaction;\n}();\n\n$root.SignedTransaction = function () {\n  /**\n   * Properties of a SignedTransaction.\n   * @exports ISignedTransaction\n   * @interface ISignedTransaction\n   * @property {Uint8Array|null} [signature] SignedTransaction signature\n   * @property {google.protobuf.IBytesValue|null} [publicKey] SignedTransaction publicKey\n   * @property {ICreateAccountTransaction|null} [createAccount] SignedTransaction createAccount\n   * @property {IDeployContractTransaction|null} [deployContract] SignedTransaction deployContract\n   * @property {IFunctionCallTransaction|null} [functionCall] SignedTransaction functionCall\n   * @property {ISendMoneyTransaction|null} [sendMoney] SignedTransaction sendMoney\n   * @property {IStakeTransaction|null} [stake] SignedTransaction stake\n   * @property {ISwapKeyTransaction|null} [swapKey] SignedTransaction swapKey\n   * @property {IAddKeyTransaction|null} [addKey] SignedTransaction addKey\n   * @property {IDeleteKeyTransaction|null} [deleteKey] SignedTransaction deleteKey\n   */\n\n  /**\n   * Constructs a new SignedTransaction.\n   * @exports SignedTransaction\n   * @classdesc Represents a SignedTransaction.\n   * @implements ISignedTransaction\n   * @constructor\n   * @param {ISignedTransaction=} [properties] Properties to set\n   */\n  function SignedTransaction(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * SignedTransaction signature.\n   * @member {Uint8Array} signature\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n\n  SignedTransaction.prototype.signature = $util.newBuffer([]);\n  /**\n   * SignedTransaction publicKey.\n   * @member {google.protobuf.IBytesValue|null|undefined} publicKey\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.publicKey = null;\n  /**\n   * SignedTransaction createAccount.\n   * @member {ICreateAccountTransaction|null|undefined} createAccount\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.createAccount = null;\n  /**\n   * SignedTransaction deployContract.\n   * @member {IDeployContractTransaction|null|undefined} deployContract\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.deployContract = null;\n  /**\n   * SignedTransaction functionCall.\n   * @member {IFunctionCallTransaction|null|undefined} functionCall\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.functionCall = null;\n  /**\n   * SignedTransaction sendMoney.\n   * @member {ISendMoneyTransaction|null|undefined} sendMoney\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.sendMoney = null;\n  /**\n   * SignedTransaction stake.\n   * @member {IStakeTransaction|null|undefined} stake\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.stake = null;\n  /**\n   * SignedTransaction swapKey.\n   * @member {ISwapKeyTransaction|null|undefined} swapKey\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.swapKey = null;\n  /**\n   * SignedTransaction addKey.\n   * @member {IAddKeyTransaction|null|undefined} addKey\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.addKey = null;\n  /**\n   * SignedTransaction deleteKey.\n   * @member {IDeleteKeyTransaction|null|undefined} deleteKey\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  SignedTransaction.prototype.deleteKey = null; // OneOf field names bound to virtual getters and setters\n\n  var $oneOfFields;\n  /**\n   * SignedTransaction body.\n   * @member {\"createAccount\"|\"deployContract\"|\"functionCall\"|\"sendMoney\"|\"stake\"|\"swapKey\"|\"addKey\"|\"deleteKey\"|undefined} body\n   * @memberof SignedTransaction\n   * @instance\n   */\n\n  Object.defineProperty(SignedTransaction.prototype, \"body\", {\n    get: $util.oneOfGetter($oneOfFields = [\"createAccount\", \"deployContract\", \"functionCall\", \"sendMoney\", \"stake\", \"swapKey\", \"addKey\", \"deleteKey\"]),\n    set: $util.oneOfSetter($oneOfFields)\n  });\n  /**\n   * Creates a new SignedTransaction instance using the specified properties.\n   * @function create\n   * @memberof SignedTransaction\n   * @static\n   * @param {ISignedTransaction=} [properties] Properties to set\n   * @returns {SignedTransaction} SignedTransaction instance\n   */\n\n  SignedTransaction.create = function create(properties) {\n    return new SignedTransaction(properties);\n  };\n  /**\n   * Encodes the specified SignedTransaction message. Does not implicitly {@link SignedTransaction.verify|verify} messages.\n   * @function encode\n   * @memberof SignedTransaction\n   * @static\n   * @param {ISignedTransaction} message SignedTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SignedTransaction.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.signature != null && message.hasOwnProperty(\"signature\")) writer.uint32(\n    /* id 1, wireType 2 =*/\n    10).bytes(message.signature);\n    if (message.createAccount != null && message.hasOwnProperty(\"createAccount\")) $root.CreateAccountTransaction.encode(message.createAccount, writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.deployContract != null && message.hasOwnProperty(\"deployContract\")) $root.DeployContractTransaction.encode(message.deployContract, writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).fork()).ldelim();\n    if (message.functionCall != null && message.hasOwnProperty(\"functionCall\")) $root.FunctionCallTransaction.encode(message.functionCall, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    if (message.sendMoney != null && message.hasOwnProperty(\"sendMoney\")) $root.SendMoneyTransaction.encode(message.sendMoney, writer.uint32(\n    /* id 5, wireType 2 =*/\n    42).fork()).ldelim();\n    if (message.stake != null && message.hasOwnProperty(\"stake\")) $root.StakeTransaction.encode(message.stake, writer.uint32(\n    /* id 6, wireType 2 =*/\n    50).fork()).ldelim();\n    if (message.swapKey != null && message.hasOwnProperty(\"swapKey\")) $root.SwapKeyTransaction.encode(message.swapKey, writer.uint32(\n    /* id 7, wireType 2 =*/\n    58).fork()).ldelim();\n    if (message.addKey != null && message.hasOwnProperty(\"addKey\")) $root.AddKeyTransaction.encode(message.addKey, writer.uint32(\n    /* id 8, wireType 2 =*/\n    66).fork()).ldelim();\n    if (message.deleteKey != null && message.hasOwnProperty(\"deleteKey\")) $root.DeleteKeyTransaction.encode(message.deleteKey, writer.uint32(\n    /* id 9, wireType 2 =*/\n    74).fork()).ldelim();\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) $root.google.protobuf.BytesValue.encode(message.publicKey, writer.uint32(\n    /* id 10, wireType 2 =*/\n    82).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified SignedTransaction message, length delimited. Does not implicitly {@link SignedTransaction.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof SignedTransaction\n   * @static\n   * @param {ISignedTransaction} message SignedTransaction message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  SignedTransaction.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes a SignedTransaction message from the specified reader or buffer.\n   * @function decode\n   * @memberof SignedTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {SignedTransaction} SignedTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SignedTransaction.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.SignedTransaction();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.signature = reader.bytes();\n          break;\n\n        case 10:\n          message.publicKey = $root.google.protobuf.BytesValue.decode(reader, reader.uint32());\n          break;\n\n        case 2:\n          message.createAccount = $root.CreateAccountTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.deployContract = $root.DeployContractTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.functionCall = $root.FunctionCallTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 5:\n          message.sendMoney = $root.SendMoneyTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 6:\n          message.stake = $root.StakeTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 7:\n          message.swapKey = $root.SwapKeyTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 8:\n          message.addKey = $root.AddKeyTransaction.decode(reader, reader.uint32());\n          break;\n\n        case 9:\n          message.deleteKey = $root.DeleteKeyTransaction.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes a SignedTransaction message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof SignedTransaction\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {SignedTransaction} SignedTransaction\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  SignedTransaction.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies a SignedTransaction message.\n   * @function verify\n   * @memberof SignedTransaction\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  SignedTransaction.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    var properties = {};\n    if (message.signature != null && message.hasOwnProperty(\"signature\")) if (!(message.signature && typeof message.signature.length === \"number\" || $util.isString(message.signature))) return \"signature: buffer expected\";\n\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) {\n      var error = $root.google.protobuf.BytesValue.verify(message.publicKey);\n      if (error) return \"publicKey.\" + error;\n    }\n\n    if (message.createAccount != null && message.hasOwnProperty(\"createAccount\")) {\n      properties.body = 1;\n      {\n        var error = $root.CreateAccountTransaction.verify(message.createAccount);\n        if (error) return \"createAccount.\" + error;\n      }\n    }\n\n    if (message.deployContract != null && message.hasOwnProperty(\"deployContract\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.DeployContractTransaction.verify(message.deployContract);\n        if (error) return \"deployContract.\" + error;\n      }\n    }\n\n    if (message.functionCall != null && message.hasOwnProperty(\"functionCall\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.FunctionCallTransaction.verify(message.functionCall);\n        if (error) return \"functionCall.\" + error;\n      }\n    }\n\n    if (message.sendMoney != null && message.hasOwnProperty(\"sendMoney\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.SendMoneyTransaction.verify(message.sendMoney);\n        if (error) return \"sendMoney.\" + error;\n      }\n    }\n\n    if (message.stake != null && message.hasOwnProperty(\"stake\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.StakeTransaction.verify(message.stake);\n        if (error) return \"stake.\" + error;\n      }\n    }\n\n    if (message.swapKey != null && message.hasOwnProperty(\"swapKey\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.SwapKeyTransaction.verify(message.swapKey);\n        if (error) return \"swapKey.\" + error;\n      }\n    }\n\n    if (message.addKey != null && message.hasOwnProperty(\"addKey\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.AddKeyTransaction.verify(message.addKey);\n        if (error) return \"addKey.\" + error;\n      }\n    }\n\n    if (message.deleteKey != null && message.hasOwnProperty(\"deleteKey\")) {\n      if (properties.body === 1) return \"body: multiple values\";\n      properties.body = 1;\n      {\n        var error = $root.DeleteKeyTransaction.verify(message.deleteKey);\n        if (error) return \"deleteKey.\" + error;\n      }\n    }\n\n    return null;\n  };\n  /**\n   * Creates a SignedTransaction message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof SignedTransaction\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {SignedTransaction} SignedTransaction\n   */\n\n\n  SignedTransaction.fromObject = function fromObject(object) {\n    if (object instanceof $root.SignedTransaction) return object;\n    var message = new $root.SignedTransaction();\n    if (object.signature != null) if (typeof object.signature === \"string\") $util.base64.decode(object.signature, message.signature = $util.newBuffer($util.base64.length(object.signature)), 0);else if (object.signature.length) message.signature = object.signature;\n\n    if (object.publicKey != null) {\n      if (typeof object.publicKey !== \"object\") throw TypeError(\".SignedTransaction.publicKey: object expected\");\n      message.publicKey = $root.google.protobuf.BytesValue.fromObject(object.publicKey);\n    }\n\n    if (object.createAccount != null) {\n      if (typeof object.createAccount !== \"object\") throw TypeError(\".SignedTransaction.createAccount: object expected\");\n      message.createAccount = $root.CreateAccountTransaction.fromObject(object.createAccount);\n    }\n\n    if (object.deployContract != null) {\n      if (typeof object.deployContract !== \"object\") throw TypeError(\".SignedTransaction.deployContract: object expected\");\n      message.deployContract = $root.DeployContractTransaction.fromObject(object.deployContract);\n    }\n\n    if (object.functionCall != null) {\n      if (typeof object.functionCall !== \"object\") throw TypeError(\".SignedTransaction.functionCall: object expected\");\n      message.functionCall = $root.FunctionCallTransaction.fromObject(object.functionCall);\n    }\n\n    if (object.sendMoney != null) {\n      if (typeof object.sendMoney !== \"object\") throw TypeError(\".SignedTransaction.sendMoney: object expected\");\n      message.sendMoney = $root.SendMoneyTransaction.fromObject(object.sendMoney);\n    }\n\n    if (object.stake != null) {\n      if (typeof object.stake !== \"object\") throw TypeError(\".SignedTransaction.stake: object expected\");\n      message.stake = $root.StakeTransaction.fromObject(object.stake);\n    }\n\n    if (object.swapKey != null) {\n      if (typeof object.swapKey !== \"object\") throw TypeError(\".SignedTransaction.swapKey: object expected\");\n      message.swapKey = $root.SwapKeyTransaction.fromObject(object.swapKey);\n    }\n\n    if (object.addKey != null) {\n      if (typeof object.addKey !== \"object\") throw TypeError(\".SignedTransaction.addKey: object expected\");\n      message.addKey = $root.AddKeyTransaction.fromObject(object.addKey);\n    }\n\n    if (object.deleteKey != null) {\n      if (typeof object.deleteKey !== \"object\") throw TypeError(\".SignedTransaction.deleteKey: object expected\");\n      message.deleteKey = $root.DeleteKeyTransaction.fromObject(object.deleteKey);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from a SignedTransaction message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof SignedTransaction\n   * @static\n   * @param {SignedTransaction} message SignedTransaction\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  SignedTransaction.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if (options.bytes === String) object.signature = \"\";else {\n        object.signature = [];\n        if (options.bytes !== Array) object.signature = $util.newBuffer(object.signature);\n      }\n      object.publicKey = null;\n    }\n\n    if (message.signature != null && message.hasOwnProperty(\"signature\")) object.signature = options.bytes === String ? $util.base64.encode(message.signature, 0, message.signature.length) : options.bytes === Array ? Array.prototype.slice.call(message.signature) : message.signature;\n\n    if (message.createAccount != null && message.hasOwnProperty(\"createAccount\")) {\n      object.createAccount = $root.CreateAccountTransaction.toObject(message.createAccount, options);\n      if (options.oneofs) object.body = \"createAccount\";\n    }\n\n    if (message.deployContract != null && message.hasOwnProperty(\"deployContract\")) {\n      object.deployContract = $root.DeployContractTransaction.toObject(message.deployContract, options);\n      if (options.oneofs) object.body = \"deployContract\";\n    }\n\n    if (message.functionCall != null && message.hasOwnProperty(\"functionCall\")) {\n      object.functionCall = $root.FunctionCallTransaction.toObject(message.functionCall, options);\n      if (options.oneofs) object.body = \"functionCall\";\n    }\n\n    if (message.sendMoney != null && message.hasOwnProperty(\"sendMoney\")) {\n      object.sendMoney = $root.SendMoneyTransaction.toObject(message.sendMoney, options);\n      if (options.oneofs) object.body = \"sendMoney\";\n    }\n\n    if (message.stake != null && message.hasOwnProperty(\"stake\")) {\n      object.stake = $root.StakeTransaction.toObject(message.stake, options);\n      if (options.oneofs) object.body = \"stake\";\n    }\n\n    if (message.swapKey != null && message.hasOwnProperty(\"swapKey\")) {\n      object.swapKey = $root.SwapKeyTransaction.toObject(message.swapKey, options);\n      if (options.oneofs) object.body = \"swapKey\";\n    }\n\n    if (message.addKey != null && message.hasOwnProperty(\"addKey\")) {\n      object.addKey = $root.AddKeyTransaction.toObject(message.addKey, options);\n      if (options.oneofs) object.body = \"addKey\";\n    }\n\n    if (message.deleteKey != null && message.hasOwnProperty(\"deleteKey\")) {\n      object.deleteKey = $root.DeleteKeyTransaction.toObject(message.deleteKey, options);\n      if (options.oneofs) object.body = \"deleteKey\";\n    }\n\n    if (message.publicKey != null && message.hasOwnProperty(\"publicKey\")) object.publicKey = $root.google.protobuf.BytesValue.toObject(message.publicKey, options);\n    return object;\n  };\n  /**\n   * Converts this SignedTransaction to JSON.\n   * @function toJSON\n   * @memberof SignedTransaction\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  SignedTransaction.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return SignedTransaction;\n}();\n\n$root.google = function () {\n  /**\n   * Namespace google.\n   * @exports google\n   * @namespace\n   */\n  var google = {};\n\n  google.protobuf = function () {\n    /**\n     * Namespace protobuf.\n     * @memberof google\n     * @namespace\n     */\n    var protobuf = {};\n\n    protobuf.DoubleValue = function () {\n      /**\n       * Properties of a DoubleValue.\n       * @memberof google.protobuf\n       * @interface IDoubleValue\n       * @property {number|null} [value] DoubleValue value\n       */\n\n      /**\n       * Constructs a new DoubleValue.\n       * @memberof google.protobuf\n       * @classdesc Represents a DoubleValue.\n       * @implements IDoubleValue\n       * @constructor\n       * @param {google.protobuf.IDoubleValue=} [properties] Properties to set\n       */\n      function DoubleValue(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * DoubleValue value.\n       * @member {number} value\n       * @memberof google.protobuf.DoubleValue\n       * @instance\n       */\n\n\n      DoubleValue.prototype.value = 0;\n      /**\n       * Creates a new DoubleValue instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {google.protobuf.IDoubleValue=} [properties] Properties to set\n       * @returns {google.protobuf.DoubleValue} DoubleValue instance\n       */\n\n      DoubleValue.create = function create(properties) {\n        return new DoubleValue(properties);\n      };\n      /**\n       * Encodes the specified DoubleValue message. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      DoubleValue.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 1 =*/\n        9).double(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified DoubleValue message, length delimited. Does not implicitly {@link google.protobuf.DoubleValue.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {google.protobuf.IDoubleValue} message DoubleValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      DoubleValue.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a DoubleValue message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.DoubleValue} DoubleValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      DoubleValue.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.DoubleValue();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.double();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a DoubleValue message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.DoubleValue} DoubleValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      DoubleValue.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a DoubleValue message.\n       * @function verify\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      DoubleValue.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value !== \"number\") return \"value: number expected\";\n        return null;\n      };\n      /**\n       * Creates a DoubleValue message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.DoubleValue} DoubleValue\n       */\n\n\n      DoubleValue.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.DoubleValue) return object;\n        var message = new $root.google.protobuf.DoubleValue();\n        if (object.value != null) message.value = Number(object.value);\n        return message;\n      };\n      /**\n       * Creates a plain object from a DoubleValue message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.DoubleValue\n       * @static\n       * @param {google.protobuf.DoubleValue} message DoubleValue\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      DoubleValue.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) object.value = 0;\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n        return object;\n      };\n      /**\n       * Converts this DoubleValue to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.DoubleValue\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      DoubleValue.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return DoubleValue;\n    }();\n\n    protobuf.FloatValue = function () {\n      /**\n       * Properties of a FloatValue.\n       * @memberof google.protobuf\n       * @interface IFloatValue\n       * @property {number|null} [value] FloatValue value\n       */\n\n      /**\n       * Constructs a new FloatValue.\n       * @memberof google.protobuf\n       * @classdesc Represents a FloatValue.\n       * @implements IFloatValue\n       * @constructor\n       * @param {google.protobuf.IFloatValue=} [properties] Properties to set\n       */\n      function FloatValue(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * FloatValue value.\n       * @member {number} value\n       * @memberof google.protobuf.FloatValue\n       * @instance\n       */\n\n\n      FloatValue.prototype.value = 0;\n      /**\n       * Creates a new FloatValue instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {google.protobuf.IFloatValue=} [properties] Properties to set\n       * @returns {google.protobuf.FloatValue} FloatValue instance\n       */\n\n      FloatValue.create = function create(properties) {\n        return new FloatValue(properties);\n      };\n      /**\n       * Encodes the specified FloatValue message. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      FloatValue.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 5 =*/\n        13).float(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified FloatValue message, length delimited. Does not implicitly {@link google.protobuf.FloatValue.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {google.protobuf.IFloatValue} message FloatValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      FloatValue.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a FloatValue message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.FloatValue} FloatValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      FloatValue.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.FloatValue();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.float();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a FloatValue message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.FloatValue} FloatValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      FloatValue.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a FloatValue message.\n       * @function verify\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      FloatValue.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value !== \"number\") return \"value: number expected\";\n        return null;\n      };\n      /**\n       * Creates a FloatValue message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.FloatValue} FloatValue\n       */\n\n\n      FloatValue.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.FloatValue) return object;\n        var message = new $root.google.protobuf.FloatValue();\n        if (object.value != null) message.value = Number(object.value);\n        return message;\n      };\n      /**\n       * Creates a plain object from a FloatValue message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.FloatValue\n       * @static\n       * @param {google.protobuf.FloatValue} message FloatValue\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      FloatValue.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) object.value = 0;\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.json && !isFinite(message.value) ? String(message.value) : message.value;\n        return object;\n      };\n      /**\n       * Converts this FloatValue to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.FloatValue\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      FloatValue.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return FloatValue;\n    }();\n\n    protobuf.Int64Value = function () {\n      /**\n       * Properties of an Int64Value.\n       * @memberof google.protobuf\n       * @interface IInt64Value\n       * @property {number|Long|null} [value] Int64Value value\n       */\n\n      /**\n       * Constructs a new Int64Value.\n       * @memberof google.protobuf\n       * @classdesc Represents an Int64Value.\n       * @implements IInt64Value\n       * @constructor\n       * @param {google.protobuf.IInt64Value=} [properties] Properties to set\n       */\n      function Int64Value(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * Int64Value value.\n       * @member {number|Long} value\n       * @memberof google.protobuf.Int64Value\n       * @instance\n       */\n\n\n      Int64Value.prototype.value = $util.Long ? $util.Long.fromBits(0, 0, false) : 0;\n      /**\n       * Creates a new Int64Value instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {google.protobuf.IInt64Value=} [properties] Properties to set\n       * @returns {google.protobuf.Int64Value} Int64Value instance\n       */\n\n      Int64Value.create = function create(properties) {\n        return new Int64Value(properties);\n      };\n      /**\n       * Encodes the specified Int64Value message. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      Int64Value.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 0 =*/\n        8).int64(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified Int64Value message, length delimited. Does not implicitly {@link google.protobuf.Int64Value.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {google.protobuf.IInt64Value} message Int64Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      Int64Value.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes an Int64Value message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.Int64Value} Int64Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      Int64Value.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.Int64Value();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.int64();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes an Int64Value message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.Int64Value} Int64Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      Int64Value.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies an Int64Value message.\n       * @function verify\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      Int64Value.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high))) return \"value: integer|Long expected\";\n        return null;\n      };\n      /**\n       * Creates an Int64Value message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.Int64Value} Int64Value\n       */\n\n\n      Int64Value.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.Int64Value) return object;\n        var message = new $root.google.protobuf.Int64Value();\n        if (object.value != null) if ($util.Long) (message.value = $util.Long.fromValue(object.value)).unsigned = false;else if (typeof object.value === \"string\") message.value = parseInt(object.value, 10);else if (typeof object.value === \"number\") message.value = object.value;else if (typeof object.value === \"object\") message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber();\n        return message;\n      };\n      /**\n       * Creates a plain object from an Int64Value message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.Int64Value\n       * @static\n       * @param {google.protobuf.Int64Value} message Int64Value\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      Int64Value.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) if ($util.Long) {\n          var long = new $util.Long(0, 0, false);\n          object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.value = options.longs === String ? \"0\" : 0;\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value === \"number\") object.value = options.longs === String ? String(message.value) : message.value;else object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber() : message.value;\n        return object;\n      };\n      /**\n       * Converts this Int64Value to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.Int64Value\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      Int64Value.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return Int64Value;\n    }();\n\n    protobuf.UInt64Value = function () {\n      /**\n       * Properties of a UInt64Value.\n       * @memberof google.protobuf\n       * @interface IUInt64Value\n       * @property {number|Long|null} [value] UInt64Value value\n       */\n\n      /**\n       * Constructs a new UInt64Value.\n       * @memberof google.protobuf\n       * @classdesc Represents a UInt64Value.\n       * @implements IUInt64Value\n       * @constructor\n       * @param {google.protobuf.IUInt64Value=} [properties] Properties to set\n       */\n      function UInt64Value(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * UInt64Value value.\n       * @member {number|Long} value\n       * @memberof google.protobuf.UInt64Value\n       * @instance\n       */\n\n\n      UInt64Value.prototype.value = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n      /**\n       * Creates a new UInt64Value instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {google.protobuf.IUInt64Value=} [properties] Properties to set\n       * @returns {google.protobuf.UInt64Value} UInt64Value instance\n       */\n\n      UInt64Value.create = function create(properties) {\n        return new UInt64Value(properties);\n      };\n      /**\n       * Encodes the specified UInt64Value message. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      UInt64Value.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 0 =*/\n        8).uint64(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified UInt64Value message, length delimited. Does not implicitly {@link google.protobuf.UInt64Value.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {google.protobuf.IUInt64Value} message UInt64Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      UInt64Value.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a UInt64Value message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.UInt64Value} UInt64Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      UInt64Value.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.UInt64Value();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.uint64();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a UInt64Value message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.UInt64Value} UInt64Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      UInt64Value.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a UInt64Value message.\n       * @function verify\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      UInt64Value.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (!$util.isInteger(message.value) && !(message.value && $util.isInteger(message.value.low) && $util.isInteger(message.value.high))) return \"value: integer|Long expected\";\n        return null;\n      };\n      /**\n       * Creates a UInt64Value message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.UInt64Value} UInt64Value\n       */\n\n\n      UInt64Value.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.UInt64Value) return object;\n        var message = new $root.google.protobuf.UInt64Value();\n        if (object.value != null) if ($util.Long) (message.value = $util.Long.fromValue(object.value)).unsigned = true;else if (typeof object.value === \"string\") message.value = parseInt(object.value, 10);else if (typeof object.value === \"number\") message.value = object.value;else if (typeof object.value === \"object\") message.value = new $util.LongBits(object.value.low >>> 0, object.value.high >>> 0).toNumber(true);\n        return message;\n      };\n      /**\n       * Creates a plain object from a UInt64Value message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.UInt64Value\n       * @static\n       * @param {google.protobuf.UInt64Value} message UInt64Value\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      UInt64Value.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) if ($util.Long) {\n          var long = new $util.Long(0, 0, true);\n          object.value = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n        } else object.value = options.longs === String ? \"0\" : 0;\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value === \"number\") object.value = options.longs === String ? String(message.value) : message.value;else object.value = options.longs === String ? $util.Long.prototype.toString.call(message.value) : options.longs === Number ? new $util.LongBits(message.value.low >>> 0, message.value.high >>> 0).toNumber(true) : message.value;\n        return object;\n      };\n      /**\n       * Converts this UInt64Value to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.UInt64Value\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      UInt64Value.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return UInt64Value;\n    }();\n\n    protobuf.Int32Value = function () {\n      /**\n       * Properties of an Int32Value.\n       * @memberof google.protobuf\n       * @interface IInt32Value\n       * @property {number|null} [value] Int32Value value\n       */\n\n      /**\n       * Constructs a new Int32Value.\n       * @memberof google.protobuf\n       * @classdesc Represents an Int32Value.\n       * @implements IInt32Value\n       * @constructor\n       * @param {google.protobuf.IInt32Value=} [properties] Properties to set\n       */\n      function Int32Value(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * Int32Value value.\n       * @member {number} value\n       * @memberof google.protobuf.Int32Value\n       * @instance\n       */\n\n\n      Int32Value.prototype.value = 0;\n      /**\n       * Creates a new Int32Value instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {google.protobuf.IInt32Value=} [properties] Properties to set\n       * @returns {google.protobuf.Int32Value} Int32Value instance\n       */\n\n      Int32Value.create = function create(properties) {\n        return new Int32Value(properties);\n      };\n      /**\n       * Encodes the specified Int32Value message. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      Int32Value.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 0 =*/\n        8).int32(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified Int32Value message, length delimited. Does not implicitly {@link google.protobuf.Int32Value.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {google.protobuf.IInt32Value} message Int32Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      Int32Value.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes an Int32Value message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.Int32Value} Int32Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      Int32Value.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.Int32Value();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.int32();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes an Int32Value message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.Int32Value} Int32Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      Int32Value.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies an Int32Value message.\n       * @function verify\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      Int32Value.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (!$util.isInteger(message.value)) return \"value: integer expected\";\n        return null;\n      };\n      /**\n       * Creates an Int32Value message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.Int32Value} Int32Value\n       */\n\n\n      Int32Value.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.Int32Value) return object;\n        var message = new $root.google.protobuf.Int32Value();\n        if (object.value != null) message.value = object.value | 0;\n        return message;\n      };\n      /**\n       * Creates a plain object from an Int32Value message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.Int32Value\n       * @static\n       * @param {google.protobuf.Int32Value} message Int32Value\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      Int32Value.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) object.value = 0;\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n        return object;\n      };\n      /**\n       * Converts this Int32Value to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.Int32Value\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      Int32Value.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return Int32Value;\n    }();\n\n    protobuf.UInt32Value = function () {\n      /**\n       * Properties of a UInt32Value.\n       * @memberof google.protobuf\n       * @interface IUInt32Value\n       * @property {number|null} [value] UInt32Value value\n       */\n\n      /**\n       * Constructs a new UInt32Value.\n       * @memberof google.protobuf\n       * @classdesc Represents a UInt32Value.\n       * @implements IUInt32Value\n       * @constructor\n       * @param {google.protobuf.IUInt32Value=} [properties] Properties to set\n       */\n      function UInt32Value(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * UInt32Value value.\n       * @member {number} value\n       * @memberof google.protobuf.UInt32Value\n       * @instance\n       */\n\n\n      UInt32Value.prototype.value = 0;\n      /**\n       * Creates a new UInt32Value instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {google.protobuf.IUInt32Value=} [properties] Properties to set\n       * @returns {google.protobuf.UInt32Value} UInt32Value instance\n       */\n\n      UInt32Value.create = function create(properties) {\n        return new UInt32Value(properties);\n      };\n      /**\n       * Encodes the specified UInt32Value message. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      UInt32Value.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 0 =*/\n        8).uint32(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified UInt32Value message, length delimited. Does not implicitly {@link google.protobuf.UInt32Value.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {google.protobuf.IUInt32Value} message UInt32Value message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      UInt32Value.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a UInt32Value message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.UInt32Value} UInt32Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      UInt32Value.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.UInt32Value();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.uint32();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a UInt32Value message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.UInt32Value} UInt32Value\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      UInt32Value.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a UInt32Value message.\n       * @function verify\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      UInt32Value.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (!$util.isInteger(message.value)) return \"value: integer expected\";\n        return null;\n      };\n      /**\n       * Creates a UInt32Value message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.UInt32Value} UInt32Value\n       */\n\n\n      UInt32Value.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.UInt32Value) return object;\n        var message = new $root.google.protobuf.UInt32Value();\n        if (object.value != null) message.value = object.value >>> 0;\n        return message;\n      };\n      /**\n       * Creates a plain object from a UInt32Value message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.UInt32Value\n       * @static\n       * @param {google.protobuf.UInt32Value} message UInt32Value\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      UInt32Value.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) object.value = 0;\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n        return object;\n      };\n      /**\n       * Converts this UInt32Value to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.UInt32Value\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      UInt32Value.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return UInt32Value;\n    }();\n\n    protobuf.BoolValue = function () {\n      /**\n       * Properties of a BoolValue.\n       * @memberof google.protobuf\n       * @interface IBoolValue\n       * @property {boolean|null} [value] BoolValue value\n       */\n\n      /**\n       * Constructs a new BoolValue.\n       * @memberof google.protobuf\n       * @classdesc Represents a BoolValue.\n       * @implements IBoolValue\n       * @constructor\n       * @param {google.protobuf.IBoolValue=} [properties] Properties to set\n       */\n      function BoolValue(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * BoolValue value.\n       * @member {boolean} value\n       * @memberof google.protobuf.BoolValue\n       * @instance\n       */\n\n\n      BoolValue.prototype.value = false;\n      /**\n       * Creates a new BoolValue instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {google.protobuf.IBoolValue=} [properties] Properties to set\n       * @returns {google.protobuf.BoolValue} BoolValue instance\n       */\n\n      BoolValue.create = function create(properties) {\n        return new BoolValue(properties);\n      };\n      /**\n       * Encodes the specified BoolValue message. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      BoolValue.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 0 =*/\n        8).bool(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified BoolValue message, length delimited. Does not implicitly {@link google.protobuf.BoolValue.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {google.protobuf.IBoolValue} message BoolValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      BoolValue.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a BoolValue message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.BoolValue} BoolValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      BoolValue.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.BoolValue();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.bool();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a BoolValue message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.BoolValue} BoolValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      BoolValue.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a BoolValue message.\n       * @function verify\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      BoolValue.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (typeof message.value !== \"boolean\") return \"value: boolean expected\";\n        return null;\n      };\n      /**\n       * Creates a BoolValue message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.BoolValue} BoolValue\n       */\n\n\n      BoolValue.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.BoolValue) return object;\n        var message = new $root.google.protobuf.BoolValue();\n        if (object.value != null) message.value = Boolean(object.value);\n        return message;\n      };\n      /**\n       * Creates a plain object from a BoolValue message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.BoolValue\n       * @static\n       * @param {google.protobuf.BoolValue} message BoolValue\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      BoolValue.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) object.value = false;\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n        return object;\n      };\n      /**\n       * Converts this BoolValue to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.BoolValue\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      BoolValue.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return BoolValue;\n    }();\n\n    protobuf.StringValue = function () {\n      /**\n       * Properties of a StringValue.\n       * @memberof google.protobuf\n       * @interface IStringValue\n       * @property {string|null} [value] StringValue value\n       */\n\n      /**\n       * Constructs a new StringValue.\n       * @memberof google.protobuf\n       * @classdesc Represents a StringValue.\n       * @implements IStringValue\n       * @constructor\n       * @param {google.protobuf.IStringValue=} [properties] Properties to set\n       */\n      function StringValue(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * StringValue value.\n       * @member {string} value\n       * @memberof google.protobuf.StringValue\n       * @instance\n       */\n\n\n      StringValue.prototype.value = \"\";\n      /**\n       * Creates a new StringValue instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {google.protobuf.IStringValue=} [properties] Properties to set\n       * @returns {google.protobuf.StringValue} StringValue instance\n       */\n\n      StringValue.create = function create(properties) {\n        return new StringValue(properties);\n      };\n      /**\n       * Encodes the specified StringValue message. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      StringValue.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 2 =*/\n        10).string(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified StringValue message, length delimited. Does not implicitly {@link google.protobuf.StringValue.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {google.protobuf.IStringValue} message StringValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      StringValue.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a StringValue message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.StringValue} StringValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      StringValue.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.StringValue();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.string();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a StringValue message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.StringValue} StringValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      StringValue.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a StringValue message.\n       * @function verify\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      StringValue.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (!$util.isString(message.value)) return \"value: string expected\";\n        return null;\n      };\n      /**\n       * Creates a StringValue message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.StringValue} StringValue\n       */\n\n\n      StringValue.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.StringValue) return object;\n        var message = new $root.google.protobuf.StringValue();\n        if (object.value != null) message.value = String(object.value);\n        return message;\n      };\n      /**\n       * Creates a plain object from a StringValue message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.StringValue\n       * @static\n       * @param {google.protobuf.StringValue} message StringValue\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      StringValue.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) object.value = \"\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = message.value;\n        return object;\n      };\n      /**\n       * Converts this StringValue to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.StringValue\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      StringValue.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return StringValue;\n    }();\n\n    protobuf.BytesValue = function () {\n      /**\n       * Properties of a BytesValue.\n       * @memberof google.protobuf\n       * @interface IBytesValue\n       * @property {Uint8Array|null} [value] BytesValue value\n       */\n\n      /**\n       * Constructs a new BytesValue.\n       * @memberof google.protobuf\n       * @classdesc Represents a BytesValue.\n       * @implements IBytesValue\n       * @constructor\n       * @param {google.protobuf.IBytesValue=} [properties] Properties to set\n       */\n      function BytesValue(properties) {\n        if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n          if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n        }\n      }\n      /**\n       * BytesValue value.\n       * @member {Uint8Array} value\n       * @memberof google.protobuf.BytesValue\n       * @instance\n       */\n\n\n      BytesValue.prototype.value = $util.newBuffer([]);\n      /**\n       * Creates a new BytesValue instance using the specified properties.\n       * @function create\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {google.protobuf.IBytesValue=} [properties] Properties to set\n       * @returns {google.protobuf.BytesValue} BytesValue instance\n       */\n\n      BytesValue.create = function create(properties) {\n        return new BytesValue(properties);\n      };\n      /**\n       * Encodes the specified BytesValue message. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.\n       * @function encode\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      BytesValue.encode = function encode(message, writer) {\n        if (!writer) writer = $Writer.create();\n        if (message.value != null && message.hasOwnProperty(\"value\")) writer.uint32(\n        /* id 1, wireType 2 =*/\n        10).bytes(message.value);\n        return writer;\n      };\n      /**\n       * Encodes the specified BytesValue message, length delimited. Does not implicitly {@link google.protobuf.BytesValue.verify|verify} messages.\n       * @function encodeDelimited\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {google.protobuf.IBytesValue} message BytesValue message or plain object to encode\n       * @param {$protobuf.Writer} [writer] Writer to encode to\n       * @returns {$protobuf.Writer} Writer\n       */\n\n\n      BytesValue.encodeDelimited = function encodeDelimited(message, writer) {\n        return this.encode(message, writer).ldelim();\n      };\n      /**\n       * Decodes a BytesValue message from the specified reader or buffer.\n       * @function decode\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @param {number} [length] Message length if known beforehand\n       * @returns {google.protobuf.BytesValue} BytesValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      BytesValue.decode = function decode(reader, length) {\n        if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n        var end = length === undefined ? reader.len : reader.pos + length,\n            message = new $root.google.protobuf.BytesValue();\n\n        while (reader.pos < end) {\n          var tag = reader.uint32();\n\n          switch (tag >>> 3) {\n            case 1:\n              message.value = reader.bytes();\n              break;\n\n            default:\n              reader.skipType(tag & 7);\n              break;\n          }\n        }\n\n        return message;\n      };\n      /**\n       * Decodes a BytesValue message from the specified reader or buffer, length delimited.\n       * @function decodeDelimited\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n       * @returns {google.protobuf.BytesValue} BytesValue\n       * @throws {Error} If the payload is not a reader or valid buffer\n       * @throws {$protobuf.util.ProtocolError} If required fields are missing\n       */\n\n\n      BytesValue.decodeDelimited = function decodeDelimited(reader) {\n        if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n        return this.decode(reader, reader.uint32());\n      };\n      /**\n       * Verifies a BytesValue message.\n       * @function verify\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {Object.<string,*>} message Plain object to verify\n       * @returns {string|null} `null` if valid, otherwise the reason why it is not\n       */\n\n\n      BytesValue.verify = function verify(message) {\n        if (typeof message !== \"object\" || message === null) return \"object expected\";\n        if (message.value != null && message.hasOwnProperty(\"value\")) if (!(message.value && typeof message.value.length === \"number\" || $util.isString(message.value))) return \"value: buffer expected\";\n        return null;\n      };\n      /**\n       * Creates a BytesValue message from a plain object. Also converts values to their respective internal types.\n       * @function fromObject\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {Object.<string,*>} object Plain object\n       * @returns {google.protobuf.BytesValue} BytesValue\n       */\n\n\n      BytesValue.fromObject = function fromObject(object) {\n        if (object instanceof $root.google.protobuf.BytesValue) return object;\n        var message = new $root.google.protobuf.BytesValue();\n        if (object.value != null) if (typeof object.value === \"string\") $util.base64.decode(object.value, message.value = $util.newBuffer($util.base64.length(object.value)), 0);else if (object.value.length) message.value = object.value;\n        return message;\n      };\n      /**\n       * Creates a plain object from a BytesValue message. Also converts values to other types if specified.\n       * @function toObject\n       * @memberof google.protobuf.BytesValue\n       * @static\n       * @param {google.protobuf.BytesValue} message BytesValue\n       * @param {$protobuf.IConversionOptions} [options] Conversion options\n       * @returns {Object.<string,*>} Plain object\n       */\n\n\n      BytesValue.toObject = function toObject(message, options) {\n        if (!options) options = {};\n        var object = {};\n        if (options.defaults) if (options.bytes === String) object.value = \"\";else {\n          object.value = [];\n          if (options.bytes !== Array) object.value = $util.newBuffer(object.value);\n        }\n        if (message.value != null && message.hasOwnProperty(\"value\")) object.value = options.bytes === String ? $util.base64.encode(message.value, 0, message.value.length) : options.bytes === Array ? Array.prototype.slice.call(message.value) : message.value;\n        return object;\n      };\n      /**\n       * Converts this BytesValue to JSON.\n       * @function toJSON\n       * @memberof google.protobuf.BytesValue\n       * @instance\n       * @returns {Object.<string,*>} JSON object\n       */\n\n\n      BytesValue.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n      };\n\n      return BytesValue;\n    }();\n\n    return protobuf;\n  }();\n\n  return google;\n}();\n\n$root.AccessKey = function () {\n  /**\n   * Properties of an AccessKey.\n   * @exports IAccessKey\n   * @interface IAccessKey\n   * @property {number|Long|null} [amount] AccessKey amount\n   * @property {google.protobuf.IStringValue|null} [balanceOwner] AccessKey balanceOwner\n   * @property {google.protobuf.IStringValue|null} [contractId] AccessKey contractId\n   * @property {google.protobuf.IBytesValue|null} [methodName] AccessKey methodName\n   */\n\n  /**\n   * Constructs a new AccessKey.\n   * @exports AccessKey\n   * @classdesc Represents an AccessKey.\n   * @implements IAccessKey\n   * @constructor\n   * @param {IAccessKey=} [properties] Properties to set\n   */\n  function AccessKey(properties) {\n    if (properties) for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i) {\n      if (properties[keys[i]] != null) this[keys[i]] = properties[keys[i]];\n    }\n  }\n  /**\n   * AccessKey amount.\n   * @member {number|Long} amount\n   * @memberof AccessKey\n   * @instance\n   */\n\n\n  AccessKey.prototype.amount = $util.Long ? $util.Long.fromBits(0, 0, true) : 0;\n  /**\n   * AccessKey balanceOwner.\n   * @member {google.protobuf.IStringValue|null|undefined} balanceOwner\n   * @memberof AccessKey\n   * @instance\n   */\n\n  AccessKey.prototype.balanceOwner = null;\n  /**\n   * AccessKey contractId.\n   * @member {google.protobuf.IStringValue|null|undefined} contractId\n   * @memberof AccessKey\n   * @instance\n   */\n\n  AccessKey.prototype.contractId = null;\n  /**\n   * AccessKey methodName.\n   * @member {google.protobuf.IBytesValue|null|undefined} methodName\n   * @memberof AccessKey\n   * @instance\n   */\n\n  AccessKey.prototype.methodName = null;\n  /**\n   * Creates a new AccessKey instance using the specified properties.\n   * @function create\n   * @memberof AccessKey\n   * @static\n   * @param {IAccessKey=} [properties] Properties to set\n   * @returns {AccessKey} AccessKey instance\n   */\n\n  AccessKey.create = function create(properties) {\n    return new AccessKey(properties);\n  };\n  /**\n   * Encodes the specified AccessKey message. Does not implicitly {@link AccessKey.verify|verify} messages.\n   * @function encode\n   * @memberof AccessKey\n   * @static\n   * @param {IAccessKey} message AccessKey message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  AccessKey.encode = function encode(message, writer) {\n    if (!writer) writer = $Writer.create();\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) writer.uint32(\n    /* id 1, wireType 0 =*/\n    8).uint64(message.amount);\n    if (message.balanceOwner != null && message.hasOwnProperty(\"balanceOwner\")) $root.google.protobuf.StringValue.encode(message.balanceOwner, writer.uint32(\n    /* id 2, wireType 2 =*/\n    18).fork()).ldelim();\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) $root.google.protobuf.StringValue.encode(message.contractId, writer.uint32(\n    /* id 3, wireType 2 =*/\n    26).fork()).ldelim();\n    if (message.methodName != null && message.hasOwnProperty(\"methodName\")) $root.google.protobuf.BytesValue.encode(message.methodName, writer.uint32(\n    /* id 4, wireType 2 =*/\n    34).fork()).ldelim();\n    return writer;\n  };\n  /**\n   * Encodes the specified AccessKey message, length delimited. Does not implicitly {@link AccessKey.verify|verify} messages.\n   * @function encodeDelimited\n   * @memberof AccessKey\n   * @static\n   * @param {IAccessKey} message AccessKey message or plain object to encode\n   * @param {$protobuf.Writer} [writer] Writer to encode to\n   * @returns {$protobuf.Writer} Writer\n   */\n\n\n  AccessKey.encodeDelimited = function encodeDelimited(message, writer) {\n    return this.encode(message, writer).ldelim();\n  };\n  /**\n   * Decodes an AccessKey message from the specified reader or buffer.\n   * @function decode\n   * @memberof AccessKey\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @param {number} [length] Message length if known beforehand\n   * @returns {AccessKey} AccessKey\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  AccessKey.decode = function decode(reader, length) {\n    if (!(reader instanceof $Reader)) reader = $Reader.create(reader);\n    var end = length === undefined ? reader.len : reader.pos + length,\n        message = new $root.AccessKey();\n\n    while (reader.pos < end) {\n      var tag = reader.uint32();\n\n      switch (tag >>> 3) {\n        case 1:\n          message.amount = reader.uint64();\n          break;\n\n        case 2:\n          message.balanceOwner = $root.google.protobuf.StringValue.decode(reader, reader.uint32());\n          break;\n\n        case 3:\n          message.contractId = $root.google.protobuf.StringValue.decode(reader, reader.uint32());\n          break;\n\n        case 4:\n          message.methodName = $root.google.protobuf.BytesValue.decode(reader, reader.uint32());\n          break;\n\n        default:\n          reader.skipType(tag & 7);\n          break;\n      }\n    }\n\n    return message;\n  };\n  /**\n   * Decodes an AccessKey message from the specified reader or buffer, length delimited.\n   * @function decodeDelimited\n   * @memberof AccessKey\n   * @static\n   * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n   * @returns {AccessKey} AccessKey\n   * @throws {Error} If the payload is not a reader or valid buffer\n   * @throws {$protobuf.util.ProtocolError} If required fields are missing\n   */\n\n\n  AccessKey.decodeDelimited = function decodeDelimited(reader) {\n    if (!(reader instanceof $Reader)) reader = new $Reader(reader);\n    return this.decode(reader, reader.uint32());\n  };\n  /**\n   * Verifies an AccessKey message.\n   * @function verify\n   * @memberof AccessKey\n   * @static\n   * @param {Object.<string,*>} message Plain object to verify\n   * @returns {string|null} `null` if valid, otherwise the reason why it is not\n   */\n\n\n  AccessKey.verify = function verify(message) {\n    if (typeof message !== \"object\" || message === null) return \"object expected\";\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (!$util.isInteger(message.amount) && !(message.amount && $util.isInteger(message.amount.low) && $util.isInteger(message.amount.high))) return \"amount: integer|Long expected\";\n\n    if (message.balanceOwner != null && message.hasOwnProperty(\"balanceOwner\")) {\n      var error = $root.google.protobuf.StringValue.verify(message.balanceOwner);\n      if (error) return \"balanceOwner.\" + error;\n    }\n\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) {\n      var error = $root.google.protobuf.StringValue.verify(message.contractId);\n      if (error) return \"contractId.\" + error;\n    }\n\n    if (message.methodName != null && message.hasOwnProperty(\"methodName\")) {\n      var error = $root.google.protobuf.BytesValue.verify(message.methodName);\n      if (error) return \"methodName.\" + error;\n    }\n\n    return null;\n  };\n  /**\n   * Creates an AccessKey message from a plain object. Also converts values to their respective internal types.\n   * @function fromObject\n   * @memberof AccessKey\n   * @static\n   * @param {Object.<string,*>} object Plain object\n   * @returns {AccessKey} AccessKey\n   */\n\n\n  AccessKey.fromObject = function fromObject(object) {\n    if (object instanceof $root.AccessKey) return object;\n    var message = new $root.AccessKey();\n    if (object.amount != null) if ($util.Long) (message.amount = $util.Long.fromValue(object.amount)).unsigned = true;else if (typeof object.amount === \"string\") message.amount = parseInt(object.amount, 10);else if (typeof object.amount === \"number\") message.amount = object.amount;else if (typeof object.amount === \"object\") message.amount = new $util.LongBits(object.amount.low >>> 0, object.amount.high >>> 0).toNumber(true);\n\n    if (object.balanceOwner != null) {\n      if (typeof object.balanceOwner !== \"object\") throw TypeError(\".AccessKey.balanceOwner: object expected\");\n      message.balanceOwner = $root.google.protobuf.StringValue.fromObject(object.balanceOwner);\n    }\n\n    if (object.contractId != null) {\n      if (typeof object.contractId !== \"object\") throw TypeError(\".AccessKey.contractId: object expected\");\n      message.contractId = $root.google.protobuf.StringValue.fromObject(object.contractId);\n    }\n\n    if (object.methodName != null) {\n      if (typeof object.methodName !== \"object\") throw TypeError(\".AccessKey.methodName: object expected\");\n      message.methodName = $root.google.protobuf.BytesValue.fromObject(object.methodName);\n    }\n\n    return message;\n  };\n  /**\n   * Creates a plain object from an AccessKey message. Also converts values to other types if specified.\n   * @function toObject\n   * @memberof AccessKey\n   * @static\n   * @param {AccessKey} message AccessKey\n   * @param {$protobuf.IConversionOptions} [options] Conversion options\n   * @returns {Object.<string,*>} Plain object\n   */\n\n\n  AccessKey.toObject = function toObject(message, options) {\n    if (!options) options = {};\n    var object = {};\n\n    if (options.defaults) {\n      if ($util.Long) {\n        var long = new $util.Long(0, 0, true);\n        object.amount = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n      } else object.amount = options.longs === String ? \"0\" : 0;\n\n      object.balanceOwner = null;\n      object.contractId = null;\n      object.methodName = null;\n    }\n\n    if (message.amount != null && message.hasOwnProperty(\"amount\")) if (typeof message.amount === \"number\") object.amount = options.longs === String ? String(message.amount) : message.amount;else object.amount = options.longs === String ? $util.Long.prototype.toString.call(message.amount) : options.longs === Number ? new $util.LongBits(message.amount.low >>> 0, message.amount.high >>> 0).toNumber(true) : message.amount;\n    if (message.balanceOwner != null && message.hasOwnProperty(\"balanceOwner\")) object.balanceOwner = $root.google.protobuf.StringValue.toObject(message.balanceOwner, options);\n    if (message.contractId != null && message.hasOwnProperty(\"contractId\")) object.contractId = $root.google.protobuf.StringValue.toObject(message.contractId, options);\n    if (message.methodName != null && message.hasOwnProperty(\"methodName\")) object.methodName = $root.google.protobuf.BytesValue.toObject(message.methodName, options);\n    return object;\n  };\n  /**\n   * Converts this AccessKey to JSON.\n   * @function toJSON\n   * @memberof AccessKey\n   * @instance\n   * @returns {Object.<string,*>} JSON object\n   */\n\n\n  AccessKey.prototype.toJSON = function toJSON() {\n    return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n  };\n\n  return AccessKey;\n}();\n\nmodule.exports = $root;","module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _require = require('./protos'),\n    SignedTransaction = _require.SignedTransaction;\n/**\n * Client for communicating with near blockchain. \n */\n\n\nfunction _arrayBufferToBase64(buffer) {\n  return Buffer.from(buffer).toString('base64');\n}\n\nfunction _base64ToBuffer(str) {\n  return new Buffer.from(str, 'base64');\n}\n\nvar NearClient =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function NearClient(signer, nearConnection) {\n    _classCallCheck(this, NearClient);\n\n    this.signer = signer;\n    this.nearConnection = nearConnection;\n  }\n\n  _createClass(NearClient, [{\n    key: \"viewAccount\",\n    value: function () {\n      var _viewAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accountId) {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.jsonRpcRequest('abci_query', [\"account/\".concat(accountId), '', '0', false]);\n\n              case 2:\n                response = _context.sent;\n                return _context.abrupt(\"return\", JSON.parse(_base64ToBuffer(response.response.value).toString()));\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function viewAccount(_x) {\n        return _viewAccount.apply(this, arguments);\n      }\n\n      return viewAccount;\n    }()\n  }, {\n    key: \"submitTransaction\",\n    value: function () {\n      var _submitTransaction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(signedTransaction) {\n        var buffer, transaction, params, response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                buffer = SignedTransaction.encode(signedTransaction).finish();\n                transaction = _arrayBufferToBase64(buffer);\n                params = [transaction];\n                _context2.next = 5;\n                return this.jsonRpcRequest('broadcast_tx_sync', params);\n\n              case 5:\n                response = _context2.sent;\n                response.hash = Buffer.from(response.hash, 'hex');\n                return _context2.abrupt(\"return\", response);\n\n              case 8:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function submitTransaction(_x2) {\n        return _submitTransaction.apply(this, arguments);\n      }\n\n      return submitTransaction;\n    }()\n  }, {\n    key: \"callViewFunction\",\n    value: function () {\n      var _callViewFunction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(contractAccountId, methodName, args) {\n        var serializedArgs, result, response, json;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!args) {\n                  args = {};\n                }\n\n                serializedArgs = Buffer.from(JSON.stringify(args)).toString('hex');\n                _context3.prev = 2;\n                _context3.next = 5;\n                return this.jsonRpcRequest('abci_query', [\"call/\".concat(contractAccountId, \"/\").concat(methodName), serializedArgs, '0', false]);\n\n              case 5:\n                result = _context3.sent;\n                response = result.response;\n\n                _printLogs(contractAccountId, response.log);\n\n                json = JSON.parse(_base64ToBuffer(response.value).toString());\n                return _context3.abrupt(\"return\", json);\n\n              case 12:\n                _context3.prev = 12;\n                _context3.t0 = _context3[\"catch\"](2);\n\n                _printLogs(contractAccountId, _context3.t0.log);\n\n                throw _context3.t0;\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[2, 12]]);\n      }));\n\n      function callViewFunction(_x3, _x4, _x5) {\n        return _callViewFunction.apply(this, arguments);\n      }\n\n      return callViewFunction;\n    }()\n  }, {\n    key: \"getTransactionStatus\",\n    value: function () {\n      var _getTransactionStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(transactionHash) {\n        var encodedHash, response, codes, status, logs;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                encodedHash = _arrayBufferToBase64(transactionHash);\n                _context4.next = 3;\n                return this.jsonRpcRequest('tx', [encodedHash, false]);\n\n              case 3:\n                response = _context4.sent;\n                //console.log('response', response);\n                // tx_result has default values: code = 0, logs: '', data: ''.\n                codes = {\n                  0: 'Completed',\n                  1: 'Failed',\n                  2: 'Started'\n                };\n                status = codes[response.tx_result.code || 0] || 'Unknown';\n                logs = [];\n\n                if (response.tx_result !== undefined && response.tx_result.log !== undefined && response.tx_result.log.length > 0) {\n                  logs = response.tx_result.log.split('\\n');\n                }\n\n                return _context4.abrupt(\"return\", {\n                  logs: logs,\n                  status: status,\n                  value: response.tx_result.data\n                });\n\n              case 9:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTransactionStatus(_x6) {\n        return _getTransactionStatus.apply(this, arguments);\n      }\n\n      return getTransactionStatus;\n    }()\n  }, {\n    key: \"getNonce\",\n    value: function () {\n      var _getNonce = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(accountId) {\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                _context5.next = 2;\n                return this.viewAccount(accountId);\n\n              case 2:\n                _context5.t0 = _context5.sent.nonce;\n                return _context5.abrupt(\"return\", _context5.t0 + 1);\n\n              case 4:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function getNonce(_x7) {\n        return _getNonce.apply(this, arguments);\n      }\n\n      return getNonce;\n    }()\n  }, {\n    key: \"jsonRpcRequest\",\n    value: function () {\n      var _jsonRpcRequest = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee6(method, params) {\n        var request, response, _response$error, _code, message, data, result, code, info, log, error;\n\n        return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                request = {\n                  jsonrpc: '2.0',\n                  method: method,\n                  params: params,\n                  id: Date.now().toString()\n                };\n                _context6.next = 3;\n                return this.nearConnection.request('', request);\n\n              case 3:\n                response = _context6.sent;\n                console.log('response', response);\n\n                if (!response.error) {\n                  _context6.next = 8;\n                  break;\n                }\n\n                _response$error = response.error, _code = _response$error.code, message = _response$error.message, data = _response$error.data;\n                throw new Error(\"[\".concat(_code, \"] \").concat(message, \": \").concat(data));\n\n              case 8:\n                if (response.result) {\n                  _context6.next = 10;\n                  break;\n                }\n\n                throw new Error('Unexpected response: ' + JSON.stringify(response));\n\n              case 10:\n                result = response.result.response || response.result;\n                code = result.code, info = result.info, log = result.log;\n\n                if (!code) {\n                  _context6.next = 16;\n                  break;\n                }\n\n                error = new Error(\"[\".concat(code, \"] Error calling \").concat(method, \"(\").concat(params, \")\\nMessage: \").concat(info || '', \"\\n\").concat(log || ''));\n                error.log = log;\n                throw error;\n\n              case 16:\n                return _context6.abrupt(\"return\", response.result);\n\n              case 17:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, _callee6, this);\n      }));\n\n      function jsonRpcRequest(_x8, _x9) {\n        return _jsonRpcRequest.apply(this, arguments);\n      }\n\n      return jsonRpcRequest;\n    }()\n  }, {\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee7(methodName, params) {\n        return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this.nearConnection.request(methodName, params));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, _callee7, this);\n      }));\n\n      function request(_x10, _x11) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return NearClient;\n}();\n\nfunction _printLogs(contractAccountId, log) {\n  var logs = [];\n\n  if (log !== undefined && log.length > 0) {\n    logs = log.split('\\n');\n  }\n\n  logs.forEach(function (line) {\n    console.log(\"[\".concat(contractAccountId, \"]: \").concat(line));\n  });\n}\n\nmodule.exports = NearClient;","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar sendJson = require('./internal/send-json');\n\nvar LocalNodeConnection =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function LocalNodeConnection(baseUrl) {\n    _classCallCheck(this, LocalNodeConnection);\n\n    this.baseUrl = baseUrl;\n  }\n\n  _createClass(LocalNodeConnection, [{\n    key: \"request\",\n    value: function () {\n      var _request = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(methodName, params) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return sendJson('POST', \"\".concat(this.baseUrl, \"/\").concat(methodName), params);\n\n              case 2:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function request(_x, _x2) {\n        return _request.apply(this, arguments);\n      }\n\n      return request;\n    }()\n  }]);\n\n  return LocalNodeConnection;\n}();\n\nmodule.exports = LocalNodeConnection;","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar createError = require('http-errors');\n\nvar NearClient = require('./nearclient');\n\nvar BrowserLocalStorageKeystore = require('./signing/browser_local_storage_key_store');\n\nvar SimpleKeyStoreSigner = require('./signing/simple_key_store_signer');\n\nvar LocalNodeConnection = require('./local_node_connection');\n\nvar _require = require('./protos'),\n    DeployContractTransaction = _require.DeployContractTransaction,\n    FunctionCallTransaction = _require.FunctionCallTransaction,\n    SignedTransaction = _require.SignedTransaction;\n\nvar MAX_STATUS_POLL_ATTEMPTS = 10;\nvar STATUS_POLL_PERIOD_MS = 2000; // Default amount of tokens to be send with the function calls. Used to pay for the fees\n// incurred while running the contract execution. The unused amount will be refunded back to\n// the originator.\n\nvar DEFAULT_FUNC_CALL_AMOUNT = 1000000000;\n/**\n * Javascript library for interacting with near.\n */\n\nvar Near =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * Constructs near with an instance of nearclient.\n   * @constructor\n   * @param {NearClient} nearClient\n   * @example\n   * const nearClient = new nearlib.NearClient(\n   *   walletAccount, \n   *   new nearlib.LocalNodeConnection(config.nodeUrl));\n   * const near = new nearlib.Near(nearClient);\n   */\n  function Near(nearClient) {\n    _classCallCheck(this, Near);\n\n    this.nearClient = nearClient;\n  }\n  /**\n   * Generate a default configuration for nearlib\n   * @param {string} nodeUrl url of the near node to connect to\n   * @example\n   * Near.createDefaultConfig();\n   */\n\n\n  _createClass(Near, [{\n    key: \"callViewFunction\",\n\n    /**\n     * Calls a view function. Returns the same value that the function returns.\n     * @param {string} contractAccountId account id of the contract\n     * @param {string} methodName method to call\n     * @param {object} args arguments to pass to the method\n     * @example\n     * const viewFunctionResponse = await near.callViewFunction(\n     *   contractAccountId, \n     *   methodName, \n     *   args);\n     */\n    value: function () {\n      var _callViewFunction = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(contractAccountId, methodName, args) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                return _context.abrupt(\"return\", this.nearClient.callViewFunction(contractAccountId, methodName, args));\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function callViewFunction(_x, _x2, _x3) {\n        return _callViewFunction.apply(this, arguments);\n      }\n\n      return callViewFunction;\n    }()\n    /**\n     * Schedules an asynchronous function call. Returns a hash which can be used to\n     * check the status of the transaction later.\n     * @param {number} amount amount of tokens to transfer as part of the operation\n     * @param {string} sender account id of the sender\n     * @param {string} contractAccountId account id of the contract\n     * @param {string} methodName method to call\n     * @param {object} args arguments to pass to the method\n     * @example\n     * const scheduleResult = await near.scheduleFunctionCall(\n     *     0,\n     *     aliceAccountName,\n     *     contractName,\n     *     'setValue', // this is the function defined in a wasm file that we are calling\n     *     setArgs);\n     */\n\n  }, {\n    key: \"scheduleFunctionCall\",\n    value: function () {\n      var _scheduleFunctionCall = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(amount, originator, contractId, methodName, args) {\n        var nonce, functionCall, buffer, signatureAndPublicKey, signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!args) {\n                  args = {};\n                }\n\n                methodName = new Uint8Array(Buffer.from(methodName));\n                args = new Uint8Array(Buffer.from(JSON.stringify(args)));\n                _context2.next = 5;\n                return this.nearClient.getNonce(originator);\n\n              case 5:\n                nonce = _context2.sent;\n                functionCall = FunctionCallTransaction.create({\n                  nonce: nonce,\n                  originator: originator,\n                  contractId: contractId,\n                  methodName: methodName,\n                  args: args\n                }); // Integers with value of 0 must be omitted\n                // https://github.com/dcodeIO/protobuf.js/issues/1138\n\n                if (amount !== 0) {\n                  functionCall.amount = amount;\n                }\n\n                buffer = FunctionCallTransaction.encode(functionCall).finish();\n                _context2.next = 11;\n                return this.nearClient.signer.signBuffer(buffer, originator);\n\n              case 11:\n                signatureAndPublicKey = _context2.sent;\n                signedTransaction = SignedTransaction.create({\n                  functionCall: functionCall,\n                  signature: signatureAndPublicKey.signature,\n                  publicKey: signatureAndPublicKey.publicKey\n                });\n                _context2.next = 15;\n                return this.nearClient.submitTransaction(signedTransaction);\n\n              case 15:\n                return _context2.abrupt(\"return\", _context2.sent);\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function scheduleFunctionCall(_x4, _x5, _x6, _x7, _x8) {\n        return _scheduleFunctionCall.apply(this, arguments);\n      }\n\n      return scheduleFunctionCall;\n    }()\n    /**\n     * Deploys a smart contract to the block chain\n     * @param {string} contractAccountId account id of the contract\n     * @param {Uint8Array} wasmArray wasm binary\n     * @example\n     * const response =  await nearjs.deployContract(contractName, data);\n     */\n\n  }, {\n    key: \"deployContract\",\n    value: function () {\n      var _deployContract = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(contractId, wasmByteArray) {\n        var nonce, deployContract, buffer, signatureAndPublicKey, signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.nearClient.getNonce(contractId);\n\n              case 2:\n                nonce = _context3.sent;\n                deployContract = DeployContractTransaction.create({\n                  nonce: nonce,\n                  contractId: contractId,\n                  wasmByteArray: wasmByteArray\n                });\n                buffer = DeployContractTransaction.encode(deployContract).finish();\n                _context3.next = 7;\n                return this.nearClient.signer.signBuffer(buffer, contractId);\n\n              case 7:\n                signatureAndPublicKey = _context3.sent;\n                signedTransaction = SignedTransaction.create({\n                  deployContract: deployContract,\n                  signature: signatureAndPublicKey.signature,\n                  publicKey: signatureAndPublicKey.publicKey\n                });\n                _context3.next = 11;\n                return this.nearClient.submitTransaction(signedTransaction);\n\n              case 11:\n                return _context3.abrupt(\"return\", _context3.sent);\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function deployContract(_x9, _x10) {\n        return _deployContract.apply(this, arguments);\n      }\n\n      return deployContract;\n    }()\n    /**\n     * Get a status of a single transaction identified by the transaction hash.\n     * @param {string} transactionHash unique identifier of the transaction\n     * @example\n     * // get the result of a transaction status call\n     * const result = await this.getTransactionStatus(transactionHash)\n     */\n\n  }, {\n    key: \"getTransactionStatus\",\n    value: function () {\n      var _getTransactionStatus = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(transactionHash) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                return _context4.abrupt(\"return\", this.nearClient.getTransactionStatus(transactionHash));\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function getTransactionStatus(_x11) {\n        return _getTransactionStatus.apply(this, arguments);\n      }\n\n      return getTransactionStatus;\n    }()\n    /**\n     * Wait until transaction is completed or failed.\n     * Automatically sends logs from contract to `console.log`.\n     *\n     * {@link MAX_STATUS_POLL_ATTEMPTS} defines how many attempts are made.\n     * {@link STATUS_POLL_PERIOD_MS} defines delay between subsequent {@link getTransactionStatus} calls.\n     *\n     * @param {string | object} transactionResponseOrHash hash of transaction or object returned from {@link submitTransaction}\n     * @param {object} options object used to pass named parameters\n     * @param {string} options.contractAccountId specifies contract ID for better logs and error messages\n     * @example\n     * const result = await this.waitForTransactionResult(transactionHash);\n     */\n\n  }, {\n    key: \"waitForTransactionResult\",\n    value: function () {\n      var _waitForTransactionResult = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee5(transactionResponseOrHash) {\n        var options,\n            transactionHash,\n            hashStr,\n            contractAccountId,\n            alreadyDisplayedLogs,\n            result,\n            i,\n            j,\n            line,\n            errorMessage,\n            _args5 = arguments;\n        return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                options = _args5.length > 1 && _args5[1] !== undefined ? _args5[1] : {};\n                transactionHash = transactionResponseOrHash.hasOwnProperty('hash') ? transactionResponseOrHash.hash : transactionResponseOrHash;\n                hashStr = Buffer.from(transactionHash).toString('base64');\n                contractAccountId = options.contractAccountId || 'unknown contract';\n                alreadyDisplayedLogs = [];\n                i = 0;\n\n              case 6:\n                if (!(i < MAX_STATUS_POLL_ATTEMPTS)) {\n                  _context5.next = 25;\n                  break;\n                }\n\n                _context5.next = 9;\n                return sleep(STATUS_POLL_PERIOD_MS);\n\n              case 9:\n                _context5.next = 11;\n                return this.getTransactionStatus(transactionHash);\n\n              case 11:\n                result = _context5.sent;\n                j = void 0;\n\n                for (j = 0; j < alreadyDisplayedLogs.length && alreadyDisplayedLogs[j] == result.logs[j]; j++) {\n                  ;\n                }\n\n                if (j != alreadyDisplayedLogs.length) {\n                  console.warn('new logs:', result.logs, 'inconsistent with already displayed logs:', alreadyDisplayedLogs);\n                }\n\n                for (; j < result.logs.length; ++j) {\n                  line = result.logs[j];\n                  console.log(\"[\".concat(contractAccountId, \"]: \").concat(line));\n                  alreadyDisplayedLogs.push(line);\n                } //console.log('result', result);\n\n\n                if (!(result.status == 'Completed')) {\n                  _context5.next = 19;\n                  break;\n                }\n\n                if (result.value) {\n                  result.lastResult = JSON.parse(Buffer.from(result.value, 'base64').toString());\n                }\n\n                return _context5.abrupt(\"return\", result);\n\n              case 19:\n                if (!(result.status == 'Failed')) {\n                  _context5.next = 22;\n                  break;\n                }\n\n                errorMessage = result.logs.find(function (it) {\n                  return it.startsWith('ABORT:');\n                }) || '';\n                throw createError(400, \"Transaction \".concat(hashStr, \" on \").concat(contractAccountId, \" failed. \").concat(errorMessage));\n\n              case 22:\n                i++;\n                _context5.next = 6;\n                break;\n\n              case 25:\n                throw createError(408, \"Exceeded \".concat(MAX_STATUS_POLL_ATTEMPTS, \" status check attempts \") + \"for transaction \".concat(hashStr, \" on \").concat(contractAccountId, \" with status: \").concat(result.status));\n\n              case 26:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, _callee5, this);\n      }));\n\n      function waitForTransactionResult(_x12) {\n        return _waitForTransactionResult.apply(this, arguments);\n      }\n\n      return waitForTransactionResult;\n    }()\n    /**\n     * Load given contract and expose it's methods.\n     *\n     * Every method is taking named arguments as JS object, e.g.:\n     * `{ paramName1: \"val1\", paramName2: 123 }`\n     *\n     * View method returns promise which is resolved to result when it's available.\n     * State change method returns promise which is resolved when state change is succesful and rejected otherwise.\n     *\n     * Note that `options` param is only needed temporary while contract introspection capabilities are missing.\n     *\n     * @param {string} contractAccountId contract account name\n     * @param {object} options object used to pass named parameters\n     * @param {string} options.sender account name of user which is sending transactions\n     * @param {string[]} options.viewMethods list of view methods to load (which don't change state)\n     * @param {string[]} options.changeMethods list of methods to load that change state\n     * @returns {object} object with methods corresponding to given contract methods.\n     * @example\n     * // this example would be a counter app with a contract that contains the incrementCounter and decrementCounter methods\n     * window.contract = await near.loadContract(config.contractName, {\n     *   viewMethods: [\"getCounter\"],\n     *   changeMethods: [\"incrementCounter\", \"decrementCounter\"],\n     *   sender: nearlib.dev.myAccountId\n     * });\n     */\n\n  }, {\n    key: \"loadContract\",\n    value: function () {\n      var _loadContract = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee8(contractAccountId, options) {\n        var contract, near;\n        return _regeneratorRuntime.wrap(function _callee8$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                // TODO: Move this to account context to avoid options.sender\n                contract = {};\n                near = this;\n                options.viewMethods.forEach(function (methodName) {\n                  contract[methodName] =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee6(args) {\n                      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n                        while (1) {\n                          switch (_context6.prev = _context6.next) {\n                            case 0:\n                              args = args || {};\n                              return _context6.abrupt(\"return\", near.callViewFunction(contractAccountId, methodName, args));\n\n                            case 2:\n                            case \"end\":\n                              return _context6.stop();\n                          }\n                        }\n                      }, _callee6);\n                    }));\n\n                    return function (_x15) {\n                      return _ref.apply(this, arguments);\n                    };\n                  }();\n                });\n                options.changeMethods.forEach(function (methodName) {\n                  contract[methodName] =\n                  /*#__PURE__*/\n                  function () {\n                    var _ref2 = _asyncToGenerator(\n                    /*#__PURE__*/\n                    _regeneratorRuntime.mark(function _callee7(args) {\n                      var response;\n                      return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n                        while (1) {\n                          switch (_context7.prev = _context7.next) {\n                            case 0:\n                              args = args || {};\n                              _context7.next = 3;\n                              return near.scheduleFunctionCall(DEFAULT_FUNC_CALL_AMOUNT, options.sender, contractAccountId, methodName, args);\n\n                            case 3:\n                              response = _context7.sent;\n                              return _context7.abrupt(\"return\", near.waitForTransactionResult(response.hash, {\n                                contractAccountId: contractAccountId\n                              }));\n\n                            case 5:\n                            case \"end\":\n                              return _context7.stop();\n                          }\n                        }\n                      }, _callee7);\n                    }));\n\n                    return function (_x16) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }();\n                });\n                return _context8.abrupt(\"return\", contract);\n\n              case 5:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, _callee8, this);\n      }));\n\n      function loadContract(_x13, _x14) {\n        return _loadContract.apply(this, arguments);\n      }\n\n      return loadContract;\n    }()\n  }], [{\n    key: \"createDefaultConfig\",\n    value: function createDefaultConfig() {\n      var nodeUrl = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'http://localhost:3030';\n      return new Near(new NearClient(new SimpleKeyStoreSigner(new BrowserLocalStorageKeystore()), new LocalNodeConnection(nodeUrl)));\n    }\n  }]);\n\n  return Near;\n}();\n\nfunction sleep(time) {\n  return new Promise(function (resolve) {\n    setTimeout(resolve, time);\n  });\n}\n\nmodule.exports = Near;","var _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar KeyPair = require('./key_pair');\n/**\n * Utility functions for dealing with account information. \n */\n\n\nvar AccountInfo =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function AccountInfo(accountId, keyPair, networkId) {\n    _classCallCheck(this, AccountInfo);\n\n    this.accountId = accountId;\n    this.keyPair = keyPair;\n    this.networkId = networkId;\n  }\n  /**\n   * Reconstruct account info object from json.\n   * @param {Object} json \n   */\n\n\n  _createClass(AccountInfo, [{\n    key: \"toJSON\",\n\n    /**\n     * Convert to standard json format.\n     */\n    value: function toJSON() {\n      return {\n        account_id: this.accountId,\n        public_key: this.keyPair.getPublicKey(),\n        secret_key: this.keyPair.getSecretKey(),\n        network_id: this.networkId\n      };\n    }\n    /**\n     * Utility function to download account info as a standard file.\n     */\n\n  }, {\n    key: \"downloadAsFile\",\n    value: function downloadAsFile() {\n      var fileName = this.keyFileName;\n      var text = JSON.stringify(this.toJSON());\n      var element = document.createElement('a');\n      element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n      element.setAttribute('download', fileName);\n      element.style.display = 'none';\n      document.body.appendChild(element);\n      element.click();\n      document.body.removeChild(element);\n    }\n  }, {\n    key: \"keyFileName\",\n    get: function get() {\n      return this.networkId + '_' + this.accountId;\n    }\n  }], [{\n    key: \"fromJson\",\n    value: function fromJson(json) {\n      if (!json.public_key || !json.secret_key || !json.account_id) {\n        throw 'Invalid account info format. Please ensure it contains public_key, secret_key, and account_id\".';\n      }\n\n      return new AccountInfo(json.account_id, new KeyPair(json.public_key, json.secret_key), json.network_id);\n    }\n  }]);\n\n  return AccountInfo;\n}();\n\nmodule.exports = AccountInfo;","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar fetch = typeof window === 'undefined' || window.name == 'nodejs' ? require('node-fetch') : window.fetch;\n\nvar createError = require('http-errors');\n\nmodule.exports =\n/*#__PURE__*/\nfunction () {\n  var _sendJson = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee(method, url, json) {\n    var response;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch(url, {\n              method: method,\n              body: method != 'GET' ? JSON.stringify(json) : undefined,\n              headers: {\n                'Content-type': 'application/json; charset=utf-8'\n              }\n            });\n\n          case 2:\n            response = _context.sent;\n\n            if (response.ok) {\n              _context.next = 10;\n              break;\n            }\n\n            _context.t0 = createError;\n            _context.t1 = response.status;\n            _context.next = 8;\n            return response.text();\n\n          case 8:\n            _context.t2 = _context.sent;\n            throw (0, _context.t0)(_context.t1, _context.t2);\n\n          case 10:\n            if (!(response.status === 204)) {\n              _context.next = 12;\n              break;\n            }\n\n            return _context.abrupt(\"return\", null);\n\n          case 12:\n            _context.next = 14;\n            return response.json();\n\n          case 14:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  function sendJson(_x, _x2, _x3) {\n    return _sendJson.apply(this, arguments);\n  }\n\n  return sendJson;\n}();","var _objectSpread = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/objectSpread\");\n\nvar _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar bs58 = require('bs58');\n\nvar _require = require('./protos'),\n    google = _require.google,\n    AccessKey = _require.AccessKey,\n    AddKeyTransaction = _require.AddKeyTransaction,\n    CreateAccountTransaction = _require.CreateAccountTransaction,\n    SignedTransaction = _require.SignedTransaction;\n\nvar KeyPair = require('./signing/key_pair');\n/**\n * Near account and account related operations. \n * @example\n * const account = new Account(nearjs.nearClient);\n */\n\n\nvar Account =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function Account(nearClient) {\n    _classCallCheck(this, Account);\n\n    this.nearClient = nearClient;\n  }\n  /**\n   * Creates a new account with a given name and key,\n   * @param {string} newAccountId id of the new account.\n   * @param {string} publicKey public key to associate with the new account\n   * @param {number} amount amount of tokens to transfer from originator account id to the new account as part of the creation. \n   * @param {string} originatorAccountId existing account on the blockchain to use for transferring tokens into the new account\n   * @example\n   * const createAccountResponse = await account.createAccount(\n   *    mainTestAccountName,\n   *    keyWithRandomSeed.getPublicKey(),\n   *    1000,\n   *    aliceAccountName);\n   */\n\n\n  _createClass(Account, [{\n    key: \"createAccount\",\n    value: function () {\n      var _createAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(newAccountId, publicKey, amount, originator) {\n        var nonce, createAccount, buffer, signatureAndPublicKey, signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this.nearClient.getNonce(originator);\n\n              case 2:\n                nonce = _context.sent;\n                publicKey = bs58.decode(publicKey);\n                createAccount = CreateAccountTransaction.create({\n                  nonce: nonce,\n                  originator: originator,\n                  newAccountId: newAccountId,\n                  publicKey: publicKey\n                }); // Integers with value of 0 must be omitted\n                // https://github.com/dcodeIO/protobuf.js/issues/1138\n\n                if (amount !== 0) {\n                  createAccount.amount = amount;\n                }\n\n                buffer = CreateAccountTransaction.encode(createAccount).finish();\n                _context.next = 9;\n                return this.nearClient.signer.signBuffer(buffer, originator);\n\n              case 9:\n                signatureAndPublicKey = _context.sent;\n                signedTransaction = SignedTransaction.create({\n                  createAccount: createAccount,\n                  signature: signatureAndPublicKey.signature,\n                  publicKey: signatureAndPublicKey.publicKey\n                });\n                return _context.abrupt(\"return\", this.nearClient.submitTransaction(signedTransaction));\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function createAccount(_x, _x2, _x3, _x4) {\n        return _createAccount.apply(this, arguments);\n      }\n\n      return createAccount;\n    }()\n    /**\n     * Adds a new access key to the owners account for an some app to use.\n     * @param {string} ownersAccountId id of the owner's account.\n     * @param {string} newPublicKey public key for the access key.\n     * @param {string} contractId if the given contractId is not empty, then this access key will only be able to call\n     *      the given contractId.\n     * @param {string} methodName If the given method name is not empty, then this access key will only be able to call\n     *      the given method name.\n     * @param {string} fundingOwner account id to own the funding of this access key. If empty then account owner is used by default.\n     *      fundingOwner should be used if this access key would be sponsored by the app. In this case the app would\n     *      prefer to own funding of this access key, to get it back when the key is removed.\n     * @param {number} fundingAmount amount of funding to withdraw from the owner's account and put to this access key.\n     *      Make sure you that you don't fund the access key when the fundingOwner is different from the account's owner.\n     * @example\n     * const addAccessKeyResponse = await account.addAccessKey(\n     *    accountId,\n     *    keyWithRandomSeed.getPublicKey(),\n     *    contractId,\n     *    \"\",\n     *    \"\",\n     *    10);\n     */\n\n  }, {\n    key: \"addAccessKey\",\n    value: function () {\n      var _addAccessKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(ownersAccountId, newPublicKey, contractId, methodName, fundingOwner, fundingAmount) {\n        var nonce, accessKey, addKey, buffer, signatureAndPublicKey, signedTransaction;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.nearClient.getNonce(ownersAccountId);\n\n              case 2:\n                nonce = _context2.sent;\n                newPublicKey = bs58.decode(newPublicKey);\n                accessKey = AccessKey.create({});\n\n                if (contractId) {\n                  accessKey.contractId = google.protobuf.StringValue.create({\n                    value: contractId\n                  });\n                }\n\n                if (methodName) {\n                  accessKey.methodName = google.protobuf.BytesValue.create({\n                    value: new Uint8Array(Buffer.from(methodName))\n                  });\n                }\n\n                if (fundingOwner) {\n                  accessKey.balanceOwner = google.protobuf.StringValue.create({\n                    value: fundingOwner\n                  });\n                }\n\n                if (fundingAmount > 0) {\n                  accessKey.amount = fundingAmount;\n                }\n\n                addKey = AddKeyTransaction.create({\n                  nonce: nonce,\n                  originator: ownersAccountId,\n                  newKey: newPublicKey,\n                  accessKey: accessKey\n                });\n                buffer = AddKeyTransaction.encode(addKey).finish();\n                _context2.next = 13;\n                return this.nearClient.signer.signBuffer(buffer, ownersAccountId);\n\n              case 13:\n                signatureAndPublicKey = _context2.sent;\n                signedTransaction = SignedTransaction.create({\n                  addKey: addKey,\n                  signature: signatureAndPublicKey.signature,\n                  publicKey: signatureAndPublicKey.publicKey\n                });\n                return _context2.abrupt(\"return\", this.nearClient.submitTransaction(signedTransaction));\n\n              case 16:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function addAccessKey(_x5, _x6, _x7, _x8, _x9, _x10) {\n        return _addAccessKey.apply(this, arguments);\n      }\n\n      return addAccessKey;\n    }()\n    /**\n    * Creates a new account with a new random key pair. Returns the key pair to the caller. It's the caller's responsibility to\n    * manage this key pair.\n    * @param {string} newAccountId id of the new account\n    * @param {number} amount amount of tokens to transfer from originator account id to the new account as part of the creation. \n    * @param {string} originatorAccountId existing account on the blockchain to use for transferring tokens into the new account\n    * @example\n    * const createAccountResponse = await account.createAccountWithRandomKey(\n    *     newAccountName,\n    *     amount,\n    *     aliceAccountName);\n    */\n\n  }, {\n    key: \"createAccountWithRandomKey\",\n    value: function () {\n      var _createAccountWithRandomKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(newAccountId, amount, originatorAccountId) {\n        var keyWithRandomSeed, createAccountResult;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                keyWithRandomSeed = KeyPair.fromRandomSeed();\n                _context3.next = 3;\n                return this.createAccount(newAccountId, keyWithRandomSeed.getPublicKey(), amount, originatorAccountId);\n\n              case 3:\n                createAccountResult = _context3.sent;\n                return _context3.abrupt(\"return\", _objectSpread({\n                  key: keyWithRandomSeed\n                }, createAccountResult));\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createAccountWithRandomKey(_x11, _x12, _x13) {\n        return _createAccountWithRandomKey.apply(this, arguments);\n      }\n\n      return createAccountWithRandomKey;\n    }()\n    /**\n     * Returns an existing account with a given `accountId`\n     * @param {string} accountId id of the account to look up \n     * @example\n     * const viewAccountResponse = await account.viewAccount(existingAccountId);\n     */\n\n  }, {\n    key: \"viewAccount\",\n    value: function () {\n      var _viewAccount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(accountId) {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.nearClient.viewAccount(accountId);\n\n              case 2:\n                return _context4.abrupt(\"return\", _context4.sent);\n\n              case 3:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function viewAccount(_x14) {\n        return _viewAccount.apply(this, arguments);\n      }\n\n      return viewAccount;\n    }()\n  }]);\n\n  return Account;\n}();\n\nmodule.exports = Account;","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","import nearlib from 'nearlib'\nimport sendJson from 'fetch-send-json'\n\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\n\nconst ACCOUNT_HELPER_URL = 'https://studio.nearprotocol.com/contract-api'\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\nconst NODE_URL = 'https://studio.nearprotocol.com/devnet'\n\nconst KEY_UNIQUE_PREFIX = '_4:'\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\n\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\n\nexport class Wallet {\n   constructor() {\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\n      this.account = new nearlib.Account(this.near.nearClient);\n      this.accounts = JSON.parse(\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\n      )\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\n   }\n\n   save() {\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\n   }\n\n   getAccountId() {\n      return this.accountId\n   }\n\n   selectAccount(accountId) {\n      if (!(accountId in this.accounts)) {\n         return false\n      }\n      this.accountId = accountId\n      this.save()\n   }\n\n   newAccessToken(app_url, app_title, contract_id) {\n      var token = ''\n      var possible =\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n      for (var i = 0; i < 32; i++) {\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n\n      if (!this.isLegitAccountId(contract_id)) {\n         contract_id = ''\n      }\n\n      this.tokens[token] = {\n         app_url,\n         app_title,\n         contract_id,\n         account_id: this.accountId\n      }\n      this.save()\n      return token\n   }\n\n   isLegitAccountId(accountId) {\n      return ACCOUNT_ID_REGEX.test(accountId)\n   }\n\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\n      return await this.near.scheduleFunctionCall(\n         amount,\n         senderId,\n         receiverId,\n         methodName,\n         args || {}\n      )\n   }\n\n   redirectToCreateAccount(options = {}, history) {\n      const param = {\n         next_url: window.location.search\n      }\n      if (options.reset_accounts) {\n         param.reset_accounts = true\n      }\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\n      let url =\n         WALLET_CREATE_NEW_ACCOUNT_URL +\n         '?' +\n         Object.keys(param).map(\n            (p, i) =>\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\n                  param[p]\n               )}`\n         )\n      history ? history.push(url) : window.location.replace(url)\n   }\n\n   isEmpty() {\n      return !this.accounts || !Object.keys(this.accounts).length\n   }\n\n   redirectIfEmpty(history) {\n      if (this.isEmpty()) {\n         this.redirectToCreateAccount({}, history)\n      }\n   }\n\n   async loadAccount(accountId, history) {\n      if (!(accountId in this.accounts)) {\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\n      }\n      return await this.near.nearClient.viewAccount(accountId)\n   }\n\n   async checkAccount(accountId) {\n      if (accountId !== this.accountId) {\n         return await this.near.nearClient.viewAccount(accountId)\n      } else {\n         throw new Error('You are logged into account ' + accountId + ' .')\n      }\n   }\n\n   async checkNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n   }\n\n   async createNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let keyPair = await nearlib.KeyPair.fromRandomSeed();\n      return await new Promise((resolve, reject) => {\n         let data = JSON.stringify({\n            newAccountId: accountId,\n            newAccountPublicKey: keyPair.getPublicKey()\n         })\n\n         let xhr = new XMLHttpRequest()\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\n         xhr.setRequestHeader('Content-Type', 'application/json')\n         xhr.onload = () => {\n            if (xhr.status === 200) {\n               this.key_store.setKey(accountId, keyPair).catch(console.log)\n               this.accounts[accountId] = true\n               this.accountId = accountId\n               this.save()\n               resolve(xhr)\n            } else if (xhr.status !== 200) {\n               reject(xhr.responseText)\n            }\n         }\n         xhr.send(data)\n      })\n   }\n\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\n      const addAccessKeyResponse = await this.account.addAccessKey(\n         accountId,\n         publicKey,\n         contractId,\n         '',  // methodName\n         '',  // fundingOwner\n         0,  // fundingAmount\n      );\n      try {\n         const result = await this.near.waitForTransactionResult(addAccessKeyResponse);\n         const parsedUrl = new URL(successUrl);\n         parsedUrl.searchParams.set('account_id', accountId);\n         parsedUrl.searchParams.set('public_key', publicKey);\n         const redirectUrl = parsedUrl.href;\n         if (result.status === \"Completed\") {\n            window.location.href = redirectUrl;\n         }\n      } catch (e) {\n         // TODO: handle errors\n         console.log(\"Error on adding access key \", e);\n      }\n   }\n\n   subscribeForMessages() {\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\n   }\n\n   clearState() {\n      this.accounts = {}\n      this.tokens = {}\n      this.accountId = ''\n      this.save()\n   }\n\n   async processTransactionMessage(action, data) {\n      let token = data['token'] || ''\n      if (!(token in this.tokens)) {\n         // Unknown token.\n         throw new Error('The token ' + token + ' is not found ')\n      }\n      let app_data = this.tokens[token]\n      let accountId = app_data['account_id']\n      if (!(accountId in this.accounts)) {\n         // Account is no longer authorized.\n         throw new Error(\n            'The account ' + accountId + ' is not part of the wallet anymore.'\n         )\n      }\n      let contract_id = app_data['contract_id']\n      let receiverId = data['receiver_id'] || contract_id\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\n         // Bad receiver account ID or it doesn't match contract id.\n         throw new Error(\n            \"Bad receiver's account ID ('\" +\n               receiverId +\n               \"') or it doesn't match the authorized contract id\"\n         )\n      }\n      let amount = parseInt(data['amount']) || 0\n      if (amount !== 0) {\n         // Automatic authorization denied since for amounts greater than 0.\n         throw new Error('Transaction amount should be 0.')\n      }\n      let methodName = data['methodName'] || ''\n      if (!methodName) {\n         // Method name can't be empty since the amount is 0.\n         throw new Error(\"Method name can't be empty since the amount is 0\")\n      }\n      let args = data['args'] || {}\n      if (action === 'send_transaction') {\n         // Sending the transaction on behalf of the accountId\n         return await this.sendTransaction(\n            accountId,\n            receiverId,\n            methodName,\n            amount,\n            args\n         )\n      } else if (action === 'sign_transaction') {\n         // Signing the provided hash of the transaction. It's a security issue here.\n         // In the future we would sign the transaction above and don't depend on the given hash.\n         let hash = data['hash'] || ''\n         let signature = await this.near.nearClient.signer.signHash(\n            hash,\n            accountId\n         )\n         return signature\n      } else {\n         throw new Error('Unknown action')\n      }\n   }\n\n   requestCode(phoneNumber, accountId) {\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`)\n   }\n\n   async validateCode(phoneNumber, accountId, securityCode) {\n      const key = this.key_store.getKey(accountId)\n      const signer = new nearlib.SimpleKeyStoreSigner(this.key_store);\n      const { signature } = key ? signer.signBuffer(Buffer.from(securityCode), accountId) : undefined;\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, { securityCode, signature })\n   }\n\n   receiveMessage(event) {\n      let data\n      try {\n         data = JSON.parse(event.data)\n      } catch (e) {\n         // Silently dying.\n         return\n      }\n      const action = data['action'] || ''\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\n         // Unknown action, skipping silently.\n         return\n      }\n      const request_id = data['request_id'] || ''\n\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\n\n      this.processTransactionMessage(action, data)\n         .then(result => {\n            console.log('Wallet: OK ' + action)\n            reply({\n               success: true,\n               request_id,\n               result\n            })\n         })\n         .catch(error => {\n            console.error('Wallet: failed to ' + action, error)\n            reply({\n               success: false,\n               request_id,\n               error\n            })\n         })\n   }\n}\n","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * Simple in-memory keystore for testing purposes.\n */\nvar InMemoryKeyStore =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function InMemoryKeyStore(networkId) {\n    _classCallCheck(this, InMemoryKeyStore);\n\n    this.networkId = networkId;\n    this.keys = {};\n  }\n\n  _createClass(InMemoryKeyStore, [{\n    key: \"setKey\",\n    value: function () {\n      var _setKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accountId, key) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                this.keys[accountId + '_' + this.networkId] = key;\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function setKey(_x, _x2) {\n        return _setKey.apply(this, arguments);\n      }\n\n      return setKey;\n    }()\n  }, {\n    key: \"getKey\",\n    value: function () {\n      var _getKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(accountId) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", this.keys[accountId + '_' + this.networkId]);\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function getKey(_x3) {\n        return _getKey.apply(this, arguments);\n      }\n\n      return getKey;\n    }()\n  }, {\n    key: \"removeKey\",\n    value: function () {\n      var _removeKey = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(accountId) {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (this.getKey(accountId)) {\n                  this.setKey(accountId, undefined);\n                }\n\n              case 1:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function removeKey(_x4) {\n        return _removeKey.apply(this, arguments);\n      }\n\n      return removeKey;\n    }()\n  }, {\n    key: \"clear\",\n    value: function () {\n      var _clear = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                this.keys = {};\n\n              case 1:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function clear() {\n        return _clear.apply(this, arguments);\n      }\n\n      return clear;\n    }()\n  }]);\n\n  return InMemoryKeyStore;\n}();\n\nmodule.exports = InMemoryKeyStore;","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * Wallet based account and signer that uses external wallet through the iframe to sign transactions.\n */\nvar BrowserLocalStorageKeystore = require('./signing/browser_local_storage_key_store');\n\nvar KeyPair = require('./signing/key_pair');\n\nvar SimpleKeyStoreSigner = require('./signing/simple_key_store_signer');\n\nvar LOGIN_WALLET_URL_SUFFIX = '/login/';\nvar LOCAL_STORAGE_KEY_SUFFIX = '_wallet_auth_key';\nvar PENDING_ACCESS_KEY_PREFIX = 'pending_key'; // browser storage key for a pending access key (i.e. key has been generated but we are not sure it was added yet)\n\n/**\n * Wallet based account and signer that uses external wallet through the iframe to sign transactions.\n * @example \n * // if importing WalletAccount directly\n * const walletAccount = new WalletAccount(contractName, walletBaseUrl)\n * // if importing in all of nearLib and calling from variable \n * const walletAccount = new nearlib.WalletAccount(contractName, walletBaseUrl)\n * // To access wallet globally use:\n * window.walletAccount = new nearlib.WalletAccount(config.contractName, walletBaseUrl);\n */\n\nvar WalletAccount =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function WalletAccount(appKeyPrefix) {\n    var walletBaseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://wallet.nearprotocol.com';\n    var keyStore = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : new BrowserLocalStorageKeystore();\n\n    _classCallCheck(this, WalletAccount);\n\n    this._walletBaseUrl = walletBaseUrl;\n    this._authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n    this._keyStore = keyStore;\n    this._authData = JSON.parse(window.localStorage.getItem(this._authDataKey) || '{}');\n\n    if (!this.isSignedIn()) {\n      this._completeSignInWithAccessKey();\n    }\n  }\n  /**\n   * Returns true, if this WalletAccount is authorized with the wallet.\n   * @example\n   * walletAccount.isSignedIn();\n   */\n\n\n  _createClass(WalletAccount, [{\n    key: \"isSignedIn\",\n    value: function isSignedIn() {\n      return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example \n     * walletAccount.getAccountId();\n     */\n\n  }, {\n    key: \"getAccountId\",\n    value: function getAccountId() {\n      return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param {string} contract_id contract ID of the application\n     * @param {string} title name of the application\n     * @param {string} success_url url to redirect on success\n     * @param {string} failure_url url to redirect on failure\n     * @example\n     *   walletAccount.requestSignIn(\n     *     myContractId,\n     *     title,\n     *     onSuccessHref,\n     *     onFailureHref);\n     */\n\n  }, {\n    key: \"requestSignIn\",\n    value: function requestSignIn(contract_id, title, success_url, failure_url) {\n      var currentUrl = new URL(window.location.href);\n      var newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n      newUrl.searchParams.set('title', title);\n      newUrl.searchParams.set('contract_id', contract_id);\n      newUrl.searchParams.set('success_url', success_url || currentUrl.href);\n      newUrl.searchParams.set('failure_url', failure_url || currentUrl.href);\n      newUrl.searchParams.set('app_url', currentUrl.origin);\n\n      if (!this.getAccountId() || !this._keyStore.getKey(this.getAccountId())) {\n        var accessKey = KeyPair.fromRandomSeed();\n        newUrl.searchParams.set('public_key', accessKey.getPublicKey());\n\n        this._keyStore.setKey(PENDING_ACCESS_KEY_PREFIX + accessKey.getPublicKey(), accessKey).then(window.location.replace(newUrl.toString()));\n      }\n    }\n    /**\n     * Complete sign in for a given account id and public key. To be invoked by the app when getting a callback from the wallet.\n     */\n\n  }, {\n    key: \"_completeSignInWithAccessKey\",\n    value: function _completeSignInWithAccessKey() {\n      var currentUrl = new URL(window.location.href);\n      var publicKey = currentUrl.searchParams.get('public_key') || '';\n      var accountId = currentUrl.searchParams.get('account_id') || '';\n\n      if (accountId && publicKey) {\n        this._authData = {\n          accountId: accountId\n        };\n        window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n\n        this._moveKeyFromTempToPermanent(accountId, publicKey);\n      }\n    }\n  }, {\n    key: \"_moveKeyFromTempToPermanent\",\n    value: function () {\n      var _moveKeyFromTempToPermanent2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(accountId, publicKey) {\n        var keyPair;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return this._keyStore.getKey(PENDING_ACCESS_KEY_PREFIX + publicKey);\n\n              case 2:\n                keyPair = _context.sent;\n                _context.next = 5;\n                return this._keyStore.setKey(accountId, keyPair);\n\n              case 5:\n                _context.next = 7;\n                return this._keyStore.removeKey(PENDING_ACCESS_KEY_PREFIX + publicKey);\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function _moveKeyFromTempToPermanent(_x, _x2) {\n        return _moveKeyFromTempToPermanent2.apply(this, arguments);\n      }\n\n      return _moveKeyFromTempToPermanent;\n    }()\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      this._authData = {};\n      window.localStorage.removeItem(this._authDataKey);\n    }\n    /**\n     * Sign a buffer. If the key for originator is not present,\n     * this operation will fail.\n     * @param {Uint8Array} buffer\n     * @param {string} originator\n     */\n\n  }, {\n    key: \"signBuffer\",\n    value: function () {\n      var _signBuffer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(buffer, originator) {\n        var signer, signature;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(!this.isSignedIn() || originator !== this.getAccountId())) {\n                  _context2.next = 2;\n                  break;\n                }\n\n                throw 'Unauthorized account_id ' + originator;\n\n              case 2:\n                signer = new SimpleKeyStoreSigner(this._keyStore);\n                _context2.next = 5;\n                return signer.signBuffer(buffer, originator);\n\n              case 5:\n                signature = _context2.sent;\n                return _context2.abrupt(\"return\", signature);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function signBuffer(_x3, _x4) {\n        return _signBuffer.apply(this, arguments);\n      }\n\n      return signBuffer;\n    }()\n  }]);\n\n  return WalletAccount;\n}();\n\nmodule.exports = WalletAccount;","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar Near = require('./near');\n\nvar NearClient = require('./nearclient');\n\nvar Account = require('./account');\n\nvar SimpleKeyStoreSigner = require('./signing/simple_key_store_signer');\n\nvar BrowserLocalStorageKeystore = require('./signing/browser_local_storage_key_store');\n\nvar LocalNodeConnection = require('./local_node_connection');\n\nvar KeyPair = require('./signing/key_pair');\n\nvar sendJson = require('./internal/send-json');\n\nvar storageAccountIdKey = 'dev_near_user'; // This key will only be available on dev/test environments. Do not rely on it for anything that runs on mainnet.\n\nvar devKey = new KeyPair('22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV', '2wyRcSwSuHtRVmkMCGjPwnzZmQLeXLzLLyED1NDMt4BjnKgQL6tF85yBx6Jr26D2dUNeC716RBoTxntVHsegogYw');\nvar devAccountName = 'alice.near';\nvar localNodeUrl = 'http://localhost:3030';\nmodule.exports = {\n  getConfig: function () {\n    var _getConfig = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", JSON.parse(decodeURIComponent(getCookie('fiddleConfig'))) || {});\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    function getConfig() {\n      return _getConfig.apply(this, arguments);\n    }\n\n    return getConfig;\n  }(),\n\n  /**\n   * Create a connection which can perform operations on behalf of a given account.\n   * @param {object} options object to pass named parameters.\n   * @param {Object} options.nodeUrl specifies node url. accountId specifies account id. key_pair is the key pair for account\n   * @param {boolean} options.useDevAccount specify to use development account to create accounts / deploy contracts. Should be used only on TestNet.\n   * @param {string} options.accountId account ID to use.\n   * @param {string} options.networkId id associated with this network, for key management purposes.\n   */\n  connect: function () {\n    var _connect = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var options,\n          nearClient,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              options = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n              // construct full options objects based on params, and fill in with defaults.\n              this.options = Object.assign({\n                deps: {}\n              }, options);\n              this.deps = this.options.deps;\n\n              if (this.options.useDevAccount) {\n                this.options.accountId = devAccountName;\n                this.options.key = devKey;\n              }\n\n              this.options.helperUrl = this.options.helperUrl || this.options.baseUrl;\n\n              if (!this.deps.createAccount) {\n                if (this.options.helperUrl) {\n                  this.deps.createAccount = this.createAccountWithContractHelper.bind(this);\n                } else {\n                  this.deps.createAccount = this.createAccountWithLocalNodeConnection.bind(this);\n                }\n              }\n\n              this.options.networkId = this.options.networkId || 'localhost';\n              _context2.t1 = this.options.nodeUrl;\n\n              if (_context2.t1) {\n                _context2.next = 12;\n                break;\n              }\n\n              _context2.next = 11;\n              return this.getConfig();\n\n            case 11:\n              _context2.t1 = _context2.sent.nodeUrl;\n\n            case 12:\n              _context2.t0 = _context2.t1;\n\n              if (_context2.t0) {\n                _context2.next = 15;\n                break;\n              }\n\n              _context2.t0 = localNodeUrl;\n\n            case 15:\n              this.options.nodeUrl = _context2.t0;\n              this.deps.keyStore = this.deps.keyStore || new BrowserLocalStorageKeystore(this.options.networkId);\n              this.deps.storage = this.deps.storage || window.localStorage;\n              nearClient = new NearClient(new SimpleKeyStoreSigner(this.deps.keyStore), new LocalNodeConnection(this.options.nodeUrl));\n              this.near = new Near(nearClient);\n\n              if (this.options.accountId && this.options.key) {\n                this.deps.keyStore.setKey(this.options.accountId, this.options.key);\n              }\n\n              if (this.options.accountId) {\n                _context2.next = 24;\n                break;\n              }\n\n              _context2.next = 24;\n              return this.getOrCreateDevUser();\n\n            case 24:\n              return _context2.abrupt(\"return\", this.near);\n\n            case 25:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this);\n    }));\n\n    function connect() {\n      return _connect.apply(this, arguments);\n    }\n\n    return connect;\n  }(),\n  getOrCreateDevUser: function () {\n    var _getOrCreateDevUser = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee4() {\n      var _this = this;\n\n      var tempUserAccountId, accountKey, accountLib, keypair, createAccount;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              tempUserAccountId = this.deps.storage.getItem(storageAccountIdKey);\n              _context4.next = 3;\n              return this.deps.keyStore.getKey(tempUserAccountId);\n\n            case 3:\n              accountKey = _context4.sent;\n\n              if (!(tempUserAccountId && accountKey)) {\n                _context4.next = 17;\n                break;\n              }\n\n              // Make sure the user actually exists with valid keys and recreate it if it doesn't\n              accountLib = new Account(this.near.nearClient);\n              _context4.prev = 6;\n              _context4.next = 9;\n              return accountLib.viewAccount(tempUserAccountId);\n\n            case 9:\n              return _context4.abrupt(\"return\", tempUserAccountId);\n\n            case 12:\n              _context4.prev = 12;\n              _context4.t0 = _context4[\"catch\"](6);\n              console.log('Error looking up temp account', _context4.t0); // Something went wrong! Recreate user by continuing the flow\n\n            case 15:\n              _context4.next = 18;\n              break;\n\n            case 17:\n              tempUserAccountId = 'devuser' + Date.now();\n\n            case 18:\n              keypair = KeyPair.fromRandomSeed();\n              createAccount = this.deps.createAccount ? this.deps.createAccount :\n              /*#__PURE__*/\n              function () {\n                var _ref = _asyncToGenerator(\n                /*#__PURE__*/\n                _regeneratorRuntime.mark(function _callee3(accountId, newAccountPublicKey) {\n                  return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n                    while (1) {\n                      switch (_context3.prev = _context3.next) {\n                        case 0:\n                          return _context3.abrupt(\"return\", _this.createAccountWithContractHelper(accountId, newAccountPublicKey));\n\n                        case 1:\n                        case \"end\":\n                          return _context3.stop();\n                      }\n                    }\n                  }, _callee3);\n                }));\n\n                return function (_x, _x2) {\n                  return _ref.apply(this, arguments);\n                };\n              }();\n              _context4.next = 22;\n              return createAccount.bind(this, tempUserAccountId, keypair.getPublicKey())();\n\n            case 22:\n              this.deps.keyStore.setKey(tempUserAccountId, keypair);\n              this.deps.storage.setItem(storageAccountIdKey, tempUserAccountId);\n              return _context4.abrupt(\"return\", tempUserAccountId);\n\n            case 25:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4, this, [[6, 12]]);\n    }));\n\n    function getOrCreateDevUser() {\n      return _getOrCreateDevUser.apply(this, arguments);\n    }\n\n    return getOrCreateDevUser;\n  }(),\n\n  get myAccountId() {\n    return this.deps.storage.getItem(storageAccountIdKey);\n  },\n\n  /**\n   * Function to create an account on local node. This will not work on non-dev environments.\n   */\n  createAccountWithLocalNodeConnection: function () {\n    var _createAccountWithLocalNodeConnection = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee5(newAccountName, newAccountPublicKey) {\n      var account, createAccountResponse;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              account = new Account(this.near.nearClient);\n              this.deps.keyStore.setKey(devAccountName, devKey); // need to have dev account in key store to use this.\n\n              _context5.next = 4;\n              return account.createAccount(newAccountName, newAccountPublicKey, 1, devAccountName);\n\n            case 4:\n              createAccountResponse = _context5.sent;\n              _context5.next = 7;\n              return this.near.waitForTransactionResult(createAccountResponse);\n\n            case 7:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5, this);\n    }));\n\n    function createAccountWithLocalNodeConnection(_x3, _x4) {\n      return _createAccountWithLocalNodeConnection.apply(this, arguments);\n    }\n\n    return createAccountWithLocalNodeConnection;\n  }(),\n\n  /**\n   * Function to create an account on near-hosted devnet using contract helper. This will not work on non-dev environments.\n   */\n  createAccountWithContractHelper: function () {\n    var _createAccountWithContractHelper = _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee6(newAccountId, publicKey) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return sendJson('POST', \"\".concat(this.options.helperUrl, \"/account\"), {\n                newAccountId: newAccountId,\n                newAccountPublicKey: publicKey\n              });\n\n            case 2:\n              return _context6.abrupt(\"return\", _context6.sent);\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6, this);\n    }));\n\n    function createAccountWithContractHelper(_x5, _x6) {\n      return _createAccountWithContractHelper.apply(this, arguments);\n    }\n\n    return createAccountWithContractHelper;\n  }()\n};\n\nfunction getCookie(name) {\n  var v = document.cookie.match('(^|;) ?' + name + '=([^;]*)(;|$)');\n  return v ? v[2] : null;\n}","var _regeneratorRuntime = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\n/**\n * Access Key based signer that uses Wallet to authorize app on the account and receive the access key.\n */\nvar KeyPair = require('./signing/key_pair');\n\nvar BrowserLocalStorageKeystore = require('./signing/browser_local_storage_key_store');\n\nvar SimpleKeyStoreSigner = require('./signing/simple_key_store_signer');\n\nvar LOGIN_WALLET_URL_SUFFIX = '/login_v2/';\nvar LOCAL_STORAGE_KEY_SUFFIX = '_wallet_access_key';\n/**\n * Access Key based signer that uses Wallet to authorize app on the account and receive the access key.\n * @example\n * // if importing WalletAccessKey directly\n * const walletAccount = new WalletAccessKey(contractName, walletBaseUrl)\n * // if importing in all of nearLib and calling from variable\n * const walletAccount = new nearlib.WalletAccessKey(contractName, walletBaseUrl)\n * // To access this signer globally\n * window.walletAccount = new nearlib.WalletAccessKey(config.contractName, walletBaseUrl);\n * // To provide custom signer where the keys would be stored\n * window.walletAccount = new nearlib.WalletAccessKey(config.contractName, walletBaseUrl, customSigner);\n */\n\nvar WalletAccessKey =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  function WalletAccessKey(appKeyPrefix) {\n    var walletBaseUrl = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'https://wallet.nearprotocol.com';\n    var signer = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, WalletAccessKey);\n\n    this._walletBaseUrl = walletBaseUrl;\n    this._authDataKey = appKeyPrefix + LOCAL_STORAGE_KEY_SUFFIX;\n    this._signer = signer || new SimpleKeyStoreSigner(new BrowserLocalStorageKeystore());\n    this._authData = JSON.parse(window.localStorage.getItem(this._authDataKey) || '{}');\n\n    if (!this.isSignedIn()) {\n      this._tryInitFromUrl();\n    }\n  }\n  /**\n   * Returns true, if this WalletAccount is authorized with the wallet.\n   * @example\n   * walletAccount.isSignedIn();\n   */\n\n\n  _createClass(WalletAccessKey, [{\n    key: \"isSignedIn\",\n    value: function isSignedIn() {\n      return !!this._authData.accountId;\n    }\n    /**\n     * Returns authorized Account ID.\n     * @example\n     * walletAccount.getAccountId();\n     */\n\n  }, {\n    key: \"getAccountId\",\n    value: function getAccountId() {\n      return this._authData.accountId || '';\n    }\n    /**\n     * Redirects current page to the wallet authentication page.\n     * @param {string} contractId contract ID of the application\n     * @param {string} title name of the application\n     * @param {string} successUrl url to redirect on success\n     * @param {string} failureUrl url to redirect on failure\n     */\n\n  }, {\n    key: \"requestSignIn\",\n    value: function requestSignIn(contractId, title, successUrl, failureUrl) {\n      this._authData.key = KeyPair.fromRandomSeed();\n      var currentUrl = new URL(window.location.href);\n      var newUrl = new URL(this._walletBaseUrl + LOGIN_WALLET_URL_SUFFIX);\n      newUrl.searchParams.set('title', title);\n      newUrl.searchParams.set('contract_id', contractId);\n      newUrl.searchParams.set('public_key', this._authData.key.getPublicKey());\n      newUrl.searchParams.set('success_url', successUrl || currentUrl.href);\n      newUrl.searchParams.set('failure_url', failureUrl || currentUrl.href);\n      newUrl.searchParams.set('app_url', currentUrl.origin);\n      window.location.replace(newUrl.toString());\n    }\n    /**\n     * Sign out from the current account\n     * @example\n     * walletAccount.signOut();\n     */\n\n  }, {\n    key: \"signOut\",\n    value: function signOut() {\n      if (this._authData.accountId) {\n        this._signer.keyStore.setKey(this.getAccountId(), null).catch(console.error);\n\n        this._authData = {};\n        window.localStorage.removeItem(this._authDataKey);\n      }\n    }\n  }, {\n    key: \"_saveAuthData\",\n    value: function _saveAuthData() {\n      window.localStorage.setItem(this._authDataKey, JSON.stringify(this._authData));\n    }\n  }, {\n    key: \"_tryInitFromUrl\",\n    value: function _tryInitFromUrl() {\n      if (this._authData.key) {\n        var currentUrl = new URL(window.location.href);\n        var publicKey = currentUrl.searchParams.get('public_key') || '';\n        var accountId = currentUrl.searchParams.get('account_id') || '';\n\n        if (accountId && publicKey === this._authData.key.getPublicKey()) {\n          this._signer.keyStore.setKey(accountId, this._authData.key);\n\n          this._authData = {\n            accountId: accountId,\n            publicKey: publicKey\n          };\n\n          this._saveAuthData();\n        }\n      }\n    }\n    /**\n     * Sign a buffer. If the key for originator is not present,\n     * this operation will fail.\n     * @param {Uint8Array} buffer\n     * @param {string} originator\n     */\n\n  }, {\n    key: \"signBuffer\",\n    value: function () {\n      var _signBuffer = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(buffer, originator) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!(!this.isSignedIn() || originator !== this.getAccountId())) {\n                  _context.next = 2;\n                  break;\n                }\n\n                throw 'Unauthorized account_id ' + originator;\n\n              case 2:\n                _context.next = 4;\n                return this._signer.signBuffer(buffer, originator);\n\n              case 4:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function signBuffer(_x, _x2) {\n        return _signBuffer.apply(this, arguments);\n      }\n\n      return signBuffer;\n    }()\n  }]);\n\n  return WalletAccessKey;\n}();\n\nmodule.exports = WalletAccessKey;","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","import { parse } from 'query-string'\nimport { createActions } from 'redux-actions';\nimport { Wallet } from '../utils/wallet';\n\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\nexport const REFRESH_URL = 'REFRESH_URL'\n\nexport function handleRefreshAccount(wallet, history) {\n   return (dispatch, getState) => {\n      wallet.redirectIfEmpty(history)\n      const accountId = wallet.getAccountId()\n\n      dispatch({\n         type: LOADER_ACCOUNT,\n         loader: true\n      })\n\n      wallet\n         .loadAccount(accountId, history)\n         .then(v => {\n            dispatch({\n               type: REFRESH_ACCOUNT,\n               data: {\n                  accountId: accountId,\n                  authToken: wallet.newAccessToken(\n                     getState().account.url.app_title,\n                     getState().account.url.app_url,\n                     getState().account.url.contract_id\n                  ),\n                  amount: v['amount'] || 0,\n                  stake: v['stake'],\n                  nonce: v['nonce'],\n                  code_hash: v['code_hash'],\n                  accounts: wallet.accounts\n               }\n            })\n\n            dispatch({\n               type: LOADER_ACCOUNT,\n               loader: false\n            })\n         })\n         .catch(e => {\n            console.log(e)\n\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\n               wallet.clearState()\n               wallet.redirectToCreateAccount(\n                  {\n                     reset_accounts: true\n                  },\n                  history\n               )\n            }\n         })\n   }\n}\n\nexport function handleRefreshUrl(location) {\n   return dispatch => {\n      dispatch({\n         type: REFRESH_URL,\n         url: {\n            app_title: parse(location.search).title || '',\n            app_url: parse(location.search).app_url || '',\n            contract_id: parse(location.search).contract_id || '',\n            success_url: parse(location.search).success_url || '',\n            failure_url: parse(location.search).failure_url || '',\n            public_key: parse(location.search).public_key || ''\n         }\n      })\n   }\n}\n\nconst wallet = new Wallet()\n\nexport const { requestCode, validateCode } = createActions({\n   REQUEST_CODE: [\n      wallet.requestCode.bind(wallet),\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\n   ],\n   VALIDATE_CODE: [\n      wallet.validateCode.bind(wallet),\n      () => ({ successCode: 'account.validateCode.success', errorCode: 'account.validateCode.error' })\n   ]\n})\n\n\n\n\n","import { handleActions, combineActions } from 'redux-actions'\nimport {\n   REFRESH_ACCOUNT,\n   LOADER_ACCOUNT,\n   REFRESH_URL,\n   requestCode,\n   validateCode\n} from '../actions/account'\nimport reduceReducers from 'reduce-reducers';\n\nconst initialState = {\n   formLoader: false,\n   sentSms: false\n}\n\nconst loaderReducer = (state, { ready }) => {\n   if (typeof ready === 'undefined') {\n      return state\n   }\n   return { ...state, formLoader: !ready }\n}\n\nconst requestResultReducer = handleActions({\n   [combineActions(requestCode, validateCode)]: (state, { error, payload, meta }) => ({\n      ...state,\n      requestStatus: !!payload || error ? {\n         success: !error,\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \n      } : undefined\n   })\n}, initialState)\n\nconst reducer = handleActions({\n   [requestCode]: (state, { error, ready }) => {\n      if (ready && !error) {\n         return { ...state, sentSms: true }\n      }\n      return state\n   },\n}, initialState)\n\n// TODO: Migrate everything to redux-actions\nfunction account(state = {}, action) {\n   switch (action.type) {\n      case REFRESH_ACCOUNT:\n         return {\n            ...state,\n            ...action.data\n         }\n      case LOADER_ACCOUNT: {\n         return {\n            ...state,\n            loader: action.loader\n         }\n      }\n      case REFRESH_URL: {\n         return {\n            ...state,\n            url: action.url\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default reduceReducers(\n   initialState,\n   loaderReducer,\n   requestResultReducer,\n   reducer,\n   account)\n\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n/**\n * Lets you dispatch special actions with a { promise } field.\n *\n * This middleware will turn them into a single action at the beginning,\n * and a single success (or failure) action when the `promise` resolves.\n *\n * For convenience, `dispatch` will return the promise so the caller can wait.\n */\nconst readyStatePromise = store => next => action => {\n    if (!action.payload || !action.payload.then) {\n      return next(action)\n    }\n  \n    function makeAction(ready, data) {\n      const newAction = Object.assign({}, action)\n      delete newAction.payload\n      return Object.assign(newAction, { ready }, data)\n    }\n  \n    next(makeAction(false))\n    return action.payload.then(\n      payload => next(makeAction(true, { payload })),\n      error => next(makeAction(true, { error: true, payload: error }))\n    )\n  }\n\nexport default (history) => composeEnhancers(\n    applyMiddleware(\n        routerMiddleware(history),\n        readyStatePromise,\n        thunk))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter, Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport {\n   Image,\n   Menu,\n   Responsive,\n   Segment,\n   List,\n   Button,\n   Loader\n} from 'semantic-ui-react'\n\nimport SendImage from '../../images/icon-send.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\nimport LogoImage from '../../images/wallet.png'\nimport AccountGreyImage from '../../images/icon-account.svg'\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   &&& {\n      padding-bottom: 240px;\n\n      .navbar {\n         padding: 0px;\n\n         &-main {\n            background-color: #24272a;\n            height: 72px;\n            border-radius: 0;\n            margin-bottom: 0;\n\n            .item {\n               font-family: 'benton-sans', sans-serif;\n               font-weight: 600;\n            }\n\n            .mainlogo {\n               padding-left: 0px;\n\n               > div {\n                  width: 50px;\n                  overflow: hidden;\n\n                  > img.image {\n                     width: 160px;\n                     max-width: none;\n                  }\n               }\n            }\n\n            .account-name {\n               padding-right: 0px;\n               text-align: right;\n\n               > div {\n                  font-size: 16px;\n                  letter-spacing: normal;\n                  padding-left: 0px;\n                  padding-right: 0px;\n                  text-overflow: ellipsis;\n                  overflow: hidden;\n                  width: 116px;\n                  color: #fff;\n\n                  :hover {\n                     color: #fff;\n                  }\n               }\n            }\n\n            .account-tokens {\n               line-height: 28px;\n               font-size: 16px;\n\n               color: #fff;\n\n               margin: 21px 0 0 10px;\n               height: 28px;\n               background: #111314;\n               border-radius: 12px;\n               padding: 0 10px;\n\n               letter-spacing: normal;\n\n               :hover {\n                  color: #fff;\n               }\n\n               .near {\n                  font-size: 18px;\n                  padding-left: 4px;\n               }\n            }\n\n            .account-arrow {\n               padding-right: 14px;\n\n               img {\n                  width: 20px;\n               }\n            }\n         }\n         &-sub {\n            margin: 0px;\n            padding: 0px;\n            background-color: #24272a;\n\n            &.hide {\n               display: none;\n            }\n\n            .main {\n               font-family: 'benton-sans', sans-serif;\n               font-weight: 400;\n               font-size: 14px;\n               padding: 18px 6px;\n               margin: 0 1rem;\n               border-top: 1px solid #4a4f54;\n\n               &.border {\n                  border-bottom: 1px solid #4a4f54;\n               }\n\n               a {\n                  color: #fff;\n                  letter-spacing: 2px;\n               }\n\n               img {\n                  margin-top: -4px;\n                  width: 24px;\n                  margin-right: 20px;\n                  display: inline-block !important;\n               }\n            }\n\n            .sub {\n               padding: 10px 1rem 0 1rem;\n\n               .item {\n                  font-family: 'benton-sans', sans-serif;\n                  font-weight: 400;\n                  font-size: 14px;\n                  padding: 8px 9px;\n\n                  a {\n                     color: #8fd6bd;\n                     letter-spacing: 2px;\n                  }\n\n                  img {\n                     margin-top: -2px;\n                     width: 18px;\n                     margin-right: 22px;\n                     display: inline-block !important;\n                  }\n               }\n            }\n\n            .switch-account {\n               background: #000;\n               padding: 0 1rem;\n\n               padding: 20px;\n\n               .item {\n                  padding: 0 10px;\n               }\n\n               h6.item {\n                  padding-bottom: 10px;\n                  border: 0px;\n               }\n\n               .account-title {\n                  height: 40px;\n                  line-height: 40px;\n                  color: #fff;\n                  font-weight: 500;\n                  border-bottom: 1px solid #323434;\n                  letter-spacing: normal;\n\n                  text-overflow: ellipsis;\n                  overflow: hidden;\n               }\n\n               button {\n                  width: 100%;\n                  border-radius: 30px;\n                  background: #24272a;\n                  color: #6ad1e3;\n\n                  :hover {\n                     background: #fff;\n                     color: #6ad1e3;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      dropdown: true\n   }\n\n   handleDropdown = () =>\n      this.setState(state => ({\n         dropdown: !state.dropdown\n      }))\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n      this.handleDropdown()\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.handleDropdown()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { dropdown } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            maxWidth={Responsive.onlyTablet.maxWidth}\n         >\n            <Segment basic className='navbar'>\n               <Menu\n                  className='navbar-main'\n                  // fixed={fixed ? 'top' : null}\n                  // fixed='top'\n                  // pointing={!fixed}\n                  borderless\n               >\n                  <Menu.Item as={Link} to='/' className='mainlogo'>\n                     <div>\n                        <Image src={LogoImage} />\n                     </div>\n                  </Menu.Item>\n\n                  {account.accountId && (\n                  <Menu.Menu position='right' onClick={this.handleDropdown}>\n                     <Menu.Menu position='right'>\n                        <Menu.Item className='account-name'>\n                           {account.loader || !account.accountId ? (\n                              <Loader active inline size='mini' />\n                           ) : (\n                              <div>@{account.accountId}</div>\n                           )}\n                        </Menu.Item>\n                        <Menu.Item className='account-tokens'>\n                           {account.loader || !account.accountId ? (\n                              <Loader active inline size='mini' />\n                           ) : (\n                              account.amount\n                           )}\n                           <span className='near'>Ⓝ</span>\n                        </Menu.Item>\n                        <Menu.Item className='account-arrow'>\n                           <Image\n                              src={dropdown ? MobileMenuImage : CloseImage}\n                           />\n                        </Menu.Item>\n                     </Menu.Menu>\n                  </Menu.Menu>\n                )}\n               </Menu>\n               <Segment\n                  basic\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\n               >\n                  <Menu.Menu>\n                     <Menu.Item className='main'>\n                        <Link to='/' onClick={this.handleDropdown}>\n                           <Image src={RecentImage} />\n                           SUMMARY\n                        </Link>\n                     </Menu.Item>\n                     <Menu.Item className='main'>\n                        <Link to='/activity' onClick={this.handleDropdown}>\n                           <Image src={ActivityImage} />\n                           ACTIVITY\n                        </Link>\n                     </Menu.Item>\n                     <Menu.Item className='main border'>\n                        <Link to='/send-money' onClick={this.handleDropdown}>\n                           <Image src={SendImage} />\n                           SEND MONEY\n                        </Link>\n                     </Menu.Item>\n\n                     <Menu.Menu className='sub'>\n                        <Menu.Item>\n                           <Link to='/profile' onClick={this.handleDropdown}>\n                              <Image src={AccountGreyImage} />\n                              Profile\n                           </Link>\n                        </Menu.Item>\n                        <Menu.Item>\n                           <Link to='/contacts' onClick={this.handleDropdown}>\n                              <Image src={ContactsGreyImage} />\n                              Contacts\n                           </Link>\n                        </Menu.Item>\n                        <Menu.Item>\n                           <Link\n                              to='/authorized-apps'\n                              onClick={this.handleDropdown}\n                           >\n                              <Image src={AuthorizedGreyImage} />\n                              Authorized Apps\n                           </Link>\n                        </Menu.Item>\n                        <Menu.Item>\n                           <Link to='/' onClick={this.handleDropdown}>\n                              <Image src={LogoutImage} />\n                              Logout\n                           </Link>\n                        </Menu.Item>\n                     </Menu.Menu>\n                     <Segment basic className='switch-account'>\n                        <List>\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n\n                           {account.accounts &&\n                              Object.keys(account.accounts)\n                                 .filter(a => a !== account.accountId)\n                                 .map((account, i) => (\n                                    <List.Item\n                                       as='a'\n                                       key={`mf-${i}`}\n                                       onClick={() =>\n                                          this.handleSelectAccount(account)\n                                       }\n                                       className='account-title'\n                                    >\n                                       @{account}\n                                    </List.Item>\n                                 ))}\n                        </List>\n                        <Button onClick={this.redirectCreateAccount}>\n                           CREATE NEW ACCOUNT\n                        </Button>\n                     </Segment>\n                  </Menu.Menu>\n               </Segment>\n            </Segment>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(MobileView))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n   Image,\n   Menu,\n   Segment,\n   List,\n   Button,\n   Loader,\n   Popup\n} from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport AccountImage from '../../images/icon-account.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\n\nimport styled from 'styled-components'\n\nconst CustomPopup = styled(Popup)`\n   &&& {\n      padding: 0px;\n      right: 12px !important;\n      top: 50px !important;\n      position: fixed !important;\n\n      .account-dropdown {\n         width: 290px;\n         min-height: 100px;\n         background-color: #f8f8f8;\n\n         padding: 20px;\n\n         .item {\n            color: #999999;\n         }\n\n         .submenu {\n            margin: -20px;\n            padding: 20px;\n            background: #fff;\n\n            .icon {\n               width: 20px;\n            }\n            .content {\n               line-height: 26px;\n               padding-left: 10px;\n            }\n            .item {\n               margin: 4px 0;\n            }\n         }\n\n         .switch-account {\n            margin-top: 40px;\n            margin-bottom: 0px;\n         }\n\n         &-scroll {\n            max-height: 226px;\n            overflow-y: auto;\n            width: 270px;\n            margin-top: 0px;\n\n            > .item {\n               width: 250px;\n               margin: 0px;\n               padding: 0px;\n\n               :hover {\n                  text-decoration: underline;\n               }\n               ::before {\n                  display: none;\n               }\n               ::after {\n                  display: none;\n               }\n            }\n         }\n\n         h6 {\n            padding-bottom: 6px;\n         }\n         .account-title {\n            height: 40px;\n            line-height: 40px;\n            color: #4a4f54;\n            font-weight: 500;\n            border-bottom: 2px solid #e6e6e6;\n            letter-spacing: normal;\n\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         button {\n            width: 100%;\n            border-radius: 30px;\n            background: #fff;\n            color: #6ad1e3;\n\n            :hover {\n               background: #6ad1e3;\n               color: #fff;\n            }\n         }\n      }\n\n      :hover {\n         .account-dropdown {\n            display: block;\n         }\n      }\n   }\n`\n\nconst DesktopPopup = ({\n   account,\n   handleSelectAccount,\n   redirectCreateAccount\n}) => (\n   <CustomPopup\n      trigger={\n         <Menu.Menu position='right' className='popup-trigger'>\n            <Menu.Item className='devider' />\n            <Menu.Item className='account-img'>\n               <Image src={AccountGreyImage} />\n            </Menu.Item>\n            <Menu.Item className='account-name'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  `@${account.accountId}`\n               )}\n            </Menu.Item>\n            <Menu.Item className='account-tokens'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  account.amount\n               )}\n               <span className='near'>Ⓝ</span>\n            </Menu.Item>\n            <Menu.Item className='account-arrow'>\n               <Image src={ArrowDownImage} />\n            </Menu.Item>\n         </Menu.Menu>\n      }\n      on='click'\n      position='right center'\n   >\n      <Segment basic className='account-dropdown'>\n         <List className='submenu'>\n            <List.Item>\n               <List.Icon as={Image} src={AccountImage} />\n               <List.Content as={Link} to='/profile'>\n                  Profile\n               </List.Content>\n            </List.Item>\n            { false ?\n            <List.Item>\n               <List.Icon as={Image} src={ContactsGreyImage} />\n               <List.Content as={Link} to='/contacts'>\n                  Contacts\n               </List.Content>\n            </List.Item>\n            : null }\n            { false ?\n            <List.Item>\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\n               <List.Content as={Link} to='authorized-apps'>\n                  Authorized Apps\n               </List.Content>\n            </List.Item>\n            : null }\n            { false ?\n            <List.Item>\n               <List.Icon as={Image} src={LogoutImage} />\n               <List.Content as={Link} to='/logout'>\n                  Logout\n               </List.Content>\n            </List.Item>\n            : null }\n         </List>\n         <List className='switch-account'>\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n         </List>\n         <List className='account-dropdown-scroll'>\n            {account.accounts &&\n               Object.keys(account.accounts)\n                  .filter(a => a !== account.accountId)\n                  .map((account, i) => (\n                     <List.Item\n                        as='a'\n                        key={`mf-${i}`}\n                        onClick={() => handleSelectAccount(account)}\n                        className='account-title'\n                     >\n                        @{account}\n                     </List.Item>\n                  ))}\n         </List>\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\n      </Segment>\n   </CustomPopup>\n)\n\nexport default DesktopPopup\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport DesktopPopup from './DesktopPopup'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { Image, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nimport LogoImage from '../../images/wallet.png'\nimport HelpImage from '../../images/icon-help.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   padding-bottom: 180px;\n\n   .spacer {\n      height: 72px;\n   }\n\n   &&& .navbar {\n      background-color: #24272a;\n      height: 72px;\n      border-radius: 0;\n\n      &-icon {\n         height: 24px;\n         margin-right: 14px;\n         display: inline-block;\n      }\n      .item {\n         color: white;\n         font-family: 'benton-sans', sans-serif;\n         font-weight: 600;\n         font-size: 14px;\n         padding-left: 0px;\n         padding-right: 30px;\n         letter-spacing: 2px;\n\n         .mainlogo {\n            width: 220px;\n         }\n      }\n\n      a.item:hover {\n         color: #6ad1e3;\n      }\n      .hover.item {\n         color: #6ad1e3;\n      }\n      .account-img {\n         width: 36px;\n         height: 36px;\n         background: #4a4f54;\n         padding-right: 0px;\n         padding-left: 6px;\n         border-radius: 18px;\n         margin-top: 16px;\n\n         > img {\n            width: 24px;\n            height: 24px;\n         }\n      }\n      .item.account-name {\n         font-size: 14px;\n         letter-spacing: normal;\n         padding-left: 10px;\n         padding-right: 10px;\n\n         :hover {\n            color: #fff;\n         }\n      }\n      .account-tokens {\n         line-height: 24px;\n         font-size: 14px;\n\n         color: #fff;\n\n         margin: 23px 20px 0 10px;\n         height: 24px;\n         background: #111314;\n         border-radius: 12px;\n         padding: 0 10px;\n\n         letter-spacing: normal;\n\n         :hover {\n            color: #fff;\n         }\n\n         .near {\n            font-size: 18px;\n            padding-left: 4px;\n         }\n      }\n\n      .account-arrow {\n         padding-right: 26px;\n\n         img {\n            width: 12px;\n         }\n      }\n\n      .popup-container {\n         .popup-trigger {\n            cursor: pointer;\n         }\n         .devider {\n            width: 2px;\n            height: 40px;\n            background: #5d5f60;\n            padding: 0px;\n            margin: 16px 28px 0 0;\n         }\n\n         .help {\n            padding-right: 12px;\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      fixed: false,\n      activeItem: 'home'\n   }\n\n   hideFixedMenu = () => this.setState({ fixed: false })\n\n   showFixedMenu = () => this.setState({ fixed: true })\n\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { fixed } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            minWidth={Responsive.onlyComputer.minWidth}\n         >\n            <Visibility\n               once={false}\n               onBottomPassed={this.showFixedMenu}\n               onBottomPassedReverse={this.hideFixedMenu}\n            >\n               <Segment className='spacer' basic />\n               <Menu\n                  className='navbar'\n                  // fixed={fixed ? 'top' : null}\n                  fixed='top'\n                  pointing={!fixed}\n                  borderless\n                  size='large'\n               >\n                  <Menu.Item as={Link} to='/'>\n                     <Image className='mainlogo' src={LogoImage} />\n                  </Menu.Item>\n                  <Menu.Item as={Link} to='/'>\n                     <Image className='navbar-icon' src={RecentImage} />\n                     SUMMARY\n                  </Menu.Item>\n                  { false ?\n                  <Menu.Item as={Link} to='/activity'>\n                     <Image className='navbar-icon' src={ActivityImage} />\n                     ACTIVITY\n                  </Menu.Item>\n                  : null }\n                  <Menu.Item as={Link} to='/send-money'>\n                     <Image className='navbar-icon' src={SendImage} />\n                     SEND MONEY\n                  </Menu.Item>\n                  {account.accountId && (\n                     <Menu.Menu position='right' className='popup-container'>\n                        <Menu.Item\n                           as='a'\n                           href='http://near.chat/'\n                           target='_blank'\n                           className='help'\n                        >\n                           <Image className='navbar-icon' src={HelpImage} />\n                        </Menu.Item>\n                        <DesktopPopup\n                           account={account}\n                           handleSelectAccount={this.handleSelectAccount}\n                           redirectCreateAccount={this.redirectCreateAccount}\n                        />\n                     </Menu.Menu>\n                  )}\n               </Menu>\n            </Visibility>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DesktopView))\n","import React, { Fragment } from 'react'\n\nimport MobileView from './MobileView'\nimport DesktopView from './DesktopView'\n\nconst ResponsiveContainer = ({ children }) => (\n   <Fragment>\n      <DesktopView>{children}</DesktopView>\n      <MobileView>{children}</MobileView>\n   </Fragment>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\n\nimport LogoFooterImage from '../../images/near.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nimport styled from 'styled-components'\n\nconst FooterGrid = styled(Grid)`\n   position: absolute;\n   bottom: 0px;\n   width: 100%;\n\n   height: 100px;\n   background-color: #f8f8f8;\n\n   font-size: 12px;\n   font-weight: 300;\n   color: #999999;\n\n   &&& {\n      margin-bottom: 0px;\n      margin-left: 0px;\n\n      .near-logo {\n         .content {\n            a {\n               font-size: 12px;\n               font-weight: 300;\n               color: #999999;\n               text-decoration: underline;\n\n               :hover {\n                  text-decoration: none;\n               }\n            }\n            .color-brown-grey {\n               color: #e6e6e6;\n               padding: 0 6px;\n            }\n         }\n         .image {\n            width: 140px;\n            padding-left: 14px;\n\n            img {\n            }\n         }\n      }\n   }\n\n   &&&& .help {\n      padding-right: 0px;\n      padding-top: 10px;\n      padding-bottom: 0px;\n\n      > .list {\n         width: 230px;\n         height: 80px;\n         padding: 20px 0;\n         background: #fff;\n         text-align: left;\n\n         > img {\n            width: 80px;\n            position: absolute;\n            bottom: 0px;\n            right: 200px;\n         }\n\n         > h3 {\n            font-weight: 600 !important;\n            padding: 0 0 0 40px;\n            color: #999999 !important;\n\n            &.color {\n               color: #0072ce !important;\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         height: 180px;\n\n         .near-logo {\n            .item {\n            }\n            .content {\n               text-align: center;\n            }\n         }\n      }\n   }\n`\n\nconst ResponsiveContainer = () => (\n   <FooterGrid columns={2}>\n      <Grid.Column\n         textAlign='left'\n         verticalAlign='middle'\n         computer={10}\n         tablet={10}\n         mobile={16}\n      >\n         <Item.Group className='near-logo'>\n            <Item>\n               <Item.Image src={LogoFooterImage} />\n               <Item.Content>\n                  © 2019 NEAR Inc. All Rights Reserved.\n                  <br />\n                  <a href='/'>Terms of Service</a>\n                  <span className='color-brown-grey'>|</span>\n                  <a href='/'>Privacy Policy</a>\n               </Item.Content>\n            </Item>\n         </Item.Group>\n      </Grid.Column>\n      <Grid.Column\n         only='tablet computer'\n         computer={6}\n         tablet={6}\n         textAlign='right'\n         className='help'\n      >\n         <List floated='right'>\n            <List.Item as='h3'>Need Help?</List.Item>\n            <List.Item as='h3' className='color'>\n               <a href='https://discordapp.com/invite/gBtUFKR'>\n                  Contact Support\n               </a>\n            </List.Item>\n            <Image className='nearkat' src={NearkatImage} />\n         </List>\n      </Grid.Column>\n   </FooterGrid>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\n\nimport TContractImage from '../../images/icon-t-contract.svg'\n\nimport { Grid, List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&&& {\n      margin-top: 0px;\n\n      .other-assets {\n         background: #f8f8f8;\n         border-top: 2px solid #e6e6e6;\n         border-bottom: 4px solid #e6e6e6;\n         padding: 0px;\n\n         .column {\n            border-right: 2px solid #e6e6e6;\n            padding: 10px 0px 10px 18px;\n\n            :last-of-type {\n               border: 0px;\n            }\n\n            .content {\n               width: auto;\n            }\n\n            .icon {\n               background-image: url(${TContractImage});\n               background-repeat: no-repeat;\n               background-position: center top;\n               background-size: 24px 24px;\n               width: 24px;\n               height: 38px;\n               margin: 0 6px 0 0;\n            }\n\n            h5 {\n               font-weight: 600;\n               line-height: 16px;\n            }\n         }\n      }\n   }\n\n   && .other-assets-title {\n      padding-bottom: 6px;\n      color: #24272a;\n      font-weight: 600;\n   }\n\n   @media screen and (max-width: 991px) {\n      &&&& .other-assets {\n         .column {\n            .content {\n               h2 {\n                  font-size: 16px !important;\n               }\n            }\n            .icon {\n               background-size: 18px 24px;\n               width: 18px;\n               margin: 8px 6px 0 0;\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&&& .other-assets {\n         background: #fff;\n         margin-top: 18px !important;\n         border-right: 0px;\n\n         > .column {\n            width: 100% !important;\n            border-right: 0px;\n            border-bottom: 2px solid #f8f8f8;\n            padding: 6px 0px 6px 4px;\n\n            .list {\n               width: 100%;\n\n               .item {\n                  width: 100%;\n\n                  .content {\n                     float: right;\n                     text-align: right;\n\n                     h2 {\n                        font-size: 14px !important;\n                     }\n                  }\n                  .icon {\n                     height: 20px;\n                  }\n               }\n            }\n         }\n\n         &-title {\n            display: none;\n         }\n      }\n   }\n`\n\nconst DashboardOtherAssets = () => (\n   <CustomGrid>\n      <Grid.Row className='other-assets-title' as='h6'>\n         OTHER ASSETS\n      </Grid.Row>\n      <Grid.Row columns={6} className='other-assets'>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        12.125\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ETH\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        3.2501\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XRP\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        8.0987\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZEC\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        13.258\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        BNB\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        2.5897\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XMR\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        1.2589\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZIL\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardOtherAssets\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport DashboardOtherAssets from './DashboardOtherAssets'\n\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\n\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n\n         :first-child {\n            padding-left: 0px;\n         }\n      }\n\n      h1 {\n         color: #4a4f54;\n         padding-left: 0px;\n         line-height: 48px;\n      }\n   }\n\n   .near {\n      font-size: 48px;\n      color: #24272a;\n   }\n\n   &&& .send-money {\n      margin: -8px 0 0 0;\n\n      > .button {\n         width: 100%;\n         line-height: 60px;\n         border-radius: 30px;\n         border: solid 2px #5ace84;\n         font-size: 18px;\n         font-weight: 600;\n         letter-spacing: 2px;\n         color: #5ace84;\n         background: #fff;\n         text-align: left;\n         padding: 0 0 0 40px;\n\n         background-image: url(${ArrowGrnImage});\n         background-repeat: no-repeat;\n         background-position: 90% center;\n         background-size: 14px 20px;\n\n         :hover {\n            background-color: #5ace84;\n            color: #fff;\n            background-image: url(${ArrowRightImage});\n         }\n      }\n   }\n\n   &&& {\n      .right-section {\n         padding-left: 40px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      > .grid {\n         margin-left: 0px;\n         margin-right: 0px;\n      }\n\n      &&& .send-money {\n         margin-top: 20px;\n         margin-top: 0px;\n      }\n\n      &&& .creating-info {\n         padding-top: 24px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 12px 0;\n         }\n         .balance {\n            display: none;\n         }\n         .button {\n            width: 240px;\n            line-height: 44px;\n         }\n      }\n   }\n`\n\nconst DashboardContainer = ({ children, account }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row className='creating-info'>\n            <Grid.Column computer={12} tablet={11} mobile={16}>\n               <Header as='h1'>\n                  <span className='balance'>Balance: </span>\n                  <span className='color-black'>{account.amount}</span>\n                  <span className='near'>Ⓝ</span>\n               </Header>\n            </Grid.Column>\n            <Grid.Column\n               computer={4}\n               tablet={5}\n               mobile={16}\n               className='send-money'\n            >\n               <Button as={Link} to='/send-money'>\n                  SEND MONEY\n               </Button>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      { false ?\n      <DashboardOtherAssets />\n      : null }\n      {children}\n   </CustomContainer>\n)\n\nexport default DashboardContainer\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport CloseImage from '../../images/icon-close.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      padding: 20px;\n      margin: 12px 0 12px 0;\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n\n      @media screen and (max-width: 767px) {\n      }\n   }\n`\n\nconst DashboardNotice = ({ handleNotice }) => (\n   <CustomList horizontal className='box'>\n      <List.Item className='text'>\n         <List.Header>Here’s a Notice of some sort</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\n            a finibus.{` `}\n            <a href='/'>Call to Action</a>\n         </List.Content>\n      </List.Item>\n      <List.Item className='img'>\n         <Image onClick={handleNotice} src={CloseImage} />\n      </List.Item>\n   </CustomList>\n)\n\nexport default DashboardNotice\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Grid, Image } from 'semantic-ui-react'\n\nimport ArrowRight from '../../images/icon-arrow-right.svg'\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGridRow = styled(Grid.Row)`\n   &&& {\n      margin-left: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .col-image {\n         margin-left: -33px;\n         width: 40px;\n         flex: 0 0 40px;\n         padding-left: 0px;\n\n         .main-image {\n            border: 1px solid #e6e6e6;\n            background: #fff;\n            border-radius: 14px;\n            padding: 5px;\n            width: 26px;\n            height: 26px;\n            margin: 0 24px 0 18px;\n            overflow: hidden;\n\n            img {\n               margin: 0 0 0 0;\n            }\n         }\n      }\n\n      &.wide {\n         margin-left: 0px;\n         border-left: 0px;\n\n         .col-image {\n            margin-left: 6px;\n            width: 56px;\n            flex: 0 0 56px;\n         }\n\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 24px 0 0;\n\n            img {\n               padding-top: 10px;\n            }\n         }\n      }\n\n      .main-row-title {\n         font-weight: 600;\n         width: auto;\n         padding-right: 0px;\n         flex: 1;\n      }\n\n      .dropdown-image-right {\n         width: 10px;\n         margin: 0 0 0 0;\n         cursor: pointer;\n      }\n      .dropdown-image {\n         float: right;\n      }\n\n      &.dropdown-down {\n         background-color: #f8f8f8;\n\n         .dropdown-image-right {\n            width: 10px;\n            top: 0px;\n            left: 12px;\n            cursor: pointer;\n         }\n      }\n\n      &.showsub {\n         .dropdown-image-right {\n            left: -24px;\n         }\n      }\n      &.showsub.dropdown-down {\n         .dropdown-image-right {\n            left: -6px;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &.showsub {\n            .dropdown-image-right {\n               left: -14px;\n            }\n         }\n         &.showsub.dropdown-down {\n            .dropdown-image-right {\n               left: 4px;\n            }\n         }\n\n         .main-row-title {\n            a {\n               font-size: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst ListItem = ({\n   row,\n   i,\n   wide = false,\n   showSub = false,\n   toggleShowSub,\n   showSubOpen\n}) => (\n   <CustomGridRow\n      verticalAlign='middle'\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\n         showSub && showSubOpen === i ? `dropdown-down` : ``\n      } ${showSub ? `showsub` : ``}`}\n   >\n      <Grid.Column computer={8} tablet={wide ? 14 : 8} mobile={wide ? 14 : 10}>\n         <Grid verticalAlign='middle'>\n            <Grid.Column className='col-image'>\n               <div className='main-image'>\n                  <Image src={row[0]} align='left' />\n               </div>\n            </Grid.Column>\n            <Grid.Column className='main-row-title'>\n               <Link to='/' className='color-black'>\n                  {row[1]}\n               </Link>\n               {row[2] && (\n                  <span className='font-small'>\n                     <br />\n                     <Link to='/'>{row[2]}</Link>\n                  </span>\n               )}\n            </Grid.Column>\n         </Grid>\n      </Grid.Column>\n      <Grid.Column\n         computer={8}\n         tablet={wide ? 2 : 8}\n         mobile={wide ? 2 : 6}\n         textAlign='right'\n      >\n         {wide ? (\n            <Image\n               onClick={() => toggleShowSub(i)}\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\n               className='dropdown-image dropdown-image-right'\n            />\n         ) : (\n            <span className='font-small'>{row[3]}</span>\n         )}\n      </Grid.Column>\n   </CustomGridRow>\n)\n\nexport default ListItem\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport ListItem from './ListItem'\n\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      margin-bottom: 20px;\n\n      .row:first-child {\n         padding-bottom: 0px;\n      }\n\n      .row:last-child {\n         padding: 14px 0 0 4px;\n         margin-left: 20px;\n         border-left: 4px solid #f8f8f8;\n      }\n\n      .dashboard-header {\n         padding: 14px 0 10px 0;\n      }\n\n      link.view-all,\n      button.view-all,\n      a.view-all {\n         background: #f8f8f8;\n         margin: 0;\n         padding: 10px 20px;\n         color: #0072ce;\n         font-weight: 600;\n         border-radius: 20px;\n         border: 2px solid #f8f8f8;\n\n         :hover {\n            background: #fff;\n         }\n      }\n\n      .column-icon {\n         width: 28px;\n         display: inline-block;\n         margin: -4px 10px 0 8px;\n      }\n   }\n`\n\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\n   <CustomGrid>\n      <Grid.Row>\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\n            <Header className='h2'>\n               <Image className='column-icon' src={image} />\n               {title}\n            </Header>\n         </Grid.Column>\n      </Grid.Row>\n      <Dimmer inverted active={loader}>\n         <Loader />\n      </Dimmer>\n\n      {activity.map((row, i) => (\n         <ListItem key={`d-${i}`} row={row} />\n      ))}\n\n      <Grid.Row>\n         <Grid.Column textAlign='left' width={16}>\n            <Button as={Link} to={to} className='view-all'>\n               VIEW ALL\n            </Button>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardActivity\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport DashboardContainer from './DashboardContainer'\nimport DashboardSection from './DashboardSection'\nimport DashboardActivity from './DashboardActivity'\n\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\n\nimport TStakeImage from '../../images/icon-t-stake.svg'\nimport TTransferImage from '../../images/icon-t-transfer.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nclass DashboardDetail extends Component {\n   state = {\n      loader: false,\n      notice: true,\n      activity: [],\n      authorizedaps: [],\n      newcontacts: []\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [\n                  TTransferImage,\n                  'Sent: 125 Ⓝ  to @jake.near',\n                  'Some details about this activity here',\n                  '3 min ago'\n               ],\n               [\n                  TStakeImage,\n                  'You Staked 10 tokens',\n                  'Some details about this activity here',\n                  '20 min ago'\n               ],\n               [\n                  TTransferImage,\n                  'Sent: 125 Ⓝ  to @vlad.near',\n                  'Some details about this activity here',\n                  '1 hr ago'\n               ]\n            ],\n            authorizedaps: [\n               [NearkatImage, 'NEAR Place', '', '3 hrs ago'],\n               [NearkatImage, 'Cryptocats', '', '5 hrs ago'],\n               [NearkatImage, 'Knights App', '', '2 days ago']\n            ],\n            newcontacts: [\n               [AccountGreyImage, 'Alex Skidanov ', '', 'Connected 2 days ago'],\n               [AccountGreyImage, '@vlad.near', '', '2 days ago'],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  '',\n                  'Connected 2 days ago'\n               ]\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   handleNotice = () => {\n      this.setState(state => ({\n         notice: !state.notice\n      }))\n   }\n\n   render() {\n      const {\n         loader,\n         notice,\n         activity,\n         authorizedaps,\n         newcontacts\n      } = this.state\n\n      return (\n         <DashboardContainer account={this.props.account}>\n            { false ?\n            <DashboardSection notice={notice} handleNotice={this.handleNotice}>\n               <DashboardActivity\n                  loader={loader}\n                  image={activityGreyImage}\n                  title='Activity'\n                  to='/'\n                  activity={activity}\n               />\n               <DashboardActivity\n                  loader={loader}\n                  image={AuthorizedGreyImage}\n                  title='Authorized Apps'\n                  to='/authorized-apps'\n                  activity={authorizedaps}\n               />\n               <DashboardActivity\n                  loader={loader}\n                  image={ContactsGreyImage}\n                  title='New Contacts'\n                  to='/contacts'\n                  activity={newcontacts}\n               />\n            </DashboardSection>\n            : null }\n         </DashboardContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DashboardDetail))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, List, Responsive } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .username-row {\n         padding-bottom: 0px;\n         margin-left: -1rem;\n      }\n\n      .alert-info {\n         font-size: 18px;\n         font-weight: 600;\n         line-height: 64px;\n         margin: 0 0 0 0;\n         padding-left: 0px;\n\n         &.problem {\n            color: #ff585d;\n         }\n         &.success {\n            color: #6ad1e3;\n         }\n      }\n\n      .note-box {\n         padding-left: 30px;\n\n         .border-left-bold {\n            padding-bottom: 20px;\n         }\n      }\n\n      .note-info {\n         .title {\n            letter-spacing: 2px;\n            font-weight: 600;\n            line-height: 20px;\n            color: #4a4f54;\n         }\n      }\n\n      .form-row {\n         margin-left: -1rem;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n      .note-box {\n         padding-left: 0px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         .username-row {\n            margin-left: 0;\n         }\n\n         .alert-info {\n            padding: 0 0 6px 24px;\n            line-height: 34px;\n            font-size: 14px;\n            margin-top: -6px;\n         }\n\n         .note-box {\n            padding-left: 1rem;\n            margin-top: 10px;\n         }\n\n         .note-box {\n            .border-left-bold {\n               padding-bottom: 0px;\n            }\n         }\n\n         .form-row {\n            padding-top: 6px;\n            margin-left: 0;\n         }\n\n         &&& .note-info {\n            font-size: 12px;\n         }\n      }\n   }\n`\n\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\n   <CustomGrid>\n      <Grid.Row className='username-row'>\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\n            Choose a Username\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='form-row'>\n         <Grid.Column computer={8} tablet={8} mobile={16}>\n            {children}\n         </Grid.Column>\n         <Grid.Column computer={8} tablet={8} mobile={16}>\n            <Grid className='note-box'>\n               {successMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info success'>\n                        Congrats! this name is available.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n               {errorMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info problem'>\n                        Username is taken. Try something else.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n\n               <Grid.Row>\n                  <Grid.Column className='border-left-bold'>\n                     <List className='note-info'>\n                        <List.Item className='title'>NOTE</List.Item>\n                        <List.Item>\n                           Your username can be 5-32 characters\n                        </List.Item>\n                        <List.Item>\n                           long and contain any of the following:\n                        </List.Item>\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\n                        <List.Item>• Digits (0-9)</List.Item>\n                        <List.Item>• Special characters (@._-)</List.Item>\n                     </List>\n                  </Grid.Column>\n               </Grid.Row>\n            </Grid>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nCreateAccountSection.propTypes = {\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired\n}\n\nexport default CreateAccountSection\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst CustomFormInput = styled(Form.Input)`\n   &&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background: 0;\n\n      position: relative;\n\n      :focus {\n         border-color: #6ad1e3;\n      }\n   }\n\n   &&&&& .spinner {\n      margin-right: 20px;\n\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n\n   &.problem > .input > input,\n   &.problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   &.success > .input > input,\n   &.success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n`\n\nconst CreateAccoungFormInput = ({\n   formLoader,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage\n}) => (\n   <CustomFormInput\n      loading={formLoader}\n      className={`create ${successMessage ? 'success' : ''}${\n         errorMessage ? 'problem' : ''\n      }`}\n      name='accountId'\n      value={accountId}\n      onChange={handleChangeAccountId}\n      placeholder='example: satoshi.near'\n   />\n)\n\nCreateAccoungFormInput.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   handleChangeAccountId: PropTypes.func.isRequired,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired\n}\n\nexport default CreateAccoungFormInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\n\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\n\nimport styled from 'styled-components'\n\nconst AccountForm = styled(Form)`\n   && button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      font-weight: 600;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .recoverAccount {\n      display: block;\n      margin-top: 2em;\n      font-size: 18px\n   }\n\n   @media screen and (max-width: 767px) {\n   }\n`\n\nconst CreateAccountForm = ({\n   formLoader,\n   accountId,\n   successMessage,\n   errorMessage,\n   handleSubmit,\n   handleChangeAccountId,\n   handleRecaptcha\n}) => (\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\n      <CreateAccoungFormInput\n         formLoader={formLoader}\n         accountId={accountId}\n         handleChangeAccountId={handleChangeAccountId}\n         successMessage={successMessage}\n         errorMessage={errorMessage}\n      />\n\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n         {successMessage && (\n            <Segment basic className='alert-info success'>\n               Congrats! this name is available.\n            </Segment>\n         )}\n         {errorMessage && (\n            <Segment basic className='alert-info problem'>\n               Username is taken. Try something else.\n            </Segment>\n         )}\n      </Responsive>\n\n      <ReCAPTCHA\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\n         onChange={handleRecaptcha}\n      />\n\n      <Button type='submit' disabled={!successMessage}>\n         CREATE ACCOUNT\n      </Button>\n\n      <Link to='/recover-account' className=\"recoverAccount\">I already have an account</Link>\n   </AccountForm>\n)\n\nCreateAccountForm.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   handleSubmit: PropTypes.func.isRequired,\n   handleChangeAccountId: PropTypes.func.isRequired\n}\n\nexport default CreateAccountForm\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst DisclaimerGrid = styled(Grid)`\n   && .disclaimer {\n      margin-left: 1rem;\n      margin-right: 1rem;\n      margin-top: 100px;\n\n      > .column {\n         padding-left: 0px;\n         padding-right: 0px;\n      }\n   }\n   .disclaimer-info {\n      font-weight: 600;\n      letter-spacing: 2px;\n   }\n\n   @media screen and (max-width: 767px) {\n      && .disclaimer {\n         margin-top: 50px;\n         font-size: 12px;\n      }\n   }\n`\n\nconst Disclaimer = () => (\n    <DisclaimerGrid>\n        <Grid.Row className='disclaimer border-top-bold'>\n        <Grid.Column computer={16} tablet={16} mobile={16}>\n            <span className='disclaimer-info'>DISCLAIMER: </span>\n            This is a developers&apos; preview Wallet. It should be used for\n            NEAR Protocol DevNet only. Learn more at <a href='http://nearprotocol.com'>nearprotocol.com</a>\n        </Grid.Column>\n        </Grid.Row>\n    </DisclaimerGrid>\n)\n\nexport default Disclaimer\n","import React from 'react'\n\nimport { Image, List } from 'semantic-ui-react'\n\nimport NearLogoImage from '../../images/near_logo.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   background: #f8f8f8;\n   width: 360px;\n   float: right;\n\n   img {\n      width: 160px;\n   }\n\n   .text {\n      margin: 0 16px 16px 64px;\n      line-height: 20px !important;\n      color: #24272a;\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         margin-top: 14px;\n         float: left;\n         width: 100%;\n      }\n   }\n`\n\nconst NearInfo = () => (\n   <CustomList className='box'>\n      <List.Item>\n         <Image src={NearLogoImage} />\n      </List.Item>\n      <List.Item className='text'>\n         NEAR is a scalable computing and storage platform that changes how the\n         web works for the better.{' '}\n         <a href='https://nearprotocol.com/'>Learn More</a>\n      </List.Item>\n   </CustomList>\n)\n\nexport default NearInfo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport { parse } from 'query-string'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\nconst CreateAccountContainer = ({ loader, children, location }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column>\n               <h1>Create Account</h1>\n               <h2>\n                  Creating a NEAR account is easy. Just choose a username and\n                  you’re ready to go.\n               </h2>\n               {parse(location.search).reset_accounts && (\n                  <Header as='h3' className='color-blue'>\n                     You have been redirected to this page because we had to\n                     reset the developer accounts. Please create a new account.\n                     We apologize for the inconveience.\n                  </Header>\n               )}\n            </Grid.Column>\n            <Grid.Column className='add'>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nCreateAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default CreateAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport CreateAccountSection from './CreateAccountSection'\nimport CreateAccountForm from './CreateAccountForm'\nimport CreateAccountContainer from './CreateAccountContainer'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass CreateAccount extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet)\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkNewAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\n         return false\n      }\n\n      this.setState(() => ({\n         successMessage: false,\n         errorMessage: false,\n         formLoader: true\n      }))\n\n      this.wallet\n         .createNewAccount(this.state.accountId)\n         .then(d => {\n            this.setState(() => ({\n               successMessage: true\n            }))\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\n         })\n         .catch(e => {\n            this.setState(() => ({\n               errorMessage: true\n            }))\n            console.error('Error creating account:', e)\n         })\n         .finally(() => {\n            this.setState(() => ({\n               formLoader: false\n            }))\n         })\n   }\n\n   handleRecaptcha = value => {\n      console.log(value)\n   }\n\n   render() {\n      const { loader } = this.state\n\n      return (\n         <CreateAccountContainer loader={loader} location={this.props.location}>\n            <CreateAccountSection {...this.state}>\n               <CreateAccountForm\n                  {...this.state}\n                  handleSubmit={this.handleSubmit}\n                  handleRecaptcha={this.handleRecaptcha}\n                  handleChangeAccountId={this.handleChangeAccountId}\n               />\n            </CreateAccountSection>\n         </CreateAccountContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const CreateAccountWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(CreateAccount)\n","import React from 'react'\nimport { Grid, Responsive } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst RequestStatusBoxGrid = styled(Grid)`\n   &&& .alert-info {\n      font-size: 18px;\n      font-weight: 600;\n      line-height: 64px;\n      margin: 0 0 0 0;\n      padding-left: 0px;\n\n      &.problem {\n         color: #ff585d;\n      }\n      &.success {\n         color: #6ad1e3;\n      }\n   }\n\n   && {\n      padding-left: 30px;\n   }\n\n   @media screen and (max-width: 991px) {\n      .note-box {\n         padding-left: 0px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .alert-info {\n         padding: 0 0 0 24px;\n         line-height: 34px;\n         font-size: 14px;\n      }\n\n      && {\n         padding-left: 1rem;\n         margin-top: 10px;\n      }\n  }\n`\n/**\n * Renders request status.\n *\n * @param requestStatus {object} request status, can be null in case not completed yet / no outgoing request\n * @param requestStatus.success {boolean} true if request was succesful\n * @param requestStatus.messageCode {string} localization code of status message to display\n */\nconst RequestStatusBox = ({ requestStatus }) => (\n   requestStatus ?\n      <RequestStatusBoxGrid>\n         <Responsive\n            as={Grid.Row}\n            minWidth={Responsive.onlyTablet.minWidth}\n         >\n            <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\n               {requestStatus.messageCode}\n            </Grid.Column>\n         </Responsive>\n      </RequestStatusBoxGrid>\n      : null\n)\n\nexport default RequestStatusBox\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport RequestStatusBox from '../common/RequestStatusBox'\n\nconst AccountFormSection = ({ requestStatus, children }) => (\n   <Grid>\n      <Grid.Column computer={8} tablet={8} mobile={16}>\n         {children}\n      </Grid.Column>\n      <Grid.Column computer={8} tablet={8} mobile={16}>\n         <RequestStatusBox requestStatus={requestStatus} />\n      </Grid.Column>\n   </Grid>\n)\n\nexport default AccountFormSection\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   &&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background: 0;\n\n      position: relative;\n\n      :focus {\n         border-color: #6ad1e3;\n      }\n   }\n\n   &&&&& .spinner {\n      margin-right: 20px;\n\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 1em;\n\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n\n   & h3 {\n      margin-bottom: 1rem;\n   }\n\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n`\n\nconst SetRecoveryInfoForm = ({\n   formLoader,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''} ${formLoader ? 'loading' : '' }`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\n               placeholder='example: +1 555 123 4567'\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>PROTECT ACCOUNT</Button>\n         <Link to=\"/dashboard\" className=\"ui button\">NOT NOW</Link>\n      </Form.Field>\n   </RecoveryInfoForm>\n)\n\nexport default SetRecoveryInfoForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n\n      h1 {\n         color: #4a4f54;\n         padding-bottom: 24px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-right: 1rem;\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst SetRecoveryInfoContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row className='creating-info'>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <Header as='h1'>Protect your Account</Header>\n               <Header as='h2'>\n                  Enter your phone number to make your account easy for you to recover in the future.\n               </Header>\n               <Header as='h3' className='color-blue'>\n                  If you want to backup your account keys manually, you can skip this.\n                  However if you choose this option, we won't be able to assist you with account recovery.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nSetRecoveryInfoContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default SetRecoveryInfoContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\nimport { requestCode, validateCode } from '../../actions/account';\n\nclass SetRecoveryInfo extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\n      } else {\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\n            .then(({error}) => {\n               if (error) return\n\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\n               setTimeout(() => {\n                  this.props.history.push(nextUrl)\n               }, 1500)\n            })\n      }\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <SetRecoveryInfoForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n               />\n            </AccountFormSection>\n         </SetRecoveryInfoContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\n","import React from 'react'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   &&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background: 0;\n\n      position: relative;\n\n      :focus {\n         border-color: #6ad1e3;\n      }\n   }\n\n   &&&&& .spinner {\n      margin-right: 20px;\n\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 1em;\n\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n\n   & h3 {\n      margin-bottom: 1rem;\n   }\n\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n`\n\nconst RecoverAccountForm = ({\n   formLoader,\n   accountId,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      <Form.Field>\n         <h3>Username</h3>\n         <Form.Input\n            loading={formLoader}\n            className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''}`}\n            name='accountId'\n            value={accountId}\n            onChange={handleChange}\n            placeholder='example: satoshi.near'\n            disabled={sentSms}\n         />\n      </Form.Field>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''} ${formLoader ? 'loading' : '' }`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\n               placeholder='example: +1 555 123 4567'\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>RECOVER ACCOUNT</Button>\n      </Form.Field>\n   </RecoveryInfoForm>\n)\n\nexport default RecoverAccountForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n\n      h1 {\n         color: #4a4f54;\n         padding-bottom: 24px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-right: 1rem;\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst RecoverAccountContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row className='creating-info'>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <Header as='h1'>Recover your Account</Header>\n               <Header as='h2'>\n                  Please enter your account name and phone number you used to protect account.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nRecoverAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default RecoverAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport RecoverAccountForm from './RecoverAccountForm'\nimport RecoverAccountContainer from './RecoverAccountContainer'\nimport { requestCode, validateCode } from '../../actions/account';\n\nclass RecoverAccount extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         accountId: value => this.wallet.isLegitAccountId(value),\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\n      } else {\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\n            .then(({error}) => {\n               if (error) return\n\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\n               setTimeout(() => {\n                  this.props.history.push(nextUrl)\n               }, 1500)\n            })\n      }\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <RecoverAccountContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <RecoverAccountForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n               />\n            </AccountFormSection>\n         </RecoverAccountContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const RecoverAccountWithRouter = connect(mapStateToProps)(RecoverAccount)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n   Container,\n   Loader,\n   Grid,\n   Dimmer,\n   Image,\n   List,\n   Segment\n} from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\nimport DenyImage from '../../images/icon-deny.svg'\nimport AppDefaultImage from '../../images/icon-app-default.svg'\nimport AuthorizeImage from '../../images/icon-authorize.svg'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   && .title {\n      padding-top: 40px;\n   }\n\n   && .contract {\n      padding-bottom: 40px;\n   }\n\n   &&& .authorize {\n      margin-top: 40px;\n\n      .bg {\n         width: 64px;\n         height: 64px;\n         background: #e6e6e6;\n         border-radius: 32px;\n\n         > img {\n            width: 40px;\n            height: 40px;\n            margin-top: 8px;\n         }\n      }\n      .md {\n         > img {\n            margin-top: 8px;\n            padding: 0 24px;\n         }\n      }\n   }\n\n   && .cont {\n      background: #f8f8f8;\n      padding: 16px 0px;\n\n      > div {\n         padding: 20px 0 20px 50px;\n      }\n      img {\n         height: 24px;\n         margin-right: 6px;\n      }\n      div.item {\n         padding-top: 24px;\n\n         .content {\n            line-height: 24px;\n         }\n      }\n   }\n\n   .list-item {\n      background: url(${CheckBlueImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   .list-item-deny {\n      background: url(${DenyImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n      && .cont {\n         > div {\n            padding: 20px 0 20px 20px;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && .title {\n         padding-top: 0px;\n\n         h2 {\n            font-size: 18px !important;\n            line-height: 24px !important;\n         }\n      }\n\n      && .contract {\n         padding-top: 0px;\n         padding-bottom: 20px;\n      }\n\n      && .cont {\n         > div {\n            border: 0px;\n            padding: 10px 0 10px 0;\n\n            h3 {\n               font-size: 14px !important;\n            }\n         }\n\n         div.item {\n            padding-top: 24px;\n\n            .content {\n               font-size: 12px;\n               line-height: 14px;\n            }\n         }\n      }\n\n      &&& .authorize {\n         margin-top: 20px;\n      }\n   }\n`\n\nconst LoginContainer = ({ loader, children, appTitle }) => (\n   <CustomContainer>\n      <Dimmer.Dimmable as={Segment} basic>\n         <Grid>\n            <Dimmer inverted active={loader}>\n               <Loader />\n            </Dimmer>\n\n            <Grid.Row>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <List horizontal className='authorize'>\n                     <List.Item className='bg'>\n                        <Image src={AccountGreyImage} />\n                     </List.Item>\n                     <List.Item className='md'>\n                        <Image src={AuthorizeImage} />\n                     </List.Item>\n                     <List.Item className='bg'>\n                        <Image src={AppDefaultImage} />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='title'>\n               <Grid.Column\n                  as='h2'\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <span className='font-bold'>{appTitle} </span> is requesting\n                  to use your NEAR account.\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='contract'>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  Contract: @contractname.near\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List className='border-right-light'>\n                     <List.Item as='h3'>This allows:</List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           View your Account Name\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           Write Chat messages with your name\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List>\n                     <List.Item as='h3'>Does not allow:</List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           View your private account details\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           Buy, Sell, or Transfer on your behalf\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n            </Grid.Row>\n         </Grid>\n\n         {children}\n      </Dimmer.Dimmable>\n   </CustomContainer>\n)\n\nLoginContainer.propTypes = {\n   loader: PropTypes.bool,\n   children: PropTypes.element,\n   appTitle: PropTypes.string\n}\n\nexport default LoginContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\n\nimport AddBlueImage from '../../images/icon-add-blue.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   && button {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 0 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   && .deny {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n\n      background: transparent;\n\n      font-size: 18px;\n      color: #999;\n      letter-spacing: 2px;\n\n      margin: 0 0 0 0;\n\n      :hover {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n      :active,\n      :focus {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n   }\n\n   .segment {\n      width: 100%;\n      padding: 0px;\n      margin: 0px;\n   }\n\n   .dropdown-list {\n      width: 100%;\n      position: relative;\n      cursor: pointer;\n\n      .element {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n\n         background: #fff;\n\n         :hover {\n            background: #f8f8f8;\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-color: #d8d8d8;\n            background-image: url(${AccountGreyImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 36px 36px;\n         }\n         .name {\n            margin-top: 12px;\n            margin-left: 18px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            flex: 1;\n         }\n         .arrow {\n            float: right;\n            width: 56px;\n            height: 56px;\n            background-image: url(${ArrowDownImage});\n            background-repeat: no-repeat;\n            background-position: center center;\n            background-size: 24px auto;\n\n            &.up {\n               background-image: url(${ArrowUpImage});\n            }\n         }\n      }\n      .trigger {\n         display: flex;\n      }\n      .dropdown {\n         .element {\n            margin-top: -4px;\n            display: flex;\n         }\n      }\n      .create-account {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n         cursor: pointer;\n\n         background: #24272a;\n\n         :hover {\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-image: url(${AddBlueImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 24px 24px;\n         }\n         .name {\n            float: left;\n            margin-top: 12px;\n            margin-left: 18px;\n         }\n         .arrow {\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && {\n         button,\n         .deny {\n            width: 140px;\n            border-radius: 35px;\n         }\n\n         .buttons,\n         .dropdown {\n            .column {\n               padding: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst LoginForm = ({\n   dropdown,\n   account,\n   handleOnClick,\n   handleDeny,\n   handleAllow,\n   handleSelectAccount,\n   redirectCreateAccount\n}) => (\n   <CustomGrid>\n      <Grid.Row className='dropdown'>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\n               <List verticalAlign='middle' className={`element trigger`}>\n                  <List.Item className='img' />\n                  <List.Item as='h3' className='name'>\n                     @{account.accountId}\n                  </List.Item>\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\n               </List>\n\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\n                  {Object.keys(account.accounts)\n                     .filter(a => a !== account.accountId)\n                     .map((account, i) => (\n                        <List\n                           key={`lf-${i}`}\n                           onClick={() => handleSelectAccount(account)}\n                           className='element'\n                        >\n                           <List.Item className='img' />\n                           <List.Item as='h3' className='name'>\n                              @{account}\n                           </List.Item>\n                        </List>\n                     ))}\n                  <List\n                     onClick={redirectCreateAccount}\n                     className='create-account'\n                  >\n                     <List.Item className='img' />\n                     <List.Item className='h3 name color-seafoam-blue'>\n                        Create New Account\n                     </List.Item>\n                  </List>\n               </Segment>\n            </Segment>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Form action={account.url.success_url}>\n               <input\n                  type='hidden'\n                  name='authToken'\n                  value={account.authToken}\n               />\n               <input\n                  type='hidden'\n                  name='accountId'\n                  value={account.accountId}\n               />\n               <Button className='deny' onClick={handleDeny}>\n                  DENY\n               </Button>\n               <Button floated='right' onClick={handleAllow}>\n                  ALLOW\n               </Button>\n            </Form>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n   </CustomGrid>\n)\n\nLoginForm.propTypes = {\n   dropdown: PropTypes.bool.isRequired,\n   handleOnClick: PropTypes.func.isRequired,\n   handleDeny: PropTypes.func.isRequired,\n   handleSelectAccount: PropTypes.func.isRequired,\n   redirectCreateAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(mapStateToProps)(LoginForm)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport LoginContainer from './LoginContainer'\nimport LoginForm from './LoginForm'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass Login extends Component {\n   state = {\n      dropdown: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleDeny = e => {\n      e.preventDefault();\n      if (this.props.account.url.failure_url) {\n         window.location.href = this.props.account.url.failure_url\n      }\n   }\n\n   handleAllow = e => {\n      e.preventDefault()\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\n   }\n\n   handleSelectAccount = accountId => {\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { account } = this.props\n\n      return (\n         <LoginContainer\n            loader={account.loader}\n            appTitle={account.url && account.url.app_title}\n         >\n            {account.accountId && (\n               <LoginForm\n                  {...this.state}\n                  handleOnClick={this.handleOnClick}\n                  handleDeny={this.handleDeny}\n                  handleAllow={this.handleAllow}\n                  handleSelectAccount={this.handleSelectAccount}\n                  redirectCreateAccount={this.redirectCreateAccount}\n               />\n            )}\n         </LoginContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const LoginWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Login))\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Image, List } from 'semantic-ui-react'\n\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationTabList = styled(List)`\n   .ui.button {\n      background: #f8f8f8;\n      color: #0072ce;\n      height: 36px;\n      font-weight: 500;\n      padding-left: 1em;\n      padding-right: 1em;\n\n      &.active {\n         background: #999999;\n         color: #ffffff;\n      }\n\n      :hover {\n         background: #999999;\n         color: #ffffff;\n      }\n   }\n\n   .ui.image {\n      width: 0.5em;\n      padding-bottom: 0px;\n   }\n`\n\nconst LEFT_PAGE = 'LEFT'\nconst RIGHT_PAGE = 'RIGHT'\n\nconst range = (from, to, step = 1) => {\n   let i = from\n   const range = []\n\n   while (i <= to) {\n      range.push(i)\n      i += step\n   }\n\n   return range\n}\n\nexport class PaginationTab extends Component {\n   static propTypes = {\n      totalRecords: PropTypes.number.isRequired,\n      pageLimit: PropTypes.number,\n      pageNeighbors: PropTypes.number,\n      onPageChanged: PropTypes.func,\n      initialPage: PropTypes.number.isRequired\n   }\n\n   static defaultProps = {\n      pageLimit: 10,\n      pageNeighbors: 1,\n      onPageChange: () => {},\n      initialPage: 0\n   }\n\n   state = {\n      currentPage: null\n   }\n\n   getTotalPages() {\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\n   }\n\n   componentDidMount() {\n      this.setState({ currentPage: this.props.initialPage + 1 })\n   }\n\n   gotoPage = page => {\n      const currentPage = this.props.onPageChanged(page) + 1\n      this.setState({ currentPage })\n   }\n\n   handleClick = (page, evt) => {\n      evt.preventDefault()\n      this.gotoPage(page)\n      evt.target.blur()\n   }\n\n   handleMoveLeft = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\n      evt.target.blur()\n   }\n\n   handleMoveRight = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\n      evt.target.blur()\n   }\n\n   fetchPageNumbers = () => {\n      const totalPages = this.getTotalPages()\n      const currentPage = this.state.currentPage\n      const pageNeighbors = this.props.pageNeighbors\n\n      const totalNumbers = pageNeighbors * 2 + 3\n      const totalBlocks = totalNumbers + 2\n\n      if (totalPages > totalBlocks) {\n         let pages = []\n\n         const leftBound = currentPage - pageNeighbors\n         const rightBound = currentPage + pageNeighbors\n         const beforeLastPage = totalPages - 1\n\n         const startPage = leftBound > 2 ? leftBound : 2\n         const endPage =\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\n\n         pages = range(startPage, endPage)\n\n         const pagesCount = pages.length\n         const singleSpillOffset = totalNumbers - pagesCount - 1\n\n         const leftSpill = startPage > 2\n         const rightSpill = endPage < beforeLastPage\n\n         const leftSpillPage = LEFT_PAGE\n         const rightSpillPage = RIGHT_PAGE\n\n         if (leftSpill && !rightSpill) {\n            const extraPages = range(\n               startPage - singleSpillOffset,\n               startPage - 1\n            )\n            pages = [leftSpillPage, ...extraPages, ...pages]\n         } else if (!leftSpill && rightSpill) {\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\n            pages = [...pages, ...extraPages, rightSpillPage]\n         } else if (leftSpill && rightSpill) {\n            pages = [leftSpillPage, ...pages, rightSpillPage]\n         }\n\n         return [1, ...pages, totalPages]\n      }\n\n      return range(1, totalPages)\n   }\n\n   render() {\n      if (!this.props.totalRecords) return null\n      if (this.totalPages === 1) return null\n\n      const pages = this.fetchPageNumbers()\n      return (\n         <PaginationTabList horizontal className='PaginationTab'>\n            {pages.map((page, index) => {\n               if (page === LEFT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveLeft}>\n                           <Image src={ArrowLeftImage} />\n                        </Button>\n                     </List.Item>\n                  )\n\n               if (page === RIGHT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveRight}>\n                           ...\n                        </Button>\n                     </List.Item>\n                  )\n\n               return (\n                  <List.Item key={index}>\n                     <Button\n                        circular\n                        active={this.state.currentPage === page}\n                        onClick={e => this.handleClick(page, e)}\n                     >\n                        {page}\n                     </Button>\n                  </List.Item>\n               )\n            })}\n         </PaginationTabList>\n      )\n   }\n}\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\nimport styled from 'styled-components'\n\nconst PaginationPagingList = styled(List)`\n   && .paging-dropdown-tr {\n      width: 66px;\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n\n      border-radius: 18px;\n      background-position: 38px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      padding: 0 20px 0 0;\n\n      line-height: 32px;\n   }\n\n   && .paging-dropdown {\n      padding-top: 0px;\n      width: 66px;\n      min-height: 30px;\n\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n\n      position: absolute;\n      z-index: 200;\n      top: 6px;\n\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 7px;\n      }\n\n      & > .item > .content {\n         font-size: 14px;\n         line-height: 18px;\n         font-weight: 600;\n         padding-left: 6px;\n      }\n   }\n\n   &&& .filter-by {\n      padding-left: 10px;\n      padding-right: 20px;\n   }\n`\n\nconst pagingTypes = [10, 20, 50, 100]\n\nconst PaginationFilter = ({\n   handleOnClickPaging,\n   pagingValue,\n   pagingDropdown,\n   handlePagingDropdownClick\n}) => (\n   <PaginationPagingList horizontal className='border-right-light'>\n      <List.Item>\n         <Button\n            onClick={handleOnClickPaging}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='paging-dropdown-tr'\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\n         >\n            {pagingValue}\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\n         >\n            {pagingTypes.map((type, i) => (\n               <List.Item\n                  key={`page-${i}`}\n                  onClick={() => handlePagingDropdownClick(type)}\n               >\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n      <List.Item as='h6' className='filter-by'>\n         PER PAGE\n      </List.Item>\n   </PaginationPagingList>\n)\n\nexport default PaginationFilter\n","import React, { Fragment } from 'react'\n\nconst PaginationSummary = ({ pageNumber, pageLimit, totalRecords }) => (\n   <Fragment>\n      <span className='color-charcoal-grey'>\n         {pageNumber * pageLimit + 1}-{(pageNumber + 1) * pageLimit}{' '}\n      </span>\n      OF {totalRecords} TOTAL\n   </Fragment>\n)\n\nexport default PaginationSummary\n","import React from 'react'\n\nimport { Form } from 'semantic-ui-react'\n\nimport MSearchImage from '../../images/icon-m-search.svg'\n\nimport styled from 'styled-components'\n\nconst SearchForm = styled(Form)`\n   float: right;\n\n   &&&& .search input {\n      width: 360px;\n\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      border-radius: 25px;\n      padding-left: 40px;\n\n      font-size: 14px;\n\n      background-color: #f8f8f8;\n      background-image: url(${MSearchImage});\n      background-position: 12px center;\n      background-repeat: no-repeat;\n      background-size: 14px auto;\n   }\n`\n\nconst Search = ({ handleSubmit, handleChange, search }) => (\n   <SearchForm onSubmit={handleSubmit}>\n      <Form.Input\n         className='search'\n         name='search'\n         value={search}\n         onChange={handleChange}\n         placeholder='Search transactions and receipts...'\n      />\n   </SearchForm>\n)\n\nexport default Search\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationFilterList = styled(List)`\n   && .sortby-dropdown-tr {\n      width: 210px;\n      line-height: 32px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n      border-radius: 18px;\n      background-position: 180px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      background-image: url(${ArrowDown});\n      text-align: left;\n      padding-top: 0px;\n      padding-bottom: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   && .sortby-dropdown {\n      padding-top: 0px;\n      width: 210px;\n      min-height: 30px;\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n      position: absolute;\n      z-index: 200;\n      top: 2px;\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 10px;\n      }\n\n      .item {\n         height: 36px !important;\n\n         img {\n            width: 18px !important;\n            margin: 0 10px !important;\n         }\n         .content {\n            margin: 2px 0 0 0 !important;\n         }\n      }\n   }\n\n   &&& .sortby {\n      padding-left: 10px;\n      padding-right: 0px;\n   }\n`\n\nconst PaginationFilter = ({\n   filterTypesByType,\n   handleOnClick,\n   handleDropdownClick,\n   dropdown\n}) => (\n   <PaginationFilterList horizontal>\n      <List.Item as='h6' className='sortby'>\n         SORT BY\n      </List.Item>\n      <List.Item>\n         <Button\n            onClick={handleOnClick}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='sortby-dropdown-tr'\n         >\n            RECENTLY ADDED\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\n         >\n            {filterTypesByType.map((type, i) => (\n               <List.Item\n                  key={`sortby-${i}`}\n                  onClick={() => handleDropdownClick(type.img)}\n               >\n                  <List.Content as='h6'>{type.name}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n   </PaginationFilterList>\n)\n\nexport default PaginationFilter\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\n\nimport TransactionFilter from '../../images/icon-m-filter.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport { PaginationTab } from './PaginationTab'\nimport PaginationPaging from './PaginationPaging'\nimport PaginationSummary from './PaginationSummary'\nimport Search from '../common/Search'\n\nimport PaginationSortBy from './PaginationSortBy'\n\nimport styled from 'styled-components'\n\nconst PaginationBlockGrid = styled(Grid)`\n   & > .row:first-child {\n      min-height: 70px;\n   }\n\n   &&& .pagination-block-paging {\n      padding: 0px;\n   }\n\n   &&& .pagination-block-top {\n      padding-left: 0px;\n\n      &-paging-summary {\n         padding-left: 20px;\n      }\n\n      &-search {\n         padding: 0px;\n      }\n\n      &-paging {\n         padding-left: 0px;\n      }\n   }\n\n   &&& .show-sub {\n      padding: 0 0 0 0;\n      margin-top: -16px;\n   }\n\n   &&& .sub-list {\n      background: #fff;\n      width: 100%;\n      min-height: 448px;\n      padding: 0 0;\n\n      > .item {\n         padding: 18px 20px;\n      }\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n         padding: 0px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 0 0 0;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .remove-connection {\n         > button {\n            width: 100%;\n            background-color: #ff585d;\n            border: 2px solid #ff585d;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background: #fff;\n               color: #ff585d;\n            }\n         }\n      }\n      .recent-transactions {\n         background-color: #f8f8f8;\n         margin: 0 0 0 0;\n      }\n      .recent-transactions-title {\n         padding: 0 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 2px;\n         background-size: 12px auto;\n      }\n      .recent-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0;\n         border-bottom: 2px solid #e6e6e6;\n      }\n      .recent-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .authorized-transactions {\n         background-color: #fff;\n         margin: 0 0 0 0;\n         padding-top: 0px;\n      }\n      .authorized-transactions-title {\n         padding: 12px 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 14px;\n         background-size: 12px auto;\n      }\n      .authorized-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0 0 32px;\n         background: url(${CheckBlueImage}) no-repeat left 14px;\n         line-height: 32px;\n      }\n      .authorized-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .send-money {\n         > .button {\n            width: 100%;\n            background-color: #5ace84;\n            border: 2px solid #5ace84;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background-color: #fff;\n               color: #5ace84;\n            }\n         }\n      }\n   }\n   @media screen and (max-width: 991px) {\n      &&& .sub-list {\n         .img {\n            top: 6px;\n            right: 6px;\n         }\n      }\n   }\n`\n\nclass PaginationBlock extends Component {\n   static defaultProps = {\n      onPageChanged: () => {}\n   }\n\n   state = {\n      search: '',\n      dropdown: false,\n      dropdownType: this.props.type\n         ? this.props.filterTypes[this.props.type].img\n         : TransactionFilter,\n      pagingDropdown: false,\n      pagingValue: 10,\n\n      buttonRadio: false\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleOnClickPaging = () => {\n      this.setState({\n         pagingDropdown: !this.state.pagingDropdown\n      })\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({ [name]: value }))\n   }\n\n   handleSubmit = () => {\n      console.log('not ready yet')\n   }\n\n   handleDropdownClick = dropdownType => {\n      this.setState({\n         dropdownType,\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handlePagingDropdownClick = pagingValue => {\n      this.setState({\n         pagingValue,\n         pagingDropdown: !this.state.pagingDropdown\n      })\n\n      this.props.onPageChanged(1, pagingValue)\n   }\n\n   handleTabChange(pageNumber) {\n      // this.setState({\n      //    pageNumber: pageNumber,\n      //    loader: true,\n      // })\n      // this.updateBlock(pageNumber)\n      // return pageNumber\n   }\n\n   buttonRadioClick = () => {\n      this.setState(state => ({\n         buttonRadio: !state.buttonRadio\n      }))\n   }\n\n   render() {\n      const {\n         filterTypes,\n         type,\n         pageNumber = 0,\n         showSub = false,\n         subPage\n      } = this.props\n\n      const {\n         dropdownType,\n         dropdown,\n         search,\n         pagingValue,\n         pagingDropdown\n      } = this.state\n\n      const {\n         totalRecords = 1100,\n         pageLimit = 10,\n         initialPage = 0,\n         onPageChanged = () => {},\n         pageNeighbors = 1\n      } = this.props\n\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\n\n      return (\n         <PaginationBlockGrid\n            className='border-top-bold border-bottom-bold'\n            stackable\n            columns={2}\n         >\n            <Grid.Row className='border-bottom-light'>\n               <Grid.Column\n                  width={10}\n                  verticalAlign='middle'\n                  className='pagination-block-top'\n               >\n                  <PaginationSortBy\n                     filterTypesByType={filterTypesByType}\n                     handleOnClick={this.handleOnClick}\n                     dropdownType={dropdownType}\n                     handleDropdownClick={this.handleDropdownClick}\n                     dropdown={dropdown}\n                  />\n               </Grid.Column>\n               <Grid.Column\n                  width={6}\n                  textAlign='right'\n                  verticalAlign='middle'\n                  className='pagination-block-top-search'\n               >\n                  <Search\n                     handleSubmit={this.handleSubmit}\n                     handleChange={this.handleChange}\n                     search={search}\n                  />\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column computer={showSub ? 10 : 16}>\n                  <Grid>{this.props.children}</Grid>\n               </Grid.Column>\n               <Grid.Column\n                  computer={6}\n                  className={`show-sub ${showSub ? `` : `hide`}`}\n               >\n                  <List className='box sub-list'>\n                     <List.Item className='img'>\n                        <Image\n                           onClick={() => this.props.toggleShowSub()}\n                           src={CloseImage}\n                        />\n                     </List.Item>\n\n                     {subPage === 'authorized-apps' ? (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div\n                                       className='main-image'\n                                       style={{ backgroundColor: '#fff' }}\n                                    >\n                                       <Image src={NearkatImage} align='left' />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       NEAR Place\n                                    </List.Header>\n                                    <List.Item as='h5' className='color-blue'>\n                                       www.nearplace.com\n                                    </List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>DEAUTHORIZE</Button>\n                           </List.Item>\n                           <List.Item className='authorized-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='authorized-transactions-title border-top'\n                              >\n                                 AUTHORIZED TO\n                              </List.Item>\n                              <List.Item className='authorized-transactions-row color-black'>\n                                 View your Account Name\n                              </List.Item>\n                              <List.Item className='authorized-transactions-row color-black'>\n                                 Do something else on your behalf\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Another thing here</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    Another Thing Happened\n                                 </List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    In-app purchase: 20 Ⓝ\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Staked: 10 Ⓝ</List.Header>\n                                 <List.Item>2w ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Authorized</List.Header>\n                                 <List.Item>2w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                        </Fragment>\n                     ) : (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div className='main-image'>\n                                       <Image\n                                          src={AccountGreyImage}\n                                          align='left'\n                                       />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       Alex Skidanov\n                                    </List.Header>\n                                    <List.Item as='h5'>@alex.near</List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>REMOVE CONNECTION</Button>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    You and Alex played NEAR Chess\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='send-money border-top'>\n                              <Button as={Link} to='/send-money/marcin'>\n                                 SEND MONEY\n                              </Button>\n                           </List.Item>\n                        </Fragment>\n                     )}\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row className='border-top-light'>\n               <Grid.Column\n                  width={8}\n                  verticalAlign='middle'\n                  className='pagination-block-top-paging'\n               >\n                  <List horizontal verticalAlign='middle'>\n                     <List.Item width={6}>\n                        <PaginationPaging\n                           handleOnClickPaging={this.handleOnClickPaging}\n                           pagingValue={pagingValue}\n                           pagingDropdown={pagingDropdown}\n                           handlePagingDropdownClick={\n                              this.handlePagingDropdownClick\n                           }\n                        />\n                     </List.Item>\n                     <List.Item\n                        width={6}\n                        as='h6'\n                        className='pagination-block-top-paging-summary'\n                     >\n                        <PaginationSummary\n                           pageNumber={pageNumber}\n                           pageLimit={pageLimit}\n                           totalRecords={totalRecords}\n                        />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  width={8}\n                  className='pagination-block-paging'\n                  textAlign='right'\n               >\n                  <PaginationTab\n                     totalRecords={totalRecords}\n                     pageLimit={pageLimit}\n                     initialPage={initialPage}\n                     onPageChanged={onPageChanged}\n                     pageNeighbors={pageNeighbors}\n                  />\n               </Grid.Column>\n            </Grid.Row>\n         </PaginationBlockGrid>\n      )\n   }\n}\n\nexport default PaginationBlock\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst ContactsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\n               Contacts\n            </Grid.Column>\n            <Grid.Column\n               computer='6'\n               tablet='6'\n               mobile='16'\n               as='h1'\n               className='add'\n            >\n               203<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default ContactsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\n\nimport ContactsContainer from './ContactsContainer'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nclass Contacts extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      // this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <ContactsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`c-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </ContactsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {}\n\nconst mapStateToProps = () => ({})\n\nexport const ContactsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Contacts))\n","import React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst AuthorizedAppsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\n               Authorized Apps\n            </Grid.Column>\n            <Grid.Column\n               computer='6'\n               tablet='6'\n               mobile='16'\n               as='h1'\n               className='add'\n            >\n               23<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default AuthorizedAppsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\n\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\n\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nclass AuthorizedApps extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      // this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <AuthorizedAppsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n               subPage='authorized-apps'\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`a-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </AuthorizedAppsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {}\n\nconst mapStateToProps = () => ({})\n\nexport const AuthorizedAppsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(AuthorizedApps))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n\n         :first-child {\n            padding-left: 0px;\n         }\n      }\n\n      h1 {\n         color: #4a4f54;\n         padding-left: 0px;\n         line-height: 48px;\n      }\n   }\n\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-left: 1rem;\n         padding-right: 1rem;\n      }\n\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst SendMoneyContainer = ({ children, step }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='1' className='page-title'>\n            <Grid.Column as='h1' textAlign='center'>\n               {step === 3 ? `Success!` : `Send Money`}\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default SendMoneyContainer\n","import React from 'react'\n\nimport {\n   Header,\n   TextArea,\n   List,\n   Image,\n   Button,\n   Form,\n   Dimmer,\n   Loader\n} from 'semantic-ui-react'\n\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&&&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin: 36px auto 0 auto;\n\n      form {\n         h3 {\n            margin-bottom: 13px;\n            text-align: left;\n         }\n\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 auto;\n\n            img {\n               padding-top: 10px;\n            }\n         }\n\n         .amount {\n            margin-top: 16px;\n            margin-bottom: 0px;\n            padding-top: 24px;\n\n            input {\n               height: 80px;\n               border: 0px;\n               font-family: Bw Seido Round;\n               font-size: 72px;\n               font-weight: 500;\n               line-height: 80px;\n               color: #4a4f54;\n               text-align: center;\n               padding: 0px;\n            }\n         }\n         .near-tokens {\n            margin: 14px auto 36px auto;\n            text-align: center;\n            padding: 2px;\n\n            width: 200px;\n            background-color: #fff;\n            border: 2px solid #e6e6e6;\n            border-radius: 25px;\n            color: #999999;\n            font-weight: 700;\n\n            :hover {\n               background-color: #e6e6e6;\n               color: #fff;\n            }\n         }\n\n         .add-note {\n            > textarea {\n               width: 100%;\n               border: 0px;\n               padding: 12px;\n\n               :focus {\n                  border: 0px;\n               }\n            }\n         }\n\n         .send-money {\n            margin-top: 24px;\n            margin-bottom: 6px;\n\n            > button {\n               width: 288px;\n               line-height: 56px;\n               border-radius: 30px;\n               border: solid 2px #5ace84;\n               font-size: 18px;\n               font-weight: 600;\n               letter-spacing: 2px;\n               text-align: center;\n               padding: 0 0 0 0;\n               background-color: #5ace84;\n               color: #fff;\n\n               :hover {\n                  color: #5ace84;\n                  background: #fff;\n               }\n               :disabled {\n                  background-color: #e6e6e6;\n                  border-color: #e6e6e6;\n                  opacity: 1 !important;\n               }\n            }\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         padding: 0px;\n         width: 100%;\n         text-align: center;\n         margin-left: auto;\n         margin-right: auto;\n         border: 0px;\n\n         .near-tokens {\n            width: 200px;\n         }\n\n         form {\n            .near-tokens {\n               margin: 14px auto 24px auto;\n            }\n            .add-note {\n               margin-left: -1rem;\n               margin-right: -1rem;\n\n               > textarea {\n                  width: 100%;\n                  height: 98px;\n                  border: 0px;\n                  padding: 12px;\n                  background: #f8f8f8;\n\n                  :focus {\n                     border: 0px;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyFirstStep = ({\n   handleNextStep,\n   handleChange,\n   note,\n   loader,\n   paramAccountId,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage,\n   formLoader,\n   amount\n}) => (\n   <CustomList className='box'>\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         {paramAccountId ? (\n            <List.Item>\n               <List.Content>\n                  <div className='main-image'>\n                     <Image src={AccountGreyImage} align='left' />\n                  </div>\n               </List.Content>\n               <List.Content as='h2'>{accountId}</List.Content>\n               <List.Content>@{accountId}</List.Content>\n            </List.Item>\n         ) : (\n            <List.Item>\n               <List.Content>\n                  <Header as='h3'>Enter a username to send:</Header>\n\n                  <CreateAccoungFormInput\n                     formLoader={formLoader}\n                     accountId={accountId}\n                     handleChangeAccountId={handleChangeAccountId}\n                     successMessage={successMessage}\n                     errorMessage={errorMessage}\n                  />\n               </List.Content>\n            </List.Item>\n         )}\n\n         <List.Item className='amount border-top'>\n            <Form.Input\n               type='number'\n               name='amount'\n               value={amount}\n               onChange={handleChange}\n               placeholder='0.00'\n               step='0.01'\n               min='0'\n            />\n         </List.Item>\n         <List.Item as='h5' className='near-tokens'>\n            NEAR TOKENS\n         </List.Item>\n         { false ?\n         <List.Item className='add-note border-bottom border-top'>\n            <TextArea\n               name='note'\n               value={note}\n               onChange={handleChange}\n               placeholder='Add a note...'\n            />\n         </List.Item>\n         : null }\n         <List.Item className='send-money'>\n            <Button\n               disabled={\n                  paramAccountId\n                     ? !(parseFloat(amount) > 0)\n                     : !(successMessage && parseFloat(amount) > 0)\n               }\n               onClick={handleNextStep}\n            >\n               SEND MONEY\n            </Button>\n         </List.Item>\n      </Form>\n   </CustomList>\n)\n\nexport default SendMoneyFirstStep\n","import React from 'react'\n\nimport { List, Image, Button, Header } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 36px;\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 0;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n\n         font-family: Bw Seido Round;\n         font-size: 72px;\n         font-weight: 500;\n         line-height: 72px;\n         color: #4a4f54;\n      }\n      .to {\n         width: 40px;\n         background: #fff;\n         margin: -20px auto 12px auto;\n      }\n\n      .with-note {\n         padding-top: 12px;\n\n         .expand-note {\n            color: #0072ce;\n            cursor: pointer;\n            font-weight: 600;\n\n            :hover {\n               text-decoration: underline;\n            }\n         }\n      }\n\n      .send-money {\n         padding-top: 24px;\n         padding-bottom: 24px;\n         margin-top: 24px;\n         margin-bottom: 24px;\n\n         > .button {\n            width: 288px;\n            line-height: 60px;\n            border-radius: 30px;\n            border: solid 2px #5ace84;\n            font-size: 18px;\n            font-weight: 600;\n            letter-spacing: 2px;\n            text-align: center;\n            padding: 0 0 0 0;\n            background-color: #5ace84;\n            color: #fff;\n\n            :hover {\n               color: #5ace84;\n               background: #fff;\n            }\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         .to {\n            margin: -20px auto 12px auto;\n         }\n\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .amount {\n               font-size: 48px !important;\n               padding-top: 0px;\n            }\n            .send-money {\n               padding-top: 14px;\n               padding-bottom: 14px;\n               margin-top: 14px;\n               margin-bottom: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneySecondStep = ({\n   handleNextStep,\n   handleExpandNote,\n   expandNote,\n   note,\n   amount,\n   accountId\n}) => (\n   <CustomList className='box'>\n      <List.Item as='h2'>You are sending</List.Item>\n      <List.Item as='h1' className='amount border-bottom'>\n         {amount}\n         <span>Ⓝ</span>\n      </List.Item>\n      <List.Item className='to'>\n         <Header as='h2'>to</Header>\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note '>\n            with note:\n            <br />\n            {expandNote ? (\n               <span className='color-black'>{note}</span>\n            ) : (\n               <span className='expand-note' onClick={handleExpandNote}>\n                  Expand note\n               </span>\n            )}\n         </List.Item>\n      )}\n      <List.Item className='send-money border-top border-bottom'>\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\n      </List.Item>\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\n   </CustomList>\n)\n\nexport default SendMoneySecondStep\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 12px;\n\n      .send-money img {\n         width: 24px;\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 32px;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n      }\n\n      .with-note {\n         padding-top: 24px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .send-money img {\n               margin-top: 12px;\n            }\n            .amount {\n               padding-top: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\n   <CustomList>\n      <List.Item className='send-money'>\n         <Image src={SendImage} />\n      </List.Item>\n      <List.Item as='h2' className='amount'>\n         {amount}\n         <span>Ⓝ</span> was sent to:\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note'>\n            <span className='font-bold'>with note:</span>\n            <br />\n            {note}\n         </List.Item>\n      )}\n   </CustomList>\n)\n\nexport default SendMoneyThirdStep\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport SendMoneyContainer from './SendMoneyContainer'\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\nimport SendMoneySecondStep from './SendMoneySecondStep'\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\n\nclass SendMoney extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      step: 1,\n      note: '',\n      expandNote: false,\n      paramAccountId: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false,\n      amount: ''\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      const paramId = this.props.match.params.id\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      if (paramId) {\n         this.wallet\n            .checkAccount(paramId)\n            .then(d => {\n               this.setState(() => ({\n                  paramAccountId: true,\n                  accountId: paramId\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  accountId: ''\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  loader: false\n               }))\n            })\n      } else {\n         this.setState(() => ({\n            loader: false\n         }))\n      }\n   }\n\n   handleNextStep = () => {\n      this.setState(state => ({\n         step: ++state.step\n      }))\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value\n      }))\n   }\n\n   handleExpandNote = () => {\n      this.setState(() => ({\n         expandNote: true\n      }))\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   render() {\n      const { step } = this.state\n\n      return (\n         <SendMoneyContainer step={step}>\n            {step === 1 && (\n               <SendMoneyFirstStep\n                  handleNextStep={this.handleNextStep}\n                  handleChange={this.handleChange}\n                  handleChangeAccountId={this.handleChangeAccountId}\n                  {...this.state}\n               />\n            )}\n            {step === 2 && (\n               <SendMoneySecondStep\n                  handleNextStep={this.handleNextStep}\n                  handleExpandNote={this.handleExpandNote}\n                  {...this.state}\n               />\n            )}\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\n         </SendMoneyContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = () => ({})\n\nexport const SendMoneyWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(SendMoney))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n         float: left;\n         width: auto !important;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst ProfileContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column as='h1'>Account:</Grid.Column>\n            <Grid.Column as='h1' className='add'>\n               @eugenethedream\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default ProfileContainer\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Popup, Grid, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport LockImage from '../../images/icon-lock.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .row {\n         padding-top: 12px;\n         padding-bottom: 12px;\n\n         .edit-link {\n            font-weight: 600;\n         }\n         .title {\n            font-weight: 600;\n            color: #24272a;\n         }\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 120px;\n         height: 120px;\n         background: #e6e6e6;\n         border-radius: 60px;\n\n         img {\n            width: 100px;\n            padding-top: 10px;\n         }\n      }\n\n      .locked {\n         float: right;\n         border: 0px;\n         padding: 1px 7px;\n         width: 32px;\n         height: 32px;\n         background: #f8f8f8;\n         border-radius: 32px;\n\n         img {\n            padding-top: 4px;\n         }\n      }\n\n      .row-title {\n         margin-top: 20px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         margin-right: 0px;\n\n         .column {\n            padding-left: 0px;\n            padding-right: 0px;\n         }\n      }\n   }\n`\n\nconst ProfileDetails = ({ account }) => (\n   <CustomGrid>\n      <Grid.Row className='border-top-bold'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            PROFILE\n         </Grid.Column>\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Username\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            @eugenethedream\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\n            <Popup\n               trigger={\n                  <div className='locked'>\n                     <Image src={LockImage} align='left' />\n                  </div>\n               }\n               hoverable\n               position='left center'\n            >\n               <Popup.Header>Why is this locked?</Popup.Header>\n               <Popup.Content>\n                  Your username is your unique identifier in the system and cannot be changed\n                  cause data and asset ownership is tied to it.\n                  However you are welcome to <Link to=\"/create\">create another account</Link> with desired name\n                  and transfer assets as needed.\n                  {` `}\n                  {false ?\n                  <a href='/'>Learn more</a>\n                  : null }\n               </Popup.Content>\n            </Popup>\n         </Grid.Column>\n      </Grid.Row>\n      {false ? <div>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Full Name\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            Evgeny Kuzyakov\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Photo\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            <div className='main-image'>\n               <Image src={AccountGreyImage} align='left' />\n            </div>\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            CONTACT INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Email\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            email@website.com\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Phone\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            000-000-0000\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Address\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            1234 N. West Ave., San Francisco, CA 98562\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            FINANCIAL INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      </div> : null }\n\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Balance\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            {account.amount} Ⓝ\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Only Me\n         </Grid.Column>\n         <Grid.Column as=\"div\">\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default ProfileDetails\n","import React from 'react'\n\nimport { Grid } from 'semantic-ui-react'\n\nconst ProfileSection = ({ children }) => (\n   <Grid columns={2} stackable>\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\n      <Grid.Column computer={6}>\n         {children[1]}\n         {children[2]}\n      </Grid.Column>\n   </Grid>\n)\n\nexport default ProfileSection\n","import React from 'react'\n\nimport { List, Button, Image } from 'semantic-ui-react'\n\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      margin-top: -1rem;\n      padding: 14px 4px 14px 14px;\n\n      .keys {\n         img {\n            width: 24px;\n            margin-top: 2px;\n         }\n      }\n      .account {\n         margin-top: 12px;\n\n         &-name {\n            margin-top: 12px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         img {\n            width: 18px;\n            margin-top: 8px;\n            margin-right: 20px;\n         }\n         .download {\n            margin: 0px;\n         }\n         button {\n            width: 130px;\n            background-color: #0072ce;\n            border: 2px solid #0072ce;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n            margin-left: 20px;\n\n            :hover {\n               background-color: #fff;\n               color: #0072ce;\n            }\n         }\n         .account-name {\n            color: #24272a;\n            font-weight: 600;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n         &&& {\n            .account {\n               .download {\n                  float: none;\n                  margin: 0 0 0 16px;\n               }\n            }\n         }\n      }\n      @media screen and (max-width: 767px) {\n         &&& {\n            margin-top: 20px;\n\n            .account {\n               button {\n                  margin-left: 8px;\n               }\n               .download {\n                  float: right;\n                  margin: 0 0 0 0;\n               }\n            }\n         }\n      }\n   }\n`\n\nconst ProfileYourKeys = () => (\n   <CustomList className='box'>\n      <List.Item className='keys'>\n         <List.Icon as={Image} src={KeysGreyImage} />\n         <List.Content as='h2'>Your Keys</List.Content>\n      </List.Item>\n      <List.Item className='account'>\n         <List.Content floated='right' className='download'>\n            <Button>DOWNLOAD</Button>\n         </List.Content>\n         <List.Content>\n            <Image align='left' src={DocGreyImage} />\n         </List.Content>\n         <List.Content className='account-name'>\n            @eugenethedream.key\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileYourKeys\n","import React from 'react'\n\nimport { List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 8px 0 8px 20px;\n      margin-left: 28px;\n      margin-top: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .header {\n         line-height: 28px;\n      }\n      .content {\n         line-height: 20px;\n      }\n\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         border-left: 0px;\n      }\n   }\n`\n\nconst ProfileNotice = () => (\n   <CustomList>\n      <List.Item>\n         <List.Header>Never give your keys away</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\n            sit amet pretium mi, a molestie est.\n            <a href='/'>Learn more</a>\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileNotice\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport ProfileContainer from './ProfileContainer'\nimport ProfileDetails from './ProfileDetails'\nimport ProfileSection from './ProfileSection'\nimport ProfileYourKeys from './ProfileYourKeys'\nimport ProfileNotice from './ProfileNotice'\n\nclass Profile extends Component {\n   state = {\n      loader: false\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      return (\n         <ProfileContainer>\n            <ProfileSection>\n               <ProfileDetails account={this.props.account} />\n               { false ?\n               <ProfileYourKeys />\n               : null }\n               { false ?\n               <ProfileNotice />\n               : null }\n            </ProfileSection>\n         </ProfileContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const ProfileWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Profile))\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  \n  * {\n   box-sizing: inherit;\n   }\n\n   #root {\n      min-height: 100vh;\n      position: relative;\n   }\n   html {\n      box-sizing: border-box;\n      min-height: 100vh;\n      height: auto !important;\n\n      body {\n         margin: 0;\n         padding: 0;\n         min-height: 100vh !important;\n\n         position: relative;\n         color: #999;\n         font-family: \"benton-sans\",sans-serif;\n         font-weight: 500;\n         font-size: 14px !important;\n      }\n   }\n   \n\n   .App {\n      min-height: 100vh;\n\n      > div {\n         min-height: 100vh;\n      }\n   }\n\n   a {\n      color: #0072ce;\n   }\n   a:hover {\n      color: #0072ce;\n      text-decoration: underline;\n   }\n\n   h1, .h1 {\n      font-family: Bw Seido Round !important;\n      font-size: 48px !important;\n      font-weight: 500 !important;\n      line-height: 100px;\n      color: #4a4f54;\n   }\n   h2, .h2 {\n      font-family: Bw Seido Round !important;\n      font-size: 24px !important;\n      font-weight: 500 !important;\n      line-height: 1.33;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h3, .h3 {\n      font-family: Bw Seido Round !important;\n      font-size: 18px !important;\n      font-weight: 500 !important;\n      line-height: 24px !important;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h4, .h4 {\n      font-family: Bw Seido Round !important;\n      font-size: 16px;\n      font-weight: 500;\n      line-height: 1.33;\n      color: #24272a;\n      margin: 0px;\n   }\n\n   h5, .h5 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 13px !important;\n      line-height: 26px;\n      font-weight: 500;\n      color: #999999 !important;\n      margin: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   h6, .h6 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      line-height: 18px;\n      font-weight: 600;\n      color: #999999;\n      margin: 0px !important;\n      letter-spacing: 1.5px !important;\n   }\n\n\n\n   .font-small {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      color: #999 !important;\n      font-weight: 500 !important;\n\n      a {\n         font-family: \"benton-sans\",sans-serif !important;\n         font-size: 12px !important;\n         color: #999 !important;\n         font-weight: 500 !important;\n      }\n\n      a:hover {\n         color: #999 !important;\n      }\n   }\n\n   .ui.form input[type=text] {\n      font-family: \"benton-sans\",sans-serif;\n      font-size: 16px;\n   }\n\n\n   .font-bold {\n      font-weight: 600;\n   }\n\n\n   .color-seafoam-blue {\n      color: #6ad1e3 !important;\n   }\n   .color-blue {\n      color: #0072ce !important;\n   }\n   .color-brown-grey {\n      color: #999;\n   }\n   .color-charcoal-grey {\n      color: #4a4f54 !important;\n   }\n   .color-black {\n      color: #24272a !important;\n\n      :hover {\n         color: #24272a;\n      }\n   }\n\n\n   .ui.popup > .header {\n      font-weight: 600 !important;\n      color: #24272a !important;\n   }\n\n\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\n      font-weight: 600;\n   }\n\n\n   .border-bottom {\n      border-bottom: 2px solid #f8f8f8 !important;\n   }\n   .border-bottom-bold {\n      border-bottom: 4px solid #e6e6e6 !important;\n   }\n   .border-bottom-light {\n      border-bottom: 1px solid #f8f8f8 !important;\n   }\n\n   .border-top {\n      border-top: 2px solid #f8f8f8 !important;\n   }\n\n   .border-top-bold {\n      border-top: 4px solid #e6e6e6 !important;\n   }\n   .border-top-light {\n      border-top: 1px solid #f8f8f8 !important;\n   }\n\n   .border-left-bold {\n      border-left: 4px solid #f8f8f8 !important;\n   }\n\n\n   .border-right {\n      border-right: 2px solid #e6e6e6;\n   }\n   .border-right-light {\n      border-right: 1px solid #e6e6e6;\n   }\n   .background-lg {\n      background: #f8f8f8;\n   }\n\n\n   .button {\n      font-family: \"benton-sans\",sans-serif !important;\n   }\n\n\n   .box {\n      border: 4px solid #e6e6e6;\n      border-radius: 8px;\n      margin-bottom: 0px;\n      position: relative;\n      min-height: 100px;\n      position: relative;\n\n      .row {\n         padding: 0px !important;\n      }\n      .column {\n         padding: 24px 10px 20px 30px !important;\n         word-wrap: break-word;\n      }\n      .segment {\n         padding: 30px 0 20px 0 !important;\n      }\n      .list {\n         > .item {\n            padding: 0px !important;\n\n            > img {\n               top: -4px;\n               margin: 0 10px;\n            }\n            > img.transarrow {\n               width: 11px !important;\n            }\n         }\n         > h5.item {\n            top: -4px;\n         }\n      } \n   }\n\n\n   .copy-image {\n      width: 18px !important;\n      margin: 0px 10px 0 0px !important;\n      top: -4px !important;\n   }\n\n\n   .balance-image {\n      font-size: 20px !important;\n      font-weight: 100 !important;\n\n      &-big {\n         font-size: 32px !important;\n         font-weight: 100 !important;\n      }\n   }\n   \n\n   .transactions-block .item {\n      margin-left: 10px !important;\n   }\n\n\n   .hide {\n      display: none !important;\n   }\n\n\n   .App-section {\n      width: 860px;\n      margin: auto;\n      margin-top: 10px;\n      margin-bottom: 20px;\n   }\n\n   .App-error-message {\n      width: 100%;\n      text-align: center;\n      display: inline-block;\n      margin: auto;\n   }\n\n   .ui.list .list>.item .header, .ui.list>.item .header {\n      font-family: \"benton-sans\",sans-serif;\n      \n   }\n   .ui.popup>.header, .ui.popup {\n      color: #999;\n      font-family: \"benton-sans\",sans-serif;\n      font-weight: 500;\n      font-size: 14px !important;\n   }\n   .ui.popup {\n      border: 1px solid #eee;\n   }\n   .ui.left.center.popup:before {\n      box-shadow: 1px -1px 0 0 #eee;\n   }\n   .ui.bottom.right.popup:before {\n      box-shadow: -1px -1px 0 0 #eee;\n   }\n\n\n   @media screen and (max-width: 767px) {\n      h1, .h1 {\n         font-size: 38px !important;\n         font-weight: 500;\n         line-height: 50px;\n         color: #4a4f54;\n      }\n      h2, .h2 {\n         font-size: 24px !important;\n         font-weight: 600;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      h3, .h3 {\n         font-size: 16px !important;\n         font-weight: 500;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      \n\n      .box .column {\n         padding: 16px 10px !important;\n      }\n   }\n`\n","import React, { Component } from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport '../index.css'\n\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\nimport Footer from './common/Footer'\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\nimport { LoginWithRouter } from './login/Login'\nimport { ContactsWithRouter } from './contacts/Contacts'\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\nimport { ProfileWithRouter } from './profile/Profile'\n\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './GlobalStyle'\nconst theme = {}\n\nconst PATH_PREFIX = process.env.PUBLIC_URL\n\nclass Routing extends Component {\n   render() {\n      return (\n         <div className='App'>\n            <GlobalStyle />\n\n            <ConnectedRouter basename={PATH_PREFIX}  history={this.props.history}>\n               <ThemeProvider theme={theme}>\n                  <ResponsiveContainer>\n                     <Switch>\n                        <Route\n                           exact\n                           path='/'\n                           component={DashboardDetailWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/create'\n                           component={CreateAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/set-recovery/:accountId'\n                           component={SetRecoveryInfoWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/recover-account'\n                           component={RecoverAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/login'\n                           component={LoginWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/contacts'\n                           component={ContactsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/authorized-apps'\n                           component={AuthorizedAppsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/send-money/:id?'\n                           component={SendMoneyWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/profile'\n                           component={ProfileWithRouter}\n                        />\n\n                        <Route component={DashboardDetailWithRouter} />\n                     </Switch>\n                     <Footer />\n                  </ResponsiveContainer>\n               </ThemeProvider>\n            </ConnectedRouter>\n         </div>\n      )\n   }\n}\n\nexport default Routing\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\n\nimport createRootReducer from './reducers'\nimport createMiddleware from './middleware'\n\nimport Routing from './components/Routing'\nimport * as serviceWorker from './serviceWorker'\n\nconst history = createBrowserHistory()\n\nconst store = createStore(createRootReducer(history), createMiddleware(history))\n\nReactDOM.render(\n   <Provider store={store}>\n      <Routing history={history} />\n   </Provider>,\n   document.getElementById('root')\n)\nserviceWorker.unregister()\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport account from './account'\n\nexport default (history) => combineReducers({\n   account,\n   router: connectRouter(history)\n})\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","var _classCallCheck = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/vg/Documents/near-wallet/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar bs58 = require('bs58');\n\nvar nacl = require('tweetnacl');\n/**\n * This class provides key pair functionality (generating key pairs, encoding key pairs).\n */\n\n\nvar KeyPair =\n/*#__PURE__*/\nfunction () {\n  \"use strict\";\n\n  /**\n   * Construct an instance of key pair given a public key and secret key. It's generally assumed that these\n   * are encoded in bs58.\n   * @param {string} publicKey \n   * @param {string} secretKey \n   */\n  function KeyPair(publicKey, secretKey) {\n    _classCallCheck(this, KeyPair);\n\n    this.publicKey = publicKey;\n    this.secretKey = secretKey;\n  }\n  /**\n   * Get the public key.\n   */\n\n\n  _createClass(KeyPair, [{\n    key: \"getPublicKey\",\n    value: function getPublicKey() {\n      return this.publicKey;\n    }\n    /**\n     * Get the secret key.\n     * @example\n     *  // Passing existing key into a function to store in local storage\n     *  async setKey(accountId, key) {\n     *      window.localStorage.setItem(\n     *          BrowserLocalStorageKeystore.storageKeyForPublicKey(accountId), key.getPublicKey());\n     *      window.localStorage.setItem(\n     *          BrowserLocalStorageKeystore.storageKeyForSecretKey(accountId), key.getSecretKey());\n     *  }\n     */\n\n  }, {\n    key: \"getSecretKey\",\n    value: function getSecretKey() {\n      return this.secretKey;\n    }\n    /**\n     * Generate a new keypair from a random seed\n     * @example\n     * const keyWithRandomSeed = KeyPair.fromRandomSeed();\n     * keyWithRandomSeed.getPublicKey()\n     * // returns [PUBLIC_KEY]\n     * \n     * keyWithRandomSeed.getSecretKey()\n     * // returns [SECRET_KEY]\n     */\n\n  }], [{\n    key: \"fromRandomSeed\",\n    value: function fromRandomSeed() {\n      var newKeypair = nacl.sign.keyPair();\n      var result = new KeyPair(KeyPair.encodeBufferInBs58(newKeypair.publicKey), KeyPair.encodeBufferInBs58(newKeypair.secretKey));\n      return result;\n    }\n    /**\n     * Encode a buffer as string using bs58\n     * @param {Buffer} buffer \n     * @example\n     * KeyPair.encodeBufferInBs58(key.publicKey)\n     */\n\n  }, {\n    key: \"encodeBufferInBs58\",\n    value: function encodeBufferInBs58(buffer) {\n      var bytes = Buffer.from(buffer);\n      var encodedValue = bs58.encode(bytes);\n      return encodedValue;\n    }\n  }]);\n\n  return KeyPair;\n}();\n\nmodule.exports = KeyPair;","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";"],"sourceRoot":""}