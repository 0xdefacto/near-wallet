{"version":3,"sources":["images/icon-authorized.svg","images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-arrow-right.svg","images/icon-m-transaction.svg","images/icon-contacts.svg","images/icon-logout.svg","images/icon-activity.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/footer-nearkat.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-authorized-grey.svg","images/icon-account-grey.svg","images/icon-deny.svg","images/icon-authorize.svg","images/icon-add-blue.svg","utils/wallet.js","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","images/icon-check-blue.svg","images/icon-activity-grey.svg","images/icon-contacts-grey.svg","images/icon-t-stake.svg","images/icon-t-transfer.svg","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/PopupMenuTrigger.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/common/Disclaimer.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/common/RequestStatusBox.js","components/accounts/AccountFormSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccountContainer.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-arrow-down.svg","images/icon-problems.svg","images/icon-close.svg","images/icon-send.svg","images/icon-app-default.svg"],"names":["module","exports","__webpack_require__","p","ACCOUNT_HELPER_URL","process","REACT_APP_ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","concat","NODE_URL","REACT_APP_NODE_URL","HELPER_KEY","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","Object","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","account","Account","nearClient","accounts","JSON","parse","localStorage","getItem","tokens","accountId","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","setItem","stringify","save","app_url","app_title","contract_id","token","possible","i","charAt","Math","floor","random","length","isLegitAccountId","account_id","test","_sendTransaction","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","senderId","receiverId","methodName","amount","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","_sendTokens","_callee2","_context2","t0","sendTokens","t1","waitForTransactionResult","call","_x6","_x7","_x8","options","undefined","history","param","next_url","window","location","search","reset_accounts","url","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee3","_context3","Error","viewAccount","_x9","_x10","_getAccountDetails","_callee4","_context4","getAccountDetails","_removeAccessKey","_callee5","publicKey","_context5","removeAccessKey","_x11","_checkAccount","_callee6","_context6","_x12","_checkNewAccount","_callee7","remoteAccount","_context7","_x13","_createNewAccount","_callee8","keyPair","_this","_context8","KeyPair","fromRandomSeed","Promise","resolve","reject","data","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","saveAndSelectAccount","responseText","send","_x14","_saveAndSelectAccount","_callee9","_context9","setKey","_x15","_x16","_addAccessKey","_callee10","contractId","successUrl","addAccessKeyResponse","result","parsedUrl","redirectUrl","_context10","addAccessKey","URL","searchParams","set","href","console","log","_x17","_x18","_x19","_x20","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee11","action","app_data","hash","signature","_context11","parseInt","sendTransaction","signer","signHash","_x21","_x22","phoneNumber","sendJson","_validateCode","_callee12","securityCode","_ref","_context12","getKey","SimpleKeyStoreSigner","signBuffer","Buffer","from","_x23","_x24","_x25","_setupAccountRecovery","_callee13","_ref2","_context13","public_keys","some","encodeBufferInBs58","validateCode","_x26","_x27","_x28","_recoverAccount","_callee14","_context14","_x29","_x30","_x31","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","success","catch","error","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","getAccountId","type","loader","loadAccount","v","authToken","newAccessToken","stake","nonce","code_hash","message","indexOf","clearState","handleRefreshUrl","title","success_url","failure_url","public_key","redirectToApp","state","nextUrl","setTimeout","createActions","REQUEST_CODE","requestCode","successCode","errorCode","SETUP_ACCOUNT_RECOVERY","setupAccountRecovery","RECOVER_ACCOUNT","recoverAccount","GET_ACCOUNT_DETAILS","REMOVE_ACCESS_KEY","initialState","formLoader","sentSms","requestResultReducer","handleActions","defineProperty","combineActions","payload","meta","objectSpread","requestStatus","errorMessage","toString","messageCode","reducer","_ref3","ready","authorizedApps","_ref4","reduceReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","assign","warn","CustomDiv","styled","_templateObject","PopupMenuTrigger","handleClick","_ref$dropdown","dropdown","react_default","createElement","onClick","className","style","float","Image","src","AccountGreyImage","MobileMenuImage","CloseImage","ArrowDownImage","Loader","active","inline","size","CustomResponsive","Responsive","MobileView_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","maxWidth","Segment","basic","Menu","borderless","react_router_dom","to","LogoImage","responsive_PopupMenuTrigger","Item","RecentImage","SendImage","AuthorizedGreyImage","List","as","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","handleToggle","popupOpen","trigger","position","Icon","AccountImage","Content","Link","DesktopView_templateObject","DesktopView","activeItem","hideFixedMenu","fixed","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","widescreen","largeScreen","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","DashboardOtherAssets_templateObject","TContractImage","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","Row","DashboardNotice_templateObject","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","CustomGrid","DashboardActivity_templateObject","DashboardActivity","image","activity","DashboardActivity_CustomGrid","width","Header","Dimmer","inverted","dashboard_ListItem","DashboardDetail","notice","newcontacts","refreshAuthorizedApps","handleNotice","_this$state","dashboard_DashboardContainer","dashboard_DashboardActivity","r","AppDefaultImage","CreateAccountSection_templateObject","CreateAccountSection","successMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","required","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","disabled","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","stackable","common_Disclaimer","CreateAccount","componentDidMount","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","AccountFormSection","common_RequestStatusBox","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","skipRecoverySetup","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","isValidPhoneNumber","trim","match","combinedState","accounts_SetRecoveryInfoContainer","accounts_AccountFormSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref5","params","RecoverAccountForm_templateObject","RecoverAccountForm","RecoverAccountForm_RecoveryInfoForm","RecoverAccountContainer_templateObject","RecoverAccountContainer","RecoverAccountContainer_CustomContainer","RecoverAccount","accounts_RecoverAccountContainer","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","horizontal","AuthorizeImage","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","step","_Component","PaginationTab","_getPrototypeOf2","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","currentPage","gotoPage","page","onPageChanged","evt","target","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","createClass","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPaging_templateObject","Search_templateObject","MSearchImage","PaginationSortBy_templateObject","ArrowDown","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","img","TransactionFilter","pagingDropdown","pagingValue","buttonRadio","handleOnClickPaging","handleDropdownClick","handlePagingDropdownClick","buttonRadioClick","pageNumber","_this$props","_this$props$showSub","subPage","showSubData","toggleCloseSub","handleDeauthorize","_this$props2","backgroundColor","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_","_this3","contacts_ContactsContainer","pagination_PaginationBlock","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","total","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","CustomList","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","amountStatus","SendMoneyFirstStep_CustomList","min","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","Number","isInteger","checkAccount","paramId","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileNotice_templateObject","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","basename","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.b2285e0f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","import nearlib from 'nearlib'\nimport sendJson from 'fetch-send-json'\n\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\n\nconst ACCOUNT_HELPER_URL = process.env.REACT_APP_ACCOUNT_HELPER_URL || 'https://studio.nearprotocol.com/contract-api'\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\nconst NODE_URL = process.env.REACT_APP_NODE_URL || 'https://studio.nearprotocol.com/devnet'\nconst HELPER_KEY = process.env.REACT_APP_ACCOUNT_HELPER_URL || '22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV'\n\nconst KEY_UNIQUE_PREFIX = '_4:'\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\n\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\n\nexport class Wallet {\n   constructor() {\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\n      this.account = new nearlib.Account(this.near.nearClient);\n      this.accounts = JSON.parse(\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\n      )\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\n   }\n\n   save() {\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\n   }\n\n   getAccountId() {\n      return this.accountId\n   }\n\n   selectAccount(accountId) {\n      if (!(accountId in this.accounts)) {\n         return false\n      }\n      this.accountId = accountId\n      this.save()\n   }\n\n   newAccessToken(app_url, app_title, contract_id) {\n      var token = ''\n      var possible =\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n      for (var i = 0; i < 32; i++) {\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n\n      if (!this.isLegitAccountId(contract_id)) {\n         contract_id = ''\n      }\n\n      this.tokens[token] = {\n         app_url,\n         app_title,\n         contract_id,\n         account_id: this.accountId\n      }\n      this.save()\n      return token\n   }\n\n   isLegitAccountId(accountId) {\n      return ACCOUNT_ID_REGEX.test(accountId)\n   }\n\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\n      return await this.near.scheduleFunctionCall(\n         amount,\n         senderId,\n         receiverId,\n         methodName,\n         args || {}\n      )\n   }\n\n   async sendTokens(senderId, receiverId, amount) {\n      return this.near.waitForTransactionResult(\n         await this.near.sendTokens(amount, senderId, receiverId))\n   }\n\n   redirectToCreateAccount(options = {}, history) {\n      const param = {\n         next_url: window.location.search\n      }\n      if (options.reset_accounts) {\n         param.reset_accounts = true\n      }\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\n      let url =\n         WALLET_CREATE_NEW_ACCOUNT_URL +\n         '?' +\n         Object.keys(param).map(\n            (p, i) =>\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\n                  param[p]\n               )}`\n         )\n      history ? history.push(url) : window.location.replace(url)\n   }\n\n   isEmpty() {\n      return !this.accounts || !Object.keys(this.accounts).length\n   }\n\n   redirectIfEmpty(history) {\n      if (this.isEmpty()) {\n         this.redirectToCreateAccount({}, history)\n      }\n   }\n\n   async loadAccount(accountId, history) {\n      if (!(accountId in this.accounts)) {\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\n      }\n      return await this.near.nearClient.viewAccount(accountId)\n   }\n\n   async getAccountDetails() {\n      return await this.account.getAccountDetails(localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID))\n   }\n\n   async removeAccessKey(publicKey) {\n      return await this.account.removeAccessKey(this.accountId, publicKey)\n   }\n\n   async checkAccount(accountId) {\n      if (accountId !== this.accountId) {\n         return await this.near.nearClient.viewAccount(accountId)\n      } else {\n         throw new Error('You are logged into account ' + accountId + ' .')\n      }\n   }\n\n   async checkNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n   }\n\n   async createNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let keyPair = await nearlib.KeyPair.fromRandomSeed()\n      return await new Promise((resolve, reject) => {\n         let data = JSON.stringify({\n            newAccountId: accountId,\n            newAccountPublicKey: keyPair.getPublicKey()\n         })\n\n         let xhr = new XMLHttpRequest()\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\n         xhr.setRequestHeader('Content-Type', 'application/json')\n         xhr.onload = () => {\n            if (xhr.status === 200) {\n               this.saveAndSelectAccount(accountId, keyPair);\n               resolve(xhr)\n            } else if (xhr.status !== 200) {\n               reject(xhr.responseText)\n            }\n         }\n         xhr.send(data)\n      })\n   }\n\n   async saveAndSelectAccount(accountId, keyPair) {\n      await this.key_store.setKey(accountId, keyPair)\n      this.accounts[accountId] = true\n      this.accountId = accountId\n      this.save()\n   }\n\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\n      const addAccessKeyResponse = await this.account.addAccessKey(\n         accountId,\n         publicKey,\n         contractId,\n         '', // methodName\n         '', // fundingOwner\n         0 // fundingAmount\n      )\n      try {\n         const result = await this.near.waitForTransactionResult(addAccessKeyResponse)\n         const parsedUrl = new URL(successUrl)\n         parsedUrl.searchParams.set('account_id', accountId)\n         parsedUrl.searchParams.set('public_key', publicKey)\n         const redirectUrl = parsedUrl.href\n         if (result.status === 'Completed') {\n            window.location.href = redirectUrl\n         }\n      } catch (e) {\n         // TODO: handle errors\n         console.log('Error on adding access key ', e)\n      }\n   }\n\n   subscribeForMessages() {\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\n   }\n\n   clearState() {\n      this.accounts = {}\n      this.tokens = {}\n      this.accountId = ''\n      this.save()\n   }\n\n   async processTransactionMessage(action, data) {\n      let token = data['token'] || ''\n      if (!(token in this.tokens)) {\n         // Unknown token.\n         throw new Error('The token ' + token + ' is not found ')\n      }\n      let app_data = this.tokens[token]\n      let accountId = app_data['account_id']\n      if (!(accountId in this.accounts)) {\n         // Account is no longer authorized.\n         throw new Error(\n            'The account ' + accountId + ' is not part of the wallet anymore.'\n         )\n      }\n      let contract_id = app_data['contract_id']\n      let receiverId = data['receiver_id'] || contract_id\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\n         // Bad receiver account ID or it doesn't match contract id.\n         throw new Error(\n            \"Bad receiver's account ID ('\" +\n               receiverId + \n               \"') or it doesn't match the authorized contract id\"\n         )\n      }\n      let amount = parseInt(data['amount']) || 0\n      if (amount !== 0) {\n         // Automatic authorization denied since for amounts greater than 0.\n         throw new Error('Transaction amount should be 0.')\n      }\n      let methodName = data['methodName'] || ''\n      if (!methodName) {\n         // Method name can't be empty since the amount is 0.\n         throw new Error(\"Method name can't be empty since the amount is 0\")\n      }\n      let args = data['args'] || {}\n      if (action === 'send_transaction') {\n         // Sending the transaction on behalf of the accountId\n         return await this.sendTransaction(\n            accountId, \n            receiverId, \n            methodName, \n            amount, \n            args\n         )\n      } else if (action === 'sign_transaction') {\n         // Signing the provided hash of the transaction. It's a security issue here.\n         // In the future we would sign the transaction above and don't depend on the given hash.\n         let hash = data['hash'] || ''\n         let signature = await this.near.nearClient.signer.signHash(\n            hash, \n            accountId\n         )\n         return signature\n      } else {\n         throw new Error('Unknown action')\n      }\n   }\n\n   requestCode(phoneNumber, accountId) {\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`)\n   }\n\n   async validateCode(phoneNumber, accountId, securityCode) {\n      const key = this.key_store.getKey(accountId)\n      const signer = new nearlib.SimpleKeyStoreSigner(this.key_store)\n      const { signature } = key ? signer.signBuffer(Buffer.from(securityCode), accountId) : undefined\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, { securityCode, signature })\n   }\n\n   async setupAccountRecovery(phoneNumber, accountId, securityCode) {\n      const nearAccount = await this.near.nearClient.viewAccount(accountId);\n      if (!nearAccount.public_keys.some(key => nearlib.KeyPair.encodeBufferInBs58(Buffer.from(key)) === HELPER_KEY)) {\n         await this.near.waitForTransactionResult(\n            await this.account.addAccessKey(accountId, HELPER_KEY));\n      }\n\n      const signer = this.near.nearClient.signer;\n      const { signature } = await signer.signBuffer(Buffer.from(securityCode), accountId);\n      await this.validateCode(phoneNumber, accountId, { securityCode, signature })\n   }\n\n   async recoverAccount(phoneNumber, accountId, securityCode) {\n      const keyPair = nearlib.KeyPair.fromRandomSeed()\n      await this.validateCode(phoneNumber, accountId, { securityCode, publicKey: keyPair.publicKey })\n      await this.saveAndSelectAccount(accountId, keyPair)\n   }\n\n   receiveMessage(event) {\n      let data\n      try {\n         data = JSON.parse(event.data)\n      } catch (e) {\n         // Silently dying.\n         return\n      }\n      const action = data['action'] || ''\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\n         // Unknown action, skipping silently.\n         return\n      }\n      const request_id = data['request_id'] || ''\n\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\n\n      this.processTransactionMessage(action, data)\n         .then(result => {\n            console.log('Wallet: OK ' + action)\n            reply({\n               success: true,\n               request_id,\n               result\n            })\n         })\n         .catch(error => {\n            console.error('Wallet: failed to ' + action, error)\n            reply({\n               success: false,\n               request_id,\n               error\n            })\n         })\n   }\n}\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","import { parse, stringify } from 'query-string'\nimport { createActions } from 'redux-actions'\nimport { Wallet } from '../utils/wallet'\n\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\nexport const REFRESH_URL = 'REFRESH_URL'\n\nexport function handleRefreshAccount(wallet, history) {\n   return (dispatch, getState) => {\n      wallet.redirectIfEmpty(history)\n      const accountId = wallet.getAccountId()\n\n      dispatch(getAccountDetails())\n\n      dispatch({\n         type: LOADER_ACCOUNT,\n         loader: true\n      })\n\n      wallet\n         .loadAccount(accountId, history)\n         .then(v => {\n            dispatch({\n               type: REFRESH_ACCOUNT,\n               data: {\n                  accountId: accountId,\n                  authToken: wallet.newAccessToken(\n                     getState().account.url.app_title,\n                     getState().account.url.app_url,\n                     getState().account.url.contract_id\n                  ),\n                  amount: v['amount'] || 0,\n                  stake: v['stake'],\n                  nonce: v['nonce'],\n                  code_hash: v['code_hash'],\n                  accounts: wallet.accounts\n               }\n            })\n\n            dispatch({\n               type: LOADER_ACCOUNT,\n               loader: false\n            })\n         })\n         .catch(e => {\n            console.log(e)\n\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\n               wallet.clearState()\n               wallet.redirectToCreateAccount(\n                  {\n                     reset_accounts: true\n                  },\n                  history\n               )\n            }\n         })\n   }\n}\n\nexport function handleRefreshUrl(location) {\n   return dispatch => {\n      dispatch({\n         type: REFRESH_URL,\n         url: {\n            app_title: parse(location.search).title || '',\n            app_url: parse(location.search).app_url || '',\n            contract_id: parse(location.search).contract_id || '',\n            success_url: parse(location.search).success_url || '',\n            failure_url: parse(location.search).failure_url || '',\n            public_key: parse(location.search).public_key || ''\n         }\n      })\n   }\n}\n\nconst wallet = new Wallet()\n\nexport const redirectToApp = () => (dispatch, getState) => {\n   const state = getState()\n   const nextUrl = (state.account.url && state.account.url.success_url) ? `/login/?${stringify(state.account.url)}` : '/'\n   setTimeout(() => {\n      window.location = nextUrl\n   }, 1500)\n}\n\nexport const { requestCode, setupAccountRecovery, recoverAccount, getAccountDetails, removeAccessKey } = createActions({\n   REQUEST_CODE: [\n      wallet.requestCode.bind(wallet),\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\n   ],\n   SETUP_ACCOUNT_RECOVERY: [\n      wallet.setupAccountRecovery.bind(wallet),\n      () => ({ successCode: 'account.setupAccountRecovery.success', errorCode: 'account.setupAccountRecovery.error' })\n   ],\n   RECOVER_ACCOUNT: [\n      wallet.recoverAccount.bind(wallet),\n      () => ({ successCode: 'account.recoverAccount.success', errorCode: 'account.recoverAccount.error' })\n   ],\n   GET_ACCOUNT_DETAILS: [wallet.getAccountDetails.bind(wallet), () => ({})],\n   REMOVE_ACCESS_KEY: [wallet.removeAccessKey.bind(wallet), () => ({})],\n})\n","import { handleActions, combineActions } from 'redux-actions'\nimport {\n   REFRESH_ACCOUNT,\n   LOADER_ACCOUNT,\n   REFRESH_URL,\n   requestCode,\n   setupAccountRecovery,\n   recoverAccount,\n   getAccountDetails\n} from '../actions/account'\nimport reduceReducers from 'reduce-reducers'\n\nconst initialState = {\n   formLoader: false,\n   sentSms: false\n}\n\nconst loaderReducer = (state, { ready }) => {\n   if (typeof ready === 'undefined') {\n      return state\n   }\n   return { ...state, formLoader: !ready }\n}\n\nconst requestResultReducer = handleActions({\n   // TODO: Reset state before action somehow. On navigate / start of other action?\n   // TODO: Make this generic to avoid listing actions\n   [combineActions(requestCode, setupAccountRecovery, recoverAccount)]: (state, { error, payload, meta }) => ({\n      ...state,\n      requestStatus: !!payload || error ? {\n         success: !error,\n         errorMessage: (error && payload && payload.toString()) || undefined,\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \n      } : undefined\n   })\n}, initialState)\n\nconst reducer = handleActions({\n      [requestCode]: (state, { error, ready }) => {\n         if (ready && !error) {\n            return { ...state, sentSms: true }\n         }\n         return state\n      }\n}, initialState)\n\nconst authorizedApps = handleActions({\n      [getAccountDetails]: (state, { error, payload }) => ({\n         ...state,\n         authorizedApps: payload && payload.authorizedApps\n      })\n}, initialState)\n\n// TODO: Migrate everything to redux-actions\nfunction account(state = {}, action) {\n   switch (action.type) {\n      case REFRESH_ACCOUNT:\n         return {\n            ...state,\n            ...action.data\n         }\n      case LOADER_ACCOUNT: {\n         return {\n            ...state,\n            loader: action.loader\n         }\n      }\n      case REFRESH_URL: {\n         return {\n            ...state,\n            url: action.url\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default reduceReducers(\n   initialState,\n   loaderReducer,\n   requestResultReducer,\n   reducer,\n   authorizedApps,\n   account\n)\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n/**\n * Lets you dispatch special actions with a { promise } field.\n *\n * This middleware will turn them into a single action at the beginning,\n * and a single success (or failure) action when the `promise` resolves.\n *\n * For convenience, `dispatch` will return the promise so the caller can wait.\n */\nconst readyStatePromise = store => next => action => {\n  if (!action.payload || !action.payload.then) {\n    return next(action)\n  }\n\n  function makeAction(ready, data) {\n    const newAction = Object.assign({}, action)\n    delete newAction.payload\n    return Object.assign(newAction, { ready }, data)\n  }\n\n  next(makeAction(false))\n  return action.payload.then(\n    payload => next(makeAction(true, { payload })),\n    error => {\n      console.warn('Error in background action:', error)\n      return next(makeAction(true, { error: true, payload: error }))\n    }\n  )\n}\n\nexport default (history) => composeEnhancers(\n    applyMiddleware(\n        routerMiddleware(history),\n        thunk,\n        readyStatePromise))\n","import React from 'react'\n\nimport { Image, Loader } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\n\nimport styled from 'styled-components'\n\nconst CustomDiv = styled('div')`\n   overflow: hidden;\n   width: 100%;\n   cursor: pointer;\n   font-family: 'benton-sans', sans-serif;\n   font-weight: 600;\n   > div {\n      .account-img {\n         width: 36px;\n         height: 36px;\n         background: #4a4f54;\n         padding-right: 0px;\n         padding-left: 6px;\n         border-radius: 18px;\n         margin-top: 16px;\n         margin-right: 10px;\n         > img {\n            width: 24px;\n            height: 24px;\n            margin-top: 5px;\n         }\n      }\n      .overflow {\n         overflow: hidden;\n      }\n      .account-arrow {\n         float: right;\n         padding-right: 14px;\n         padding-left: 14px;\n         padding-top: 24px;\n         img {\n            width: 20px;\n         }\n         &.desktop {\n            padding-top: 32px;\n            padding-right: 26px;\n            img {\n               width: 12px;\n            }\n         }\n      }\n      .account-tokens {\n         float: right;\n         line-height: 29px;\n         font-size: 14px;\n         color: #fff;\n         margin: 21px 0 0 10px;\n         height: 28px;\n         background: #111314;\n         border-radius: 14px;\n         padding: 0 10px;\n         letter-spacing: normal;\n         max-width: 140px;\n         :hover {\n            color: #fff;\n         }\n         > div {\n            display: flex;\n            > div {\n               text-overflow: ellipsis;\n               overflow: hidden;\n\n               &.near {\n                  text-overflow: initial;\n               }\n            }\n         }\n         .near {\n            font-size: 18px;\n            padding-left: 4px;\n            font-weight: 500;\n         }\n      }\n      .account-name {\n         overflow: hidden;\n         padding-right: 0px;\n         text-align: right;\n         padding-left: 0px;\n         line-height: 72px;\n         > div {\n            font-size: 14px;\n            letter-spacing: normal;\n            padding-left: 0px;\n            padding-right: 0px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            color: #fff;\n            :hover {\n               color: #fff;\n            }\n         }\n      }\n   }\n`\n\nconst PopupMenuTrigger = ({ account, handleClick, type, dropdown = false }) => (\n   <CustomDiv onClick={handleClick}>\n      <div>\n         {type === 'desktop' && (\n            <div className='account-img' style={{ float: 'left' }}>\n               <Image src={AccountGreyImage} />\n            </div>\n         )}\n         <div className={`account-arrow ${type}`}>\n            {type === 'mobile' && (\n               <Image src={dropdown ? MobileMenuImage : CloseImage} />\n            )}\n            {type === 'desktop' && <Image src={ArrowDownImage} />}\n         </div>\n         <div className='overflow'>\n            <div className='account-tokens'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  <div>\n                     <div>{account.amount} </div>\n                     <div className='near'>Ⓝ</div>\n                  </div>\n               )}\n            </div>\n            <div className='account-name'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  <div>@{account.accountId}</div>\n               )}\n            </div>\n         </div>\n      </div>\n   </CustomDiv>\n)\n\nexport default PopupMenuTrigger\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter, Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport {\n   Image,\n   Menu,\n   Responsive,\n   Segment,\n   List,\n   Button\n} from 'semantic-ui-react'\n\nimport PopupMenuTrigger from './PopupMenuTrigger'\n\nimport SendImage from '../../images/icon-send.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\nimport LogoImage from '../../images/wallet.png'\nimport AccountGreyImage from '../../images/icon-account.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   &&& {\n      padding-bottom: 240px;\n      .navbar {\n         padding: 0px;\n         &-main {\n            background-color: #24272a;\n            height: 72px;\n            border-radius: 0;\n            margin-bottom: 0;\n            .mainlogo {\n               float: left;\n               padding: 4px 10px 0px 0px;\n               div {\n                  width: 50px;\n                  overflow: hidden;\n                  > img.image {\n                     width: 160px;\n                     max-width: none;\n                  }\n               }\n            }\n            .trigger {\n               width: 100%;\n               overflow: hidden;\n            }\n         }\n         &-sub {\n            margin: 0px;\n            padding: 0px;\n            background-color: #24272a;\n            &.hide {\n               display: none;\n            }\n            .main {\n               font-family: 'benton-sans', sans-serif;\n               font-weight: 400;\n               font-size: 14px;\n               padding: 18px 6px;\n               margin: 0 1rem;\n               border-top: 1px solid #4a4f54;\n               &.border {\n                  border-bottom: 1px solid #4a4f54;\n               }\n               a {\n                  color: #fff;\n                  letter-spacing: 2px;\n               }\n               img {\n                  margin-top: -4px;\n                  width: 24px;\n                  margin-right: 20px;\n                  display: inline-block !important;\n               }\n            }\n            .sub {\n               padding: 10px 1rem 0 1rem;\n               .item {\n                  font-family: 'benton-sans', sans-serif;\n                  font-weight: 400;\n                  font-size: 14px;\n                  padding: 8px 9px;\n                  a {\n                     color: #8fd6bd;\n                     letter-spacing: 2px;\n                  }\n                  img {\n                     margin-top: -2px;\n                     width: 18px;\n                     margin-right: 22px;\n                     display: inline-block !important;\n                  }\n               }\n            }\n            .switch-account {\n               background: #000;\n               padding: 0 1rem;\n               padding: 20px;\n               .item {\n                  padding: 0 10px;\n               }\n               h6.item {\n                  padding-bottom: 10px;\n                  border: 0px;\n               }\n               .account-title {\n                  height: 40px;\n                  line-height: 40px;\n                  color: #fff;\n                  font-weight: 500;\n                  border-bottom: 1px solid #323434;\n                  letter-spacing: normal;\n                  text-overflow: ellipsis;\n                  overflow: hidden;\n               }\n               button {\n                  width: 100%;\n                  border-radius: 30px;\n                  background: #24272a;\n                  color: #6ad1e3;\n                  :hover {\n                     background: #fff;\n                     color: #6ad1e3;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      dropdown: true\n   }\n\n   handleDropdown = () =>\n      this.setState(state => ({\n         dropdown: !state.dropdown\n      }))\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n      this.handleDropdown()\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.handleDropdown()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { dropdown } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            maxWidth={Responsive.onlyTablet.maxWidth}\n         >\n            <Segment basic className='navbar'>\n               <Menu className='navbar-main' borderless>\n                  <div className='mainlogo'>\n                     <Link to='/'>\n                        <div>\n                           <Image src={LogoImage} />\n                        </div>\n                     </Link>\n                  </div>\n\n                  {account.accountId && (\n                     <div className='trigger'>\n                        <PopupMenuTrigger\n                           account={account}\n                           handleClick={this.handleDropdown}\n                           type='mobile'\n                           dropdown={dropdown}\n                        />\n                     </div>\n                  )}\n               </Menu>\n               <Segment\n                  basic\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\n               >\n                  <Menu.Menu>\n                     <Menu.Item className='main'>\n                        <Link to='/' onClick={this.handleDropdown}>\n                           <Image src={RecentImage} />\n                           SUMMARY\n                        </Link>\n                     </Menu.Item>\n                     {false ? (\n                        <Menu.Item className='main'>\n                           <Link to='/activity' onClick={this.handleDropdown}>\n                              <Image src={ActivityImage} />\n                              ACTIVITY\n                           </Link>\n                        </Menu.Item>\n                     ) : null}\n                     <Menu.Item className='main border'>\n                        <Link to='/send-money' onClick={this.handleDropdown}>\n                           <Image src={SendImage} />\n                           SEND MONEY\n                        </Link>\n                     </Menu.Item>\n\n                     <Menu.Menu className='sub'>\n                        <Menu.Item>\n                           <Link to='/profile' onClick={this.handleDropdown}>\n                              <Image src={AccountGreyImage} />\n                              Profile\n                           </Link>\n                        </Menu.Item>\n                        {false ? (\n                           <Menu.Item>\n                              <Link\n                                 to='/contacts'\n                                 onClick={this.handleDropdown}\n                              >\n                                 <Image src={ContactsGreyImage} />\n                                 Contacts\n                              </Link>\n                           </Menu.Item>\n                        ) : null}\n                        <Menu.Item>\n                           <Link\n                              to='/authorized-apps'\n                              onClick={this.handleDropdown}\n                           >\n                              <Image src={AuthorizedGreyImage} />\n                              Authorized Apps\n                           </Link>\n                        </Menu.Item>\n                        {false ? (\n                           <Menu.Item>\n                              <Link to='/' onClick={this.handleDropdown}>\n                                 <Image src={LogoutImage} />\n                                 Logout\n                              </Link>\n                           </Menu.Item>\n                        ) : null}\n                     </Menu.Menu>\n                     <Segment basic className='switch-account'>\n                        <List>\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n\n                           {account.accounts &&\n                              Object.keys(account.accounts)\n                                 .filter(a => a !== account.accountId)\n                                 .map((account, i) => (\n                                    <List.Item\n                                       as='a'\n                                       key={`mf-${i}`}\n                                       onClick={() =>\n                                          this.handleSelectAccount(account)\n                                       }\n                                       className='account-title'\n                                    >\n                                       @{account}\n                                    </List.Item>\n                                 ))}\n                        </List>\n                        <Button onClick={this.redirectCreateAccount}>\n                           CREATE NEW ACCOUNT\n                        </Button>\n                     </Segment>\n                  </Menu.Menu>\n               </Segment>\n            </Segment>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(MobileView))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Image, Segment, List, Button, Popup } from 'semantic-ui-react'\n\nimport PopupMenuTrigger from './PopupMenuTrigger'\n\nimport AccountImage from '../../images/icon-account.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\n\nimport styled from 'styled-components'\n\nconst CustomPopup = styled(Popup)`\n   &&& {\n      padding: 0px;\n      right: 12px !important;\n      top: 50px !important;\n      position: fixed !important;\n\n      .account-dropdown {\n         width: 290px;\n         min-height: 100px;\n         background-color: #f8f8f8;\n\n         padding: 20px;\n\n         .item {\n            color: #999999;\n         }\n\n         .submenu {\n            margin: -20px;\n            padding: 20px;\n            background: #fff;\n\n            .icon {\n               width: 20px;\n            }\n            .content {\n               line-height: 26px;\n               padding-left: 10px;\n            }\n            .item {\n               margin: 4px 0;\n            }\n         }\n\n         .switch-account {\n            margin-top: 40px;\n            margin-bottom: 0px;\n         }\n\n         &-scroll {\n            max-height: 226px;\n            overflow-y: auto;\n            width: 270px;\n            margin-top: 0px;\n\n            > .item {\n               width: 250px;\n               margin: 0px;\n               padding: 0px;\n\n               :hover {\n                  text-decoration: underline;\n               }\n               ::before {\n                  display: none;\n               }\n               ::after {\n                  display: none;\n               }\n            }\n         }\n\n         h6 {\n            padding-bottom: 6px;\n         }\n         .account-title {\n            height: 40px;\n            line-height: 40px;\n            color: #4a4f54;\n            font-weight: 500;\n            border-bottom: 2px solid #e6e6e6;\n            letter-spacing: normal;\n\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         button {\n            width: 100%;\n            border-radius: 30px;\n            background: #fff;\n            color: #6ad1e3;\n\n            :hover {\n               background: #6ad1e3;\n               color: #fff;\n            }\n         }\n      }\n\n      :hover {\n         .account-dropdown {\n            display: block;\n         }\n      }\n   }\n`\n\nconst DesktopPopup = ({\n   account,\n   handleSelectAccount,\n   redirectCreateAccount,\n   handleToggle,\n   popupOpen\n}) => (\n   <CustomPopup\n      trigger={\n         <PopupMenuTrigger\n            account={account}\n            handleClick={handleToggle}\n            type='desktop'\n         />\n      }\n      position='right center'\n      open={popupOpen}\n   >\n      <Segment basic className='account-dropdown'>\n         <List className='submenu'>\n            <List.Item>\n               <List.Icon as={Image} src={AccountImage} />\n               <List.Content as={Link} to='/profile' onClick={handleToggle}>\n                  Profile\n               </List.Content>\n            </List.Item>\n            {false ? (\n               <List.Item>\n                  <List.Icon as={Image} src={ContactsGreyImage} />\n                  <List.Content as={Link} to='/contacts' onClick={handleToggle}>\n                     Contacts\n                  </List.Content>\n               </List.Item>\n            ) : null}\n\n            <List.Item>\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\n               <List.Content\n                  as={Link}\n                  to='authorized-apps'\n                  onClick={handleToggle}\n               >\n                  Authorized Apps\n               </List.Content>\n            </List.Item>\n\n            {false ? (\n               <List.Item>\n                  <List.Icon as={Image} src={LogoutImage} />\n                  <List.Content as={Link} to='/logout' onClick={handleToggle}>\n                     Logout\n                  </List.Content>\n               </List.Item>\n            ) : null}\n         </List>\n         <List className='switch-account'>\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n         </List>\n         <List className='account-dropdown-scroll'>\n            {account.accounts &&\n               Object.keys(account.accounts)\n                  .filter(a => a !== account.accountId)\n                  .map((account, i) => (\n                     <List.Item\n                        as='a'\n                        key={`mf-${i}`}\n                        onClick={() => handleSelectAccount(account)}\n                        className='account-title'\n                     >\n                        @{account}\n                     </List.Item>\n                  ))}\n         </List>\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\n      </Segment>\n   </CustomPopup>\n)\n\nexport default DesktopPopup\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport DesktopPopup from './DesktopPopup'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { Image, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nimport LogoImage from '../../images/wallet.png'\nimport HelpImage from '../../images/icon-help.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   padding-bottom: 180px;\n   .spacer {\n      height: 72px;\n   }\n   &&& .navbar {\n      width: 100%;\n      background-color: #24272a;\n      height: 72px;\n      border-radius: 0;\n      position: fixed;\n      top: 0px;\n      z-index: 100;\n\n      .left {\n         float: left;\n      }\n      .right {\n         float: right;\n      }\n      .overflow {\n         overflow: hidden;\n      }\n      .devider {\n         float: left;\n         width: 2px;\n         height: 40px;\n         background: #5d5f60;\n         padding: 0px;\n         margin: 16px 28px 0 0;\n      }\n      .help {\n         float: left;\n         margin-top: 22px;\n         margin-right: 28px;\n      }\n      &-icon {\n         height: 24px;\n         display: inline-block;\n      }\n      .mainlogo {\n         float: left;\n         padding-right: 6px;\n         img {\n            height: 72px;\n         }\n      }\n      .item {\n         float: left;\n         color: white;\n         font-family: 'benton-sans', sans-serif;\n         font-weight: 600;\n         font-size: 14px;\n         padding-left: 0px;\n         padding-right: 30px;\n         letter-spacing: 2px;\n         line-height: 72px;\n         img {\n            margin-right: 10px;\n         }\n         a {\n            color: #fff;\n         }\n         a:hover {\n            color: #6ad1e3;\n            text-decoration: none;\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      activeItem: 'home',\n      popupOpen: false\n   }\n\n   hideFixedMenu = () => this.setState({ fixed: false })\n\n   showFixedMenu = () => this.setState({ fixed: true })\n\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n      this.setState(() => ({\n         popupOpen: false\n      }))\n   }\n\n   handleToggle = () =>\n      this.setState(state => ({\n         popupOpen: !state.popupOpen\n      }))\n\n   render() {\n      const { popupOpen } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            minWidth={Responsive.onlyComputer.minWidth}\n         >\n            <Visibility\n               once={false}\n               onBottomPassed={this.showFixedMenu}\n               onBottomPassedReverse={this.hideFixedMenu}\n            >\n               <Segment className='spacer' basic />\n               <div className='navbar'>\n                  <div className='left'>\n                     <div>\n                        <div className='mainlogo'>\n                           <Link to='/'>\n                              <Image src={LogoImage} />\n                           </Link>\n                        </div>\n                        <div className='item'>\n                           <Link to='/'>\n                              <Image\n                                 className='navbar-icon'\n                                 src={RecentImage}\n                              />\n                              SUMMARY\n                           </Link>\n                        </div>\n                        {false ? (\n                           <div className='item'>\n                              <Link to='/'>\n                                 <Image\n                                    className='navbar-icon'\n                                    src={ActivityImage}\n                                 />\n                                 ACTIVITY\n                              </Link>\n                           </div>\n                        ) : null}\n                        <div className='item'>\n                           <Link to='/send-money'>\n                              <Image className='navbar-icon' src={SendImage} />\n                              SEND MONEY\n                           </Link>\n                        </div>\n                     </div>\n                  </div>\n                  <div className='overflow'>\n                     {account.accountId && (\n                        <div className='right'>\n                           <div className='help'>\n                              <a href='http://near.chat/'>\n                                 <Image\n                                    className='navbar-icon'\n                                    src={HelpImage}\n                                 />\n                              </a>\n                           </div>\n                           <div className='devider' />\n                           <div className='overflow'>\n                              <DesktopPopup\n                                 account={account}\n                                 handleSelectAccount={this.handleSelectAccount}\n                                 redirectCreateAccount={\n                                    this.redirectCreateAccount\n                                 }\n                                 handleToggle={this.handleToggle}\n                                 popupOpen={popupOpen}\n                              />\n                           </div>\n                        </div>\n                     )}\n                  </div>\n               </div>\n            </Visibility>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DesktopView))\n","import React, { Fragment } from 'react'\n\nimport MobileView from './MobileView'\nimport DesktopView from './DesktopView'\n\nconst ResponsiveContainer = ({ children }) => (\n   <Fragment>\n      <DesktopView>{children}</DesktopView>\n      <MobileView>{children}</MobileView>\n   </Fragment>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\n\nimport LogoFooterImage from '../../images/near.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nimport styled from 'styled-components'\n\nconst FooterGrid = styled(Grid)`\n   &&&& {\n      position: absolute;\n      bottom: 0px;\n      width: 100%;\n\n      background-color: #f8f8f8;\n\n      font-size: 12px;\n      font-weight: 300;\n      color: #999999;\n\n      margin-bottom: 0px;\n      margin-left: 0px;\n\n      .near-logo {\n         .content {\n            a {\n               font-size: 12px;\n               font-weight: 300;\n               color: #999999;\n               text-decoration: underline;\n\n               :hover {\n                  text-decoration: none;\n               }\n            }\n            .color-brown-grey {\n               color: #e6e6e6;\n               padding: 0 6px;\n            }\n         }\n         .image {\n            width: 140px;\n            padding-left: 14px;\n\n            img {\n            }\n         }\n      }\n\n      .learn-more {\n         padding: 0 40px 0 0;\n         color: #24272a;\n      }\n\n      .help {\n         padding-right: 0px;\n         padding-top: 10px;\n         padding-bottom: 10px;\n\n         > .list {\n            width: 230px;\n            height: 80px;\n            padding: 20px 0;\n            background: #fff;\n            text-align: left;\n\n            > img {\n               width: 80px;\n               position: absolute;\n               bottom: 0px;\n               right: 200px;\n            }\n\n            > h3 {\n               font-weight: 600 !important;\n               padding: 0 0 0 40px;\n               color: #999999 !important;\n\n               &.color {\n                  color: #0072ce !important;\n               }\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         height: 180px;\n\n         .near-logo {\n            .item {\n            }\n            .content {\n               text-align: center;\n            }\n         }\n      }\n   }\n`\n\nconst ResponsiveContainer = () => (\n   <FooterGrid columns={2}>\n      <Grid.Column\n         textAlign='left'\n         verticalAlign='middle'\n         widescreen={4}\n         largeScreen={6}\n         computer={7}\n         tablet={10}\n         mobile={16}\n      >\n         <Item.Group className='near-logo'>\n            <Item>\n               <Item.Image src={LogoFooterImage} />\n               <Item.Content>\n                  © 2019 NEAR Inc. All Rights Reserved.\n                  <br />\n                  <a href='/'>Terms of Service</a>\n                  <span className='color-brown-grey'>|</span>\n                  <a href='/'>Privacy Policy</a>\n               </Item.Content>\n            </Item>\n         </Item.Group>\n      </Grid.Column>\n      <Grid.Column\n         only='computer'\n         computer={5}\n         className='learn-more'\n         verticalAlign='middle'\n      >\n         NEAR is a scalable computing and storage platform that changes how the\n         web works for better.{' '}\n         <a href='https://nearprotocol.com/'>Learn More</a>\n      </Grid.Column>\n      <Grid.Column\n         only='tablet computer'\n         widescreen={7}\n         largeScreen={5}\n         computer={4}\n         tablet={6}\n         textAlign='right'\n         className='help'\n      >\n         <List floated='right'>\n            <List.Item as='h3'>Need Help?</List.Item>\n            <List.Item as='h3' className='color'>\n               <a href='https://discordapp.com/invite/gBtUFKR'>\n                  Contact Support\n               </a>\n            </List.Item>\n            <Image className='nearkat' src={NearkatImage} />\n         </List>\n      </Grid.Column>\n   </FooterGrid>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\n\nimport TContractImage from '../../images/icon-t-contract.svg'\n\nimport { Grid, List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&&& {\n      margin-top: 0px;\n\n      .other-assets {\n         background: #f8f8f8;\n         border-top: 2px solid #e6e6e6;\n         border-bottom: 4px solid #e6e6e6;\n         padding: 0px;\n\n         .column {\n            border-right: 2px solid #e6e6e6;\n            padding: 10px 0px 10px 18px;\n\n            :last-of-type {\n               border: 0px;\n            }\n\n            .content {\n               width: auto;\n            }\n\n            .icon {\n               background-image: url(${TContractImage});\n               background-repeat: no-repeat;\n               background-position: center top;\n               background-size: 24px 24px;\n               width: 24px;\n               height: 38px;\n               margin: 0 6px 0 0;\n            }\n\n            h5 {\n               font-weight: 600;\n               line-height: 16px;\n            }\n         }\n      }\n   }\n\n   && .other-assets-title {\n      padding-bottom: 6px;\n      color: #24272a;\n      font-weight: 600;\n   }\n\n   @media screen and (max-width: 991px) {\n      &&&& .other-assets {\n         .column {\n            .content {\n               h2 {\n                  font-size: 16px !important;\n               }\n            }\n            .icon {\n               background-size: 18px 24px;\n               width: 18px;\n               margin: 8px 6px 0 0;\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&&& .other-assets {\n         background: #fff;\n         margin-top: 18px !important;\n         border-right: 0px;\n\n         > .column {\n            width: 100% !important;\n            border-right: 0px;\n            border-bottom: 2px solid #f8f8f8;\n            padding: 6px 0px 6px 4px;\n\n            .list {\n               width: 100%;\n\n               .item {\n                  width: 100%;\n\n                  .content {\n                     float: right;\n                     text-align: right;\n\n                     h2 {\n                        font-size: 14px !important;\n                     }\n                  }\n                  .icon {\n                     height: 20px;\n                  }\n               }\n            }\n         }\n\n         &-title {\n            display: none;\n         }\n      }\n   }\n`\n\nconst DashboardOtherAssets = () => (\n   <CustomGrid>\n      <Grid.Row className='other-assets-title' as='h6'>\n         OTHER ASSETS\n      </Grid.Row>\n      <Grid.Row columns={6} className='other-assets'>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        12.125\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ETH\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        3.2501\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XRP\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        8.0987\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZEC\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        13.258\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        BNB\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        2.5897\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XMR\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        1.2589\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZIL\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardOtherAssets\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport DashboardOtherAssets from './DashboardOtherAssets'\n\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\n\nimport { Container, Grid, Button } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         text-align: right;\n      }\n   }\n   .near {\n      font-size: 48px;\n      color: #24272a;\n   }\n   &&& .send-money {\n      margin: 0 0 0 0;\n      > .button {\n         width: 100%;\n         line-height: 60px;\n         border-radius: 30px;\n         border: solid 2px #5ace84;\n         font-size: 18px;\n         font-weight: 600;\n         letter-spacing: 2px;\n         color: #5ace84;\n         background: #fff;\n         text-align: left;\n         padding: 0 0 0 40px;\n         background-image: url(${ArrowGrnImage});\n         background-repeat: no-repeat;\n         background-position: 90% center;\n         background-size: 14px 20px;\n         :hover {\n            background-color: #5ace84;\n            color: #fff;\n            background-image: url(${ArrowRightImage});\n         }\n      }\n   }\n   &&& {\n      .right-section {\n         padding-left: 40px;\n      }\n   }\n   @media screen and (max-width: 991px) {\n      > .grid {\n         margin-left: 0px;\n         margin-right: 0px;\n      }\n      &&& .send-money {\n         margin-top: 20px;\n         margin-top: 0px;\n      }\n      &&& .page-title {\n         text-align: center;\n         .column {\n            padding: 0 0 12px 0;\n         }\n         .balance {\n            display: none;\n         }\n         .button {\n            width: 240px;\n            line-height: 44px;\n         }\n      }\n   }\n   @media screen and (max-width: 767px) {\n      > .grid {\n         margin-left: 0px;\n         margin-right: 0px;\n      }\n      &&& .send-money {\n         margin-top: 20px;\n         margin-top: 0px;\n      }\n      &&& .page-title {\n         padding-top: 24px;\n         text-align: center;\n         .column {\n            padding: 0 0 12px 0;\n         }\n         .balance {\n            display: none;\n         }\n         .button {\n            width: 240px;\n            line-height: 44px;\n         }\n      }\n   }\n`\n\nconst DashboardContainer = ({ children, amount }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column\n               as='h1'\n               computer={12}\n               tablet={16}\n               mobile={16}\n               verticalAlign='middle'\n            >\n               <span className='balance'>Balance: </span>\n               <span className='color-black'>{amount}</span>\n               <span className='near'>Ⓝ</span>\n            </Grid.Column>\n            <Grid.Column\n               computer={4}\n               tablet={16}\n               mobile={16}\n               className='send-money'\n            >\n               <Button as={Link} to='/send-money'>\n                  SEND MONEY\n               </Button>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {false ? <DashboardOtherAssets /> : null}\n      {children}\n   </CustomContainer>\n)\n\nexport default DashboardContainer\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport CloseImage from '../../images/icon-close.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      padding: 20px;\n      margin: 12px 0 12px 0;\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n\n      @media screen and (max-width: 767px) {\n      }\n   }\n`\n\nconst DashboardNotice = ({ handleNotice }) => (\n   <CustomList horizontal className='box'>\n      <List.Item className='text'>\n         <List.Header>Here’s a Notice of some sort</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\n            a finibus.{` `}\n            <a href='/'>Call to Action</a>\n         </List.Content>\n      </List.Item>\n      <List.Item className='img'>\n         <Image onClick={handleNotice} src={CloseImage} />\n      </List.Item>\n   </CustomList>\n)\n\nexport default DashboardNotice\n","import React from 'react'\n\nimport { Grid, Image } from 'semantic-ui-react'\n\nimport ArrowRight from '../../images/icon-arrow-right.svg'\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGridRow = styled(Grid.Row)`\n   &&& {\n      margin-left: 20px;\n      border-left: 4px solid #f8f8f8;\n      cursor: pointer;\n\n      .col-image {\n         margin-left: -33px;\n         width: 40px;\n         flex: 0 0 40px;\n         padding-left: 0px;\n\n         .main-image {\n            border: 1px solid #e6e6e6;\n            background: #fff;\n            border-radius: 14px;\n            padding: 5px;\n            width: 26px;\n            height: 26px;\n            margin: 0 24px 0 18px;\n            overflow: hidden;\n\n            img {\n               margin: 0 0 0 0;\n            }\n         }\n      }\n\n      &.wide {\n         margin-left: 0px;\n         border-left: 0px;\n\n         .col-image {\n            margin-left: 6px;\n            width: 56px;\n            flex: 0 0 56px;\n         }\n\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 24px 0 0;\n\n            img {\n               padding-top: 10px;\n            }\n         }\n      }\n\n      .main-row-title {\n         font-weight: 600;\n         width: auto;\n         padding-right: 0px;\n         flex: 1;\n         word-break: break-all;\n      }\n\n      .dropdown-image-right {\n         width: 10px;\n         margin: 0 0 0 0;\n      }\n      .dropdown-image {\n         float: right;\n      }\n\n      &.dropdown-down {\n         background-color: #f8f8f8;\n\n         .dropdown-image-right {\n            width: 10px;\n            top: 0px;\n            left: 12px;\n         }\n      }\n\n      &.showsub {\n         .dropdown-image-right {\n            left: -24px;\n         }\n      }\n      &.showsub.dropdown-down {\n         .dropdown-image-right {\n            left: -6px;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &.showsub {\n            .dropdown-image-right {\n               left: -14px;\n            }\n         }\n         &.showsub.dropdown-down {\n            .dropdown-image-right {\n               left: 4px;\n            }\n         }\n\n         .main-row-title {\n            a {\n               font-size: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst ListItem = ({\n   row,\n   i,\n   wide = false,\n   showSub = false,\n   toggleShowSub,\n   showSubOpen\n}) => (\n   <CustomGridRow\n      verticalAlign='middle'\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\n         showSub && showSubOpen === i ? `dropdown-down` : ``\n      } ${showSub ? `showsub` : ``}`}\n      onClick={() => wide && toggleShowSub(i, row)}\n   >\n      <Grid.Column\n         computer={wide ? 15 : 15}\n         tablet={wide ? 14 : 8}\n         mobile={wide ? 14 : 10}\n      >\n         <Grid verticalAlign='middle'>\n            <Grid.Column className='col-image'>\n               <div className='main-image'>\n                  <Image src={row[0]} align='left' />\n               </div>\n            </Grid.Column>\n            <Grid.Column className='main-row-title'>\n               contractId: <span className='color-black'>{row[1]}</span>\n               {row[2] != null && (\n                  <span className='font-small'>\n                     <br />\n                     amount:\n                     <span className='color-black'>{row[2]}Ⓝ</span>, publicKey:{' '}\n                     <span className='color-black'>{row[3]}</span>\n                  </span>\n               )}\n            </Grid.Column>\n         </Grid>\n      </Grid.Column>\n      <Grid.Column\n         computer={wide ? 1 : 1}\n         tablet={wide ? 2 : 8}\n         mobile={wide ? 2 : 6}\n         textAlign='right'\n      >\n         {wide ? (\n            <Image\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\n               className='dropdown-image dropdown-image-right'\n            />\n         ) : (\n            <span className='font-small'>{/* {row[3]} */}</span>\n         )}\n      </Grid.Column>\n   </CustomGridRow>\n)\n\nexport default ListItem\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport ListItem from './ListItem'\n\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      margin-bottom: 20px;\n\n      .row:first-child {\n         padding-bottom: 0px;\n      }\n\n      .row:last-child {\n         padding: 14px 0 0 4px;\n         margin-left: 20px;\n         border-left: 4px solid #f8f8f8;\n      }\n\n      .dashboard-header {\n         padding: 14px 0 10px 0;\n      }\n\n      link.view-all,\n      button.view-all,\n      a.view-all {\n         background: #f8f8f8;\n         margin: 0;\n         padding: 10px 20px;\n         color: #0072ce;\n         font-weight: 600;\n         border-radius: 20px;\n         border: 2px solid #f8f8f8;\n\n         :hover {\n            background: #fff;\n         }\n      }\n\n      .column-icon {\n         width: 28px;\n         display: inline-block;\n         margin: -4px 10px 0 8px;\n      }\n   }\n`\n\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\n   <CustomGrid>\n      <Grid.Row>\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\n            <Header className='h2'>\n               <Image className='column-icon' src={image} />\n               {title}\n            </Header>\n         </Grid.Column>\n      </Grid.Row>\n      <Dimmer inverted active={loader}>\n         <Loader />\n      </Dimmer>\n\n      {activity.map((row, i) => (\n         <ListItem key={`d-${i}`} row={row} />\n      ))}\n\n      <Grid.Row>\n         <Grid.Column textAlign='left' width={16}>\n            <Button as={Link} to={to} className='view-all'>\n               VIEW ALL\n            </Button>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardActivity\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport {\n   handleRefreshAccount,\n   handleRefreshUrl,\n   getAccountDetails\n} from '../../actions/account'\n\nimport DashboardContainer from './DashboardContainer'\nimport DashboardSection from './DashboardSection'\nimport DashboardActivity from './DashboardActivity'\n\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\n\nimport TStakeImage from '../../images/icon-t-stake.svg'\nimport TTransferImage from '../../images/icon-t-transfer.svg'\nimport AppDefaultImage from '../../images/icon-app-default.svg'\n\nclass DashboardDetail extends Component {\n   state = {\n      loader: false,\n      notice: true,\n      activity: [],\n      authorizedApps: [],\n      newcontacts: []\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.refreshAuthorizedApps()\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      false &&\n         setTimeout(() => {\n            this.setState(_ => ({\n               activity: [\n                  [\n                     TTransferImage,\n                     'Sent: 125 Ⓝ  to @jake.near',\n                     'Some details about this activity here',\n                     '3 min ago'\n                  ],\n                  [\n                     TStakeImage,\n                     'You Staked 10 tokens',\n                     'Some details about this activity here',\n                     '20 min ago'\n                  ],\n                  [\n                     TTransferImage,\n                     'Sent: 125 Ⓝ  to @vlad.near',\n                     'Some details about this activity here',\n                     '1 hr ago'\n                  ]\n               ],\n               authorizedApps: [\n                  [AppDefaultImage, 'NEAR Place', '', '3 hrs ago'],\n                  [AppDefaultImage, 'Cryptocats', '', '5 hrs ago'],\n                  [AppDefaultImage, 'Knights App', '', '2 days ago']\n               ],\n               newcontacts: [\n                  [\n                     AccountGreyImage,\n                     'Alex Skidanov ',\n                     '',\n                     'Connected 2 days ago'\n                  ],\n                  [AccountGreyImage, '@vlad.near', '', '2 days ago'],\n                  [\n                     AccountGreyImage,\n                     'Illia Polosukhin',\n                     '',\n                     'Connected 2 days ago'\n                  ]\n               ]\n               // loader: false\n            }))\n         }, 1000)\n   }\n\n   refreshAuthorizedApps = () => {\n      this.setState(() => ({\n         loader: true\n      }))\n\n      this.props.getAccountDetails().then(() => {\n         this.setState(() => ({\n            loader: false\n         }))\n      })\n   }\n\n   handleNotice = () => {\n      this.setState(state => ({\n         notice: !state.notice\n      }))\n   }\n\n   render() {\n      const {\n         loader,\n         notice,\n         activity,\n\n         newcontacts\n      } = this.state\n\n      const { authorizedApps } = this.props\n\n      return (\n         <DashboardContainer amount={this.props.amount}>\n            <DashboardActivity\n               loader={loader}\n               image={AuthorizedGreyImage}\n               title='Authorized Apps'\n               to='/authorized-apps'\n               activity={authorizedApps}\n            />\n            {false ? (\n               <DashboardSection\n                  notice={notice}\n                  handleNotice={this.handleNotice}\n               >\n                  <DashboardActivity\n                     loader={loader}\n                     image={activityGreyImage}\n                     title='Activity'\n                     to='/'\n                     activity={activity}\n                  />\n                  <DashboardActivity\n                     loader={loader}\n                     image={AuthorizedGreyImage}\n                     title='Authorized Apps'\n                     to='/authorized-apps'\n                     activity={authorizedApps}\n                  />\n                  <DashboardActivity\n                     loader={loader}\n                     image={ContactsGreyImage}\n                     title='New Contacts'\n                     to='/contacts'\n                     activity={newcontacts}\n                  />\n               </DashboardSection>\n            ) : null}\n         </DashboardContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl,\n   getAccountDetails\n}\n\nconst mapStateToProps = ({ account }) => ({\n   ...account,\n   authorizedApps: account.authorizedApps\n      ? account.authorizedApps.map(r => [\n           AppDefaultImage,\n           r.contractId,\n           r.amount,\n           r.publicKey\n        ])\n      : []\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DashboardDetail))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, List, Responsive } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .username-row {\n         padding-bottom: 0px;\n         margin-left: -1rem;\n      }\n      .alert-info {\n         font-size: 18px;\n         font-weight: 600;\n         line-height: 64px;\n         margin: 0 0 0 0;\n         padding-left: 0px;\n         &.problem {\n            color: #ff585d;\n         }\n         &.success {\n            color: #6ad1e3;\n         }\n      }\n      .note-box {\n         padding-left: 30px;\n         .border-left-bold {\n            padding-bottom: 20px;\n         }\n      }\n      .note-info {\n         .title {\n            letter-spacing: 2px;\n            font-weight: 600;\n            line-height: 20px;\n            color: #4a4f54;\n         }\n      }\n      .form-row {\n         margin-left: -1rem;\n      }\n   }\n   @media screen and (max-width: 991px) {\n      &&& {\n         .note-box {\n            padding-left: 0px;\n         }\n      }\n   }\n   @media screen and (max-width: 767px) {\n      &&& {\n         .username-row {\n            margin-left: 0;\n         }\n         .alert-info {\n            padding: 0 0 6px 24px;\n            line-height: 34px;\n            font-size: 14px;\n            margin-top: -6px;\n         }\n         .note-box {\n            padding-left: 1rem;\n            margin-top: 10px;\n         }\n         .note-box {\n            .border-left-bold {\n               padding-bottom: 0px;\n            }\n         }\n         .form-row {\n            padding-top: 6px;\n            margin-left: 0;\n         }\n         &&& .note-info {\n            font-size: 12px;\n         }\n      }\n   }\n`\n\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\n   <CustomGrid>\n      <Grid.Row className='username-row'>\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\n            Choose a Username\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='form-row'>\n         <Grid.Column computer={9} tablet={8} mobile={16}>\n            {children}\n         </Grid.Column>\n         <Grid.Column computer={7} tablet={8} mobile={16}>\n            <Grid className='note-box'>\n               {successMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info success'>\n                        Congrats! this name is available.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n               {errorMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info problem'>\n                        Username is taken. Try something else.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n\n               <Grid.Row>\n                  <Grid.Column className='border-left-bold'>\n                     <List className='note-info'>\n                        <List.Item className='title'>NOTE</List.Item>\n                        <List.Item>\n                           Your username can be 5-32 characters\n                        </List.Item>\n                        <List.Item>\n                           long and contain any of the following:\n                        </List.Item>\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\n                        <List.Item>• Digits (0-9)</List.Item>\n                        <List.Item>• Special characters (@._-)</List.Item>\n                     </List>\n                  </Grid.Column>\n               </Grid.Row>\n            </Grid>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nCreateAccountSection.propTypes = {\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired\n}\n\nexport default CreateAccountSection\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst CustomFormInput = styled(Form.Input)`\n   &&&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background-color: #f8f8f8;\n      position: relative;\n      :focus {\n         border-color: #f8f8f8;\n         background-color: #fff;\n      }\n      :valid {\n         background-color: #fff;\n      }\n   }\n   &&&&& .spinner {\n      margin-right: 20px;\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n   &.problem > .input > input,\n   &.problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   &.success > .input > input,\n   &.success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n`\n\nconst CreateAccoungFormInput = ({\n   formLoader,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage\n}) => (\n   <CustomFormInput\n      loading={formLoader}\n      className={`create ${successMessage ? 'success' : ''}${\n         errorMessage ? 'problem' : ''\n      }`}\n      name='accountId'\n      value={accountId}\n      onChange={handleChangeAccountId}\n      placeholder='example: satoshi.near'\n      required\n   />\n)\n\nCreateAccoungFormInput.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   handleChangeAccountId: PropTypes.func.isRequired,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired\n}\n\nexport default CreateAccoungFormInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\n\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\n\nimport styled from 'styled-components'\n\nconst AccountForm = styled(Form)`\n   && button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      font-weight: 600;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .recover {\n      margin-top: 36px;\n      color: #24272a;\n      line-height: 24px;\n      font-weight: 600;\n\n      a {\n         text-decoration: underline;\n\n         :hover {\n            text-decoration: none;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n   }\n`\n\nconst CreateAccountForm = ({\n   formLoader,\n   accountId,\n   successMessage,\n   errorMessage,\n   handleSubmit,\n   handleChangeAccountId,\n   handleRecaptcha\n}) => (\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\n      <CreateAccoungFormInput\n         formLoader={formLoader}\n         accountId={accountId}\n         handleChangeAccountId={handleChangeAccountId}\n         successMessage={successMessage}\n         errorMessage={errorMessage}\n      />\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n         {successMessage && (\n            <Segment basic className='alert-info success'>\n               Congrats! this name is available.\n            </Segment>\n         )}\n         {errorMessage && (\n            <Segment basic className='alert-info problem'>\n               Username is taken. Try something else.\n            </Segment>\n         )}\n      </Responsive>\n      {false ? (\n         <ReCAPTCHA\n            sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\n            onChange={handleRecaptcha}\n         />\n      ) :null}\n      <Button type='submit' disabled={!successMessage}>\n         CREATE ACCOUNT\n      </Button>\n\n      <div className='recover'>\n         <div>Already have an account?</div>\n         <Link to='/recover-account'>Recover it here</Link>\n      </div>\n   </AccountForm>\n)\n\nCreateAccountForm.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   handleSubmit: PropTypes.func.isRequired,\n   handleChangeAccountId: PropTypes.func.isRequired\n}\n\nexport default CreateAccountForm\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst DisclaimerGrid = styled(Grid)`\n   && .disclaimer {\n      margin-top: 100px;\n\n      > .column {\n         padding-left: 0px;\n         padding-right: 0px;\n      }\n   }\n   .disclaimer-info {\n      font-weight: 600;\n      letter-spacing: 2px;\n   }\n\n   @media screen and (max-width: 767px) {\n      && .disclaimer {\n         margin-top: 50px;\n         font-size: 12px;\n      }\n   }\n`\n\nconst Disclaimer = () => (\n   <DisclaimerGrid>\n      <Grid.Row className='disclaimer border-top-bold'>\n         <Grid.Column computer={16} tablet={16} mobile={16}>\n            <span className='disclaimer-info'>DISCLAIMER: </span>\n            This is a developers&apos; preview Wallet. It should be used for\n            NEAR Protocol DevNet only. Learn more at{' '}\n            <a href='http://nearprotocol.com'>nearprotocol.com</a>\n         </Grid.Column>\n      </Grid.Row>\n   </DisclaimerGrid>\n)\n\nexport default Disclaimer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport { parse } from 'query-string'\n\nimport Disclaimer from '../common/Disclaimer'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      h2 {\n         color: #4a4f54 !important;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\nconst CreateAccountContainer = ({ loader, children, location }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={9} tablet={8} mobile={16}>\n               <Header as='h1'>Create Account</Header>\n               <Header as='h2'>\n                  Creating a NEAR account is easy. Just choose a username and\n                  you’re ready to go.\n               </Header>\n               {parse(location.search).reset_accounts && (\n                  <Header as='h3' className='color-blue'>\n                     You have been redirected to this page because we had to\n                     reset the developer accounts. Please create a new account.\n                     We apologize for the inconveience.\n                  </Header>\n               )}\n            </Grid.Column>\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'></Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nCreateAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default CreateAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport CreateAccountSection from './CreateAccountSection'\nimport CreateAccountForm from './CreateAccountForm'\nimport CreateAccountContainer from './CreateAccountContainer'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass CreateAccount extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet)\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkNewAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\n         return false\n      }\n\n      this.setState(() => ({\n         successMessage: false,\n         errorMessage: false,\n         formLoader: true\n      }))\n\n      this.wallet\n         .createNewAccount(this.state.accountId)\n         .then(d => {\n            this.setState(() => ({\n               successMessage: true\n            }))\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\n         })\n         .catch(e => {\n            this.setState(() => ({\n               errorMessage: true\n            }))\n            console.error('Error creating account:', e)\n         })\n         .finally(() => {\n            this.setState(() => ({\n               formLoader: false\n            }))\n         })\n   }\n\n   handleRecaptcha = value => {\n      console.log(value)\n   }\n\n   render() {\n      const { loader } = this.state\n\n      return (\n         <CreateAccountContainer loader={loader} location={this.props.location}>\n            <CreateAccountSection {...this.state}>\n               <CreateAccountForm\n                  {...this.state}\n                  handleSubmit={this.handleSubmit}\n                  handleRecaptcha={this.handleRecaptcha}\n                  handleChangeAccountId={this.handleChangeAccountId}\n               />\n            </CreateAccountSection>\n         </CreateAccountContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const CreateAccountWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(CreateAccount)\n","import React from 'react'\nimport { Grid, Responsive } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst RequestStatusBoxGrid = styled(Grid)`\n   &&& .alert-info {\n      font-size: 18px;\n      font-weight: 600;\n      line-height: 64px;\n      margin: 0 0 0 0;\n      padding-left: 0px;\n\n      &.problem {\n         color: #ff585d;\n      }\n      &.success {\n         color: #6ad1e3;\n      }\n   }\n\n   && {\n      padding-left: 30px;\n   }\n\n   @media screen and (max-width: 991px) {\n      .note-box {\n         padding-left: 0px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .alert-info {\n         padding: 0 0 0 24px;\n         line-height: 34px;\n         font-size: 14px;\n      }\n\n      && {\n         padding-left: 1rem;\n         margin-top: 10px;\n      }\n  }\n`\n/**\n * Renders request status.\n *\n * @param requestStatus {object} request status, can be null in case not completed yet / no outgoing request\n * @param requestStatus.success {boolean} true if request was succesful\n * @param requestStatus.messageCode {string} localization code of status message to display\n */\nconst RequestStatusBox = ({ requestStatus }) => (\n   requestStatus ?\n      <RequestStatusBoxGrid>\n         <Responsive\n            as={Grid.Row}\n            minWidth={Responsive.onlyTablet.minWidth}\n         >\n            <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\n               {requestStatus.messageCode}\n            </Grid.Column>\n         </Responsive>\n      </RequestStatusBoxGrid>\n      : null\n)\n\nexport default RequestStatusBox\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport RequestStatusBox from '../common/RequestStatusBox'\n\nconst AccountFormSection = ({ requestStatus, children }) => (\n   <Grid>\n      <Grid.Column computer={9} tablet={8} mobile={16}>\n         {children}\n      </Grid.Column>\n      <Grid.Column computer={7} tablet={8} mobile={16}>\n         <RequestStatusBox requestStatus={requestStatus} />\n      </Grid.Column>\n   </Grid>\n)\n\nexport default AccountFormSection\n","import React from 'react'\nimport { Form, Input, Button, Segment } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   margin-left: -1rem;\n\n   &&&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background-color: #f8f8f8;\n      position: relative;\n      :focus {\n         border-color: #f8f8f8;\n         background-color: #fff;\n      }\n      :valid {\n         background-color: #fff;\n      }\n   }\n   .create {\n      position: relative;\n\n      .react-phone-number-input__country {\n         position: absolute;\n         top: 24px;\n         right: 22px;\n         z-index: 1;\n\n         &-select-arrow {\n            display: none;\n         }\n      }\n   }\n   .segment {\n      padding: 20px 0 0 0;\n      color: #24272a;\n      border-top: 4px solid #f8f8f8 !important;\n      margin-top: 48px;\n      line-height: 24px;\n\n      a {\n         text-decoration: underline;\n\n         :hover {\n            text-decoration: none;\n         }\n      }\n   }\n   &&&&& .spinner {\n      margin-right: 20px;\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      background: #0072ce;\n      margin: 10px 1em 0 0;\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 0;\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n   & h3 {\n      margin-bottom: 1rem;\n   }\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n\n   @media screen and (max-width: 767px) {\n      margin-left: 0;\n   }\n`\n\nconst SetRecoveryInfoForm = ({\n   formLoader,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange,\n   skipRecoverySetup\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${\n                  requestStatus\n                     ? requestStatus.success\n                        ? 'success'\n                        : 'problem'\n                     : ''\n               } ${formLoader ? 'loading' : ''}`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={value =>\n                  handleChange(null, { name: 'phoneNumber', value })\n               }\n               placeholder='example: +1 555 123 4567'\n               required\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>\n            PROTECT ACCOUNT\n         </Button>\n      </Form.Field>\n\n      <Segment basic>\n         <span className='font-bold'>Skip this step </span>\n         if you want to backup your account keys manually. However, skipping\n         this will make it impossible for us to assist you with account recovery\n         in the future.{' '}\n         <a href='#react-wants-this' className='' onClick={skipRecoverySetup}>\n            I choose to backup my account manually\n         </a>\n      </Segment>\n   </RecoveryInfoForm>\n)\n\nexport default SetRecoveryInfoForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      h2 {\n         color: #4a4f54 !important;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst SetRecoveryInfoContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={9} tablet={8} mobile={16}>\n               <Header as='h1'>Protect your Account</Header>\n               <Header as='h2'>\n                  Enter your phone number to make your account easy for you to\n                  recover in the future.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'></Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n      <Disclaimer />\n   </CustomContainer>\n)\nSetRecoveryInfoContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\nexport default SetRecoveryInfoContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\nimport { requestCode, setupAccountRecovery, redirectToApp } from '../../actions/account';\n\nclass SetRecoveryInfo extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\n      } else {\n         dispatch(setupAccountRecovery(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\n            .then(({error}) => {\n               if (error) return\n\n               dispatch(redirectToApp())\n            })\n      }\n   }\n\n   skipRecoverySetup = e => {\n      const { dispatch } = this.props;\n      dispatch(redirectToApp())\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <SetRecoveryInfoForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n                  skipRecoverySetup={this.skipRecoverySetup}\n               />\n            </AccountFormSection>\n         </SetRecoveryInfoContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\n","import React from 'react'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   margin-left: -1rem;\n\n   &&&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background-color: #f8f8f8;\n      position: relative;\n      :focus {\n         border-color: #f8f8f8;\n         background-color: #fff;\n      }\n      :valid {\n         background-color: #fff;\n      }\n   }\n   .create {\n      position: relative;\n\n      .react-phone-number-input__country {\n         position: absolute;\n         top: 24px;\n         right: 22px;\n         z-index: 1;\n\n         &-select-arrow {\n            display: none;\n         }\n      }\n   }\n   &&&&& .spinner {\n      margin-right: 20px;\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      background: #0072ce;\n      margin: 10px 0 0 0;\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 1em;\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n   & h3 {\n      margin-bottom: 1rem;\n   }\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n\n   @media screen and (max-width: 767px) {\n      margin-left: 0;\n   }\n`\n\nconst RecoverAccountForm = ({\n   formLoader,\n   accountId,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      <Form.Field>\n         <h3>Username</h3>\n         <Form.Input\n            loading={formLoader}\n            className={`create ${\n               requestStatus\n                  ? requestStatus.success\n                     ? 'success'\n                     : 'problem'\n                  : ''\n            }`}\n            name='accountId'\n            value={accountId}\n            onChange={handleChange}\n            placeholder='example: satoshi.near'\n            disabled={sentSms}\n            required\n         />\n      </Form.Field>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${\n                  requestStatus\n                     ? requestStatus.success\n                        ? 'success'\n                        : 'problem'\n                     : ''\n               } ${formLoader ? 'loading' : ''}`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={value =>\n                  handleChange(null, { name: 'phoneNumber', value })\n               }\n               placeholder='example: +1 555 123 4567'\n               required\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>\n            FIND MY ACCOUNT\n         </Button>\n      </Form.Field>\n   </RecoveryInfoForm>\n)\n\nexport default RecoverAccountForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      h2 {\n         color: #4a4f54 !important;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst RecoverAccountContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={9} tablet={8} mobile={16}>\n               <Header as='h1'>Find your Account</Header>\n               <Header as='h2'>\n                  Enter your information associated with the account and we will\n                  send a recovery code.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'></Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nRecoverAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default RecoverAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport RecoverAccountForm from './RecoverAccountForm'\nimport RecoverAccountContainer from './RecoverAccountContainer'\nimport { requestCode, recoverAccount, redirectToApp } from '../../actions/account';\n\nclass RecoverAccount extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         accountId: value => this.wallet.isLegitAccountId(value),\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      const accountId = this.state.accountId || this.props.accountId;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, accountId))\n      } else {\n         dispatch(recoverAccount(this.state.phoneNumber, accountId, this.state.securityCode))\n            .then(({ error }) => {\n               if (error) return;\n               dispatch(redirectToApp())\n            })\n      }\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <RecoverAccountContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <RecoverAccountForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit.bind(this)}\n                  handleChange={this.handleChange}\n               />\n            </AccountFormSection>\n         </RecoverAccountContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const RecoverAccountWithRouter = connect(mapStateToProps)(RecoverAccount)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n   Container,\n   Loader,\n   Grid,\n   Dimmer,\n   Image,\n   List,\n   Segment\n} from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\nimport DenyImage from '../../images/icon-deny.svg'\nimport AppDefaultImage from '../../images/icon-app-default.svg'\nimport AuthorizeImage from '../../images/icon-authorize.svg'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   && .title {\n      padding-top: 40px;\n   }\n\n   && .contract {\n      padding-bottom: 40px;\n   }\n\n   &&& .authorize {\n      margin-top: 40px;\n\n      .bg {\n         width: 64px;\n         height: 64px;\n         background: #e6e6e6;\n         border-radius: 32px;\n\n         > img {\n            width: 40px;\n            height: 40px;\n            margin-top: 8px;\n         }\n      }\n      .md {\n         > img {\n            margin-top: 8px;\n            padding: 0 24px;\n         }\n      }\n   }\n\n   && .cont {\n      background: #f8f8f8;\n      padding: 16px 0px;\n\n      > div {\n         padding: 20px 0 20px 50px;\n      }\n      img {\n         height: 24px;\n         margin-right: 6px;\n      }\n      div.item {\n         padding-top: 24px;\n\n         .content {\n            line-height: 24px;\n         }\n      }\n   }\n\n   .list-item {\n      background: url(${CheckBlueImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   .list-item-deny {\n      background: url(${DenyImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n      && .cont {\n         > div {\n            padding: 20px 0 20px 20px;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && .title {\n         padding-top: 0px;\n\n         h2 {\n            font-size: 18px !important;\n            line-height: 24px !important;\n         }\n      }\n\n      && .contract {\n         padding-top: 0px;\n         padding-bottom: 20px;\n      }\n\n      && .cont {\n         > div {\n            border: 0px;\n            padding: 10px 0 10px 0;\n\n            h3 {\n               font-size: 14px !important;\n            }\n         }\n\n         div.item {\n            padding-top: 24px;\n\n            .content {\n               font-size: 12px;\n               line-height: 14px;\n            }\n         }\n      }\n\n      &&& .authorize {\n         margin-top: 20px;\n      }\n   }\n`\n\nconst LoginContainer = ({ loader, children, appTitle }) => (\n   <CustomContainer>\n      <Dimmer.Dimmable as={Segment} basic>\n         <Grid>\n            <Dimmer inverted active={loader}>\n               <Loader />\n            </Dimmer>\n\n            <Grid.Row>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <List horizontal className='authorize'>\n                     <List.Item className='bg'>\n                        <Image src={AccountGreyImage} />\n                     </List.Item>\n                     <List.Item className='md'>\n                        <Image src={AuthorizeImage} />\n                     </List.Item>\n                     <List.Item className='bg'>\n                        <Image src={AppDefaultImage} />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='title'>\n               <Grid.Column\n                  as='h2'\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <span className='font-bold'>{appTitle} </span> is requesting\n                  to use your NEAR account.\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='contract'>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  Contract: @contractname.near\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List className='border-right-light'>\n                     <List.Item as='h3'>This allows:</List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           View your Account Name\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           Write Chat messages with your name\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List>\n                     <List.Item as='h3'>Does not allow:</List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           View your private account details\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           Buy, Sell, or Transfer on your behalf\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n            </Grid.Row>\n         </Grid>\n\n         {children}\n      </Dimmer.Dimmable>\n   </CustomContainer>\n)\n\nLoginContainer.propTypes = {\n   loader: PropTypes.bool,\n   children: PropTypes.element,\n   appTitle: PropTypes.string\n}\n\nexport default LoginContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\n\nimport AddBlueImage from '../../images/icon-add-blue.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   && button {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 0 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   && .deny {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n\n      background: transparent;\n\n      font-size: 18px;\n      color: #999;\n      letter-spacing: 2px;\n\n      margin: 0 0 0 0;\n\n      :hover {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n      :active,\n      :focus {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n   }\n\n   .segment {\n      width: 100%;\n      padding: 0px;\n      margin: 0px;\n   }\n\n   .dropdown-list {\n      width: 100%;\n      position: relative;\n      cursor: pointer;\n\n      .element {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n\n         background: #fff;\n\n         :hover {\n            background: #f8f8f8;\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-color: #d8d8d8;\n            background-image: url(${AccountGreyImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 36px 36px;\n         }\n         .name {\n            margin-top: 12px;\n            margin-left: 18px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            flex: 1;\n         }\n         .arrow {\n            float: right;\n            width: 56px;\n            height: 56px;\n            background-image: url(${ArrowDownImage});\n            background-repeat: no-repeat;\n            background-position: center center;\n            background-size: 24px auto;\n\n            &.up {\n               background-image: url(${ArrowUpImage});\n            }\n         }\n      }\n      .trigger {\n         display: flex;\n      }\n      .dropdown {\n         .element {\n            margin-top: -4px;\n            display: flex;\n         }\n      }\n      .create-account {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n         cursor: pointer;\n\n         background: #24272a;\n\n         :hover {\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-image: url(${AddBlueImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 24px 24px;\n         }\n         .name {\n            float: left;\n            margin-top: 12px;\n            margin-left: 18px;\n         }\n         .arrow {\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && {\n         button,\n         .deny {\n            width: 140px;\n            border-radius: 35px;\n         }\n\n         .buttons,\n         .dropdown {\n            .column {\n               padding: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst LoginForm = ({\n   dropdown,\n   account,\n   handleOnClick,\n   handleDeny,\n   handleAllow,\n   handleSelectAccount,\n   redirectCreateAccount\n}) => (\n   <CustomGrid>\n      <Grid.Row className='dropdown'>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\n               <List verticalAlign='middle' className={`element trigger`}>\n                  <List.Item className='img' />\n                  <List.Item as='h3' className='name'>\n                     @{account.accountId}\n                  </List.Item>\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\n               </List>\n\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\n                  {Object.keys(account.accounts)\n                     .filter(a => a !== account.accountId)\n                     .map((account, i) => (\n                        <List\n                           key={`lf-${i}`}\n                           onClick={() => handleSelectAccount(account)}\n                           className='element'\n                        >\n                           <List.Item className='img' />\n                           <List.Item as='h3' className='name'>\n                              @{account}\n                           </List.Item>\n                        </List>\n                     ))}\n                  <List\n                     onClick={redirectCreateAccount}\n                     className='create-account'\n                  >\n                     <List.Item className='img' />\n                     <List.Item className='h3 name color-seafoam-blue'>\n                        Create New Account\n                     </List.Item>\n                  </List>\n               </Segment>\n            </Segment>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Form action={account.url.success_url}>\n               <input\n                  type='hidden'\n                  name='authToken'\n                  value={account.authToken}\n               />\n               <input\n                  type='hidden'\n                  name='accountId'\n                  value={account.accountId}\n               />\n               <Button className='deny' onClick={handleDeny}>\n                  DENY\n               </Button>\n               <Button floated='right' onClick={handleAllow}>\n                  ALLOW\n               </Button>\n            </Form>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n   </CustomGrid>\n)\n\nLoginForm.propTypes = {\n   dropdown: PropTypes.bool.isRequired,\n   handleOnClick: PropTypes.func.isRequired,\n   handleDeny: PropTypes.func.isRequired,\n   handleSelectAccount: PropTypes.func.isRequired,\n   redirectCreateAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(mapStateToProps)(LoginForm)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport LoginContainer from './LoginContainer'\nimport LoginForm from './LoginForm'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass Login extends Component {\n   state = {\n      dropdown: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleDeny = e => {\n      e.preventDefault();\n      if (this.props.account.url.failure_url) {\n         window.location.href = this.props.account.url.failure_url\n      }\n   }\n\n   handleAllow = e => {\n      e.preventDefault()\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\n   }\n\n   handleSelectAccount = accountId => {\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { account } = this.props\n\n      return (\n         <LoginContainer\n            loader={account.loader}\n            appTitle={account.url && account.url.app_title}\n         >\n            {account.accountId && (\n               <LoginForm\n                  {...this.state}\n                  handleOnClick={this.handleOnClick}\n                  handleDeny={this.handleDeny}\n                  handleAllow={this.handleAllow}\n                  handleSelectAccount={this.handleSelectAccount}\n                  redirectCreateAccount={this.redirectCreateAccount}\n               />\n            )}\n         </LoginContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const LoginWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Login))\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Image, List } from 'semantic-ui-react'\n\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationTabList = styled(List)`\n   .ui.button {\n      background: #f8f8f8;\n      color: #0072ce;\n      height: 36px;\n      font-weight: 500;\n      padding-left: 1em;\n      padding-right: 1em;\n\n      &.active {\n         background: #999999;\n         color: #ffffff;\n      }\n\n      :hover {\n         background: #999999;\n         color: #ffffff;\n      }\n   }\n\n   .ui.image {\n      width: 0.5em;\n      padding-bottom: 0px;\n   }\n`\n\nconst LEFT_PAGE = 'LEFT'\nconst RIGHT_PAGE = 'RIGHT'\n\nconst range = (from, to, step = 1) => {\n   let i = from\n   const range = []\n\n   while (i <= to) {\n      range.push(i)\n      i += step\n   }\n\n   return range\n}\n\nexport class PaginationTab extends Component {\n   static propTypes = {\n      totalRecords: PropTypes.number.isRequired,\n      pageLimit: PropTypes.number,\n      pageNeighbors: PropTypes.number,\n      onPageChanged: PropTypes.func,\n      initialPage: PropTypes.number.isRequired\n   }\n\n   static defaultProps = {\n      pageLimit: 10,\n      pageNeighbors: 1,\n      onPageChange: () => {},\n      initialPage: 0\n   }\n\n   state = {\n      currentPage: null\n   }\n\n   getTotalPages() {\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\n   }\n\n   componentDidMount() {\n      this.setState({ currentPage: this.props.initialPage + 1 })\n   }\n\n   gotoPage = page => {\n      const currentPage = this.props.onPageChanged(page) + 1\n      this.setState({ currentPage })\n   }\n\n   handleClick = (page, evt) => {\n      evt.preventDefault()\n      this.gotoPage(page)\n      evt.target.blur()\n   }\n\n   handleMoveLeft = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\n      evt.target.blur()\n   }\n\n   handleMoveRight = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\n      evt.target.blur()\n   }\n\n   fetchPageNumbers = () => {\n      const totalPages = this.getTotalPages()\n      const currentPage = this.state.currentPage\n      const pageNeighbors = this.props.pageNeighbors\n\n      const totalNumbers = pageNeighbors * 2 + 3\n      const totalBlocks = totalNumbers + 2\n\n      if (totalPages > totalBlocks) {\n         let pages = []\n\n         const leftBound = currentPage - pageNeighbors\n         const rightBound = currentPage + pageNeighbors\n         const beforeLastPage = totalPages - 1\n\n         const startPage = leftBound > 2 ? leftBound : 2\n         const endPage =\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\n\n         pages = range(startPage, endPage)\n\n         const pagesCount = pages.length\n         const singleSpillOffset = totalNumbers - pagesCount - 1\n\n         const leftSpill = startPage > 2\n         const rightSpill = endPage < beforeLastPage\n\n         const leftSpillPage = LEFT_PAGE\n         const rightSpillPage = RIGHT_PAGE\n\n         if (leftSpill && !rightSpill) {\n            const extraPages = range(\n               startPage - singleSpillOffset,\n               startPage - 1\n            )\n            pages = [leftSpillPage, ...extraPages, ...pages]\n         } else if (!leftSpill && rightSpill) {\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\n            pages = [...pages, ...extraPages, rightSpillPage]\n         } else if (leftSpill && rightSpill) {\n            pages = [leftSpillPage, ...pages, rightSpillPage]\n         }\n\n         return [1, ...pages, totalPages]\n      }\n\n      return range(1, totalPages)\n   }\n\n   render() {\n      if (!this.props.totalRecords) return null\n      if (this.totalPages === 1) return null\n\n      const pages = this.fetchPageNumbers()\n      return (\n         <PaginationTabList horizontal className='PaginationTab'>\n            {pages.map((page, index) => {\n               if (page === LEFT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveLeft}>\n                           <Image src={ArrowLeftImage} />\n                        </Button>\n                     </List.Item>\n                  )\n\n               if (page === RIGHT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveRight}>\n                           ...\n                        </Button>\n                     </List.Item>\n                  )\n\n               return (\n                  <List.Item key={index}>\n                     <Button\n                        circular\n                        active={this.state.currentPage === page}\n                        onClick={e => this.handleClick(page, e)}\n                     >\n                        {page}\n                     </Button>\n                  </List.Item>\n               )\n            })}\n         </PaginationTabList>\n      )\n   }\n}\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\nimport styled from 'styled-components'\n\nconst PaginationPagingList = styled(List)`\n   && .paging-dropdown-tr {\n      width: 66px;\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n\n      border-radius: 18px;\n      background-position: 38px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      padding: 0 20px 0 0;\n\n      line-height: 32px;\n   }\n\n   && .paging-dropdown {\n      padding-top: 0px;\n      width: 66px;\n      min-height: 30px;\n\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n\n      position: absolute;\n      z-index: 200;\n      top: 6px;\n\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 7px;\n      }\n\n      & > .item > .content {\n         font-size: 14px;\n         line-height: 18px;\n         font-weight: 600;\n         padding-left: 6px;\n      }\n   }\n\n   &&& .filter-by {\n      padding-left: 10px;\n      padding-right: 20px;\n   }\n`\n\nconst pagingTypes = [10, 20, 50, 100]\n\nconst PaginationFilter = ({\n   handleOnClickPaging,\n   pagingValue,\n   pagingDropdown,\n   handlePagingDropdownClick\n}) => (\n   <PaginationPagingList horizontal className='border-right-light'>\n      <List.Item>\n         <Button\n            onClick={handleOnClickPaging}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='paging-dropdown-tr'\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\n         >\n            {pagingValue}\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\n         >\n            {pagingTypes.map((type, i) => (\n               <List.Item\n                  key={`page-${i}`}\n                  onClick={() => handlePagingDropdownClick(type)}\n               >\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n      <List.Item as='h6' className='filter-by'>\n         PER PAGE\n      </List.Item>\n   </PaginationPagingList>\n)\n\nexport default PaginationFilter\n","import React from 'react'\n\nimport { Form } from 'semantic-ui-react'\n\nimport MSearchImage from '../../images/icon-m-search.svg'\n\nimport styled from 'styled-components'\n\nconst SearchForm = styled(Form)`\n   float: right;\n\n   &&&& .search input {\n      width: 360px;\n\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      border-radius: 25px;\n      padding-left: 40px;\n\n      font-size: 14px;\n\n      background-color: #f8f8f8;\n      background-image: url(${MSearchImage});\n      background-position: 12px center;\n      background-repeat: no-repeat;\n      background-size: 14px auto;\n   }\n`\n\nconst Search = ({ handleSubmit, handleChange, search }) => (\n   <SearchForm onSubmit={handleSubmit}>\n      <Form.Input\n         className='search'\n         name='search'\n         value={search}\n         onChange={handleChange}\n         placeholder='Search transactions and receipts...'\n      />\n   </SearchForm>\n)\n\nexport default Search\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationFilterList = styled(List)`\n   && .sortby-dropdown-tr {\n      width: 210px;\n      line-height: 32px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n      border-radius: 18px;\n      background-position: 180px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      background-image: url(${ArrowDown});\n      text-align: left;\n      padding-top: 0px;\n      padding-bottom: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   && .sortby-dropdown {\n      padding-top: 0px;\n      width: 210px;\n      min-height: 30px;\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n      position: absolute;\n      z-index: 200;\n      top: 2px;\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 10px;\n      }\n\n      .item {\n         height: 36px !important;\n\n         img {\n            width: 18px !important;\n            margin: 0 10px !important;\n         }\n         .content {\n            margin: 2px 0 0 0 !important;\n         }\n      }\n   }\n\n   &&& .sortby {\n      padding-left: 10px;\n      padding-right: 0px;\n   }\n`\n\nconst PaginationFilter = ({\n   filterTypesByType,\n   handleOnClick,\n   handleDropdownClick,\n   dropdown\n}) => (\n   <PaginationFilterList horizontal>\n      <List.Item as='h6' className='sortby'>\n         SORT BY\n      </List.Item>\n      <List.Item>\n         <Button\n            onClick={handleOnClick}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='sortby-dropdown-tr'\n         >\n            RECENTLY ADDED\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\n         >\n            {filterTypesByType.map((type, i) => (\n               <List.Item\n                  key={`sortby-${i}`}\n                  onClick={() => handleDropdownClick(type.img)}\n               >\n                  <List.Content as='h6'>{type.name}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n   </PaginationFilterList>\n)\n\nexport default PaginationFilter\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\n\nimport TransactionFilter from '../../images/icon-m-filter.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport { PaginationTab } from './PaginationTab'\nimport PaginationPaging from './PaginationPaging'\nimport PaginationSummary from './PaginationSummary'\nimport Search from '../common/Search'\n\nimport PaginationSortBy from './PaginationSortBy'\n\nimport styled from 'styled-components'\n\nconst PaginationBlockGrid = styled(Grid)`\n   & > .row:first-child {\n      ${'' /* min-height: 70px; */}\n      padding-top: 0px;\n   }\n\n   &&& .pagination-block-paging {\n      padding: 0px;\n   }\n\n   &&& .pagination-block-top {\n      padding-left: 0px;\n\n      &-paging-summary {\n         padding-left: 20px;\n      }\n\n      &-search {\n         padding: 0px;\n      }\n\n      &-paging {\n         padding-left: 0px;\n      }\n   }\n\n   &&& .show-sub {\n      padding: 0 0 0 0;\n      margin-top: -16px;\n   }\n\n   &&& .sub-list {\n      background: #fff;\n      width: 100%;\n      height: 100%;\n      padding: 0 0;\n\n      > .item {\n         padding: 18px 20px;\n      }\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n         padding: 0px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 0 0 0;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .remove-connection {\n         > button {\n            width: 100%;\n            background-color: #ff585d;\n            border: 2px solid #ff585d;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background: #fff;\n               color: #ff585d;\n            }\n         }\n      }\n      .recent-transactions {\n         background-color: #f8f8f8;\n         margin: 0 0 0 0;\n      }\n      .recent-transactions-title {\n         padding: 0 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 2px;\n         background-size: 12px auto;\n      }\n      .recent-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0;\n         border-bottom: 2px solid #e6e6e6;\n      }\n      .recent-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .authorized-transactions {\n         background-color: #fff;\n         margin: 0 0 0 0;\n         padding-top: 0px;\n      }\n      .authorized-transactions-title {\n         padding: 12px 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 14px;\n         background-size: 12px auto;\n      }\n      .authorized-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0 0 32px;\n         background: url(${CheckBlueImage}) no-repeat left 14px;\n         line-height: 32px;\n      }\n      .authorized-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .send-money {\n         > .button {\n            width: 100%;\n            background-color: #5ace84;\n            border: 2px solid #5ace84;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background-color: #fff;\n               color: #5ace84;\n            }\n         }\n      }\n   }\n   @media screen and (max-width: 991px) {\n      &&& .sub-list {\n         .img {\n            top: 6px;\n            right: 6px;\n         }\n\n         .main-image {\n            display: none;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         .mobile-hide {\n            display: none;\n         }\n         .main-image {\n            display: block;\n         }\n      }\n   }\n`\n\nclass PaginationBlock extends Component {\n   static defaultProps = {\n      onPageChanged: () => {}\n   }\n\n   state = {\n      search: '',\n      dropdown: false,\n      dropdownType: this.props.type\n         ? this.props.filterTypes[this.props.type].img\n         : TransactionFilter,\n      pagingDropdown: false,\n      pagingValue: 10,\n\n      buttonRadio: false\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleOnClickPaging = () => {\n      this.setState({\n         pagingDropdown: !this.state.pagingDropdown\n      })\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({ [name]: value }))\n   }\n\n   handleSubmit = () => {\n      console.log('not ready yet')\n   }\n\n   handleDropdownClick = dropdownType => {\n      this.setState({\n         dropdownType,\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handlePagingDropdownClick = pagingValue => {\n      this.setState({\n         pagingValue,\n         pagingDropdown: !this.state.pagingDropdown\n      })\n\n      this.props.onPageChanged(1, pagingValue)\n   }\n\n   handleTabChange(pageNumber) {\n      // this.setState({\n      //    pageNumber: pageNumber,\n      //    loader: true,\n      // })\n      // this.updateBlock(pageNumber)\n      // return pageNumber\n   }\n\n   buttonRadioClick = () => {\n      this.setState(state => ({\n         buttonRadio: !state.buttonRadio\n      }))\n   }\n\n   render() {\n      const {\n         filterTypes,\n         type,\n         pageNumber = 0,\n         showSub = false,\n         subPage,\n         showSubData,\n         toggleCloseSub,\n         handleDeauthorize\n      } = this.props\n\n      const {\n         dropdownType,\n         dropdown,\n         search,\n         pagingValue,\n         pagingDropdown\n      } = this.state\n\n      const {\n         totalRecords = 1100,\n         pageLimit = 10,\n         initialPage = 0,\n         onPageChanged = () => {},\n         pageNeighbors = 1\n      } = this.props\n\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\n\n      return (\n         <PaginationBlockGrid\n            className='border-top-bold border-bottom-bold'\n            stackable\n            columns={2}\n         >\n            <Grid.Row className='border-bottom-light'>\n               {false && (\n                  <Grid.Column\n                     width={10}\n                     verticalAlign='middle'\n                     className='pagination-block-top'\n                  >\n                     <PaginationSortBy\n                        filterTypesByType={filterTypesByType}\n                        handleOnClick={this.handleOnClick}\n                        dropdownType={dropdownType}\n                        handleDropdownClick={this.handleDropdownClick}\n                        dropdown={dropdown}\n                     />\n                  </Grid.Column>\n               )}\n               {false && (\n                  <Grid.Column\n                     width={6}\n                     textAlign='right'\n                     floated='right'\n                     verticalAlign='middle'\n                     className='pagination-block-top-search'\n                  >\n                     <Search\n                        handleSubmit={this.handleSubmit}\n                        handleChange={this.handleChange}\n                        search={search}\n                     />\n                  </Grid.Column>\n               )}\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column\n                  computer={showSub ? 10 : 16}\n                  className={showSub ? `mobile-hide` : ``}\n               >\n                  <Grid>{this.props.children}</Grid>\n               </Grid.Column>\n               <Grid.Column\n                  computer={6}\n                  className={`show-sub ${showSub ? `` : `hide`}`}\n               >\n                  <List className='box sub-list'>\n                     <List.Item className='img'>\n                        <Image\n                           onClick={() => toggleCloseSub()}\n                           src={CloseImage}\n                        />\n                     </List.Item>\n\n                     {subPage === 'authorized-apps' && showSubData ? (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div\n                                       className='main-image'\n                                       style={{ backgroundColor: '#fff' }}\n                                    >\n                                       <Image\n                                          src={showSubData[0]}\n                                          align='left'\n                                       />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       {showSubData[1]}\n                                    </List.Header>\n\n                                    <List.Item as='h5' className='color-blue'>\n                                       <span className='color-black'>\n                                          amount:\n                                       </span>\n                                       {showSubData[2]}Ⓝ\n                                    </List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button onClick={handleDeauthorize}>\n                                 DEAUTHORIZE\n                              </Button>\n                           </List.Item>\n                           {false && (\n                              <List.Item className='authorized-transactions'>\n                                 <List.Item\n                                    as='h6'\n                                    className='authorized-transactions-title border-top'\n                                 >\n                                    AUTHORIZED TO\n                                 </List.Item>\n                                 <List.Item className='authorized-transactions-row color-black'>\n                                    View your Account Name\n                                 </List.Item>\n                                 <List.Item className='authorized-transactions-row color-black'>\n                                    Do something else on your behalf\n                                 </List.Item>\n                              </List.Item>\n                           )}\n                           {false && (\n                              <List.Item className='recent-transactions'>\n                                 <List.Item\n                                    as='h6'\n                                    className='recent-transactions-title border-top'\n                                 >\n                                    RECENT TRANSACTIONS\n                                 </List.Item>\n                                 <List.Item className='recent-transactions-row border-top'>\n                                    <List.Header>\n                                       Another thing here\n                                    </List.Header>\n                                    <List.Item>3h ago</List.Item>\n                                 </List.Item>\n                                 <List.Item className='recent-transactions-row border-top'>\n                                    <List.Header>\n                                       Another Thing Happened\n                                    </List.Header>\n                                    <List.Item>3d ago</List.Item>\n                                 </List.Item>\n                                 <List.Item className='recent-transactions-row border-top'>\n                                    <List.Header>\n                                       In-app purchase: 20 Ⓝ\n                                    </List.Header>\n                                    <List.Item>1w ago</List.Item>\n                                 </List.Item>\n                                 <List.Item className='recent-transactions-row border-top'>\n                                    <List.Header>Staked: 10 Ⓝ</List.Header>\n                                    <List.Item>2w ago</List.Item>\n                                 </List.Item>\n                                 <List.Item className='recent-transactions-row border-top'>\n                                    <List.Header>Authorized</List.Header>\n                                    <List.Item>2w ago</List.Item>\n                                 </List.Item>\n                              </List.Item>\n                           )}\n                        </Fragment>\n                     ) : (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div className='main-image'>\n                                       <Image\n                                          src={AccountGreyImage}\n                                          align='left'\n                                       />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       Alex Skidanov\n                                    </List.Header>\n                                    <List.Item as='h5'>@alex.near</List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>REMOVE CONNECTION</Button>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    You and Alex played NEAR Chess\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='send-money border-top'>\n                              <Button as={Link} to='/send-money/marcin'>\n                                 SEND MONEY\n                              </Button>\n                           </List.Item>\n                        </Fragment>\n                     )}\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n            {false && (\n               <Grid.Row className='border-top-light'>\n                  <Grid.Column\n                     width={8}\n                     verticalAlign='middle'\n                     className='pagination-block-top-paging'\n                  >\n                     <List horizontal verticalAlign='middle'>\n                        <List.Item width={6}>\n                           <PaginationPaging\n                              handleOnClickPaging={this.handleOnClickPaging}\n                              pagingValue={pagingValue}\n                              pagingDropdown={pagingDropdown}\n                              handlePagingDropdownClick={\n                                 this.handlePagingDropdownClick\n                              }\n                           />\n                        </List.Item>\n                        <List.Item\n                           width={6}\n                           as='h6'\n                           className='pagination-block-top-paging-summary'\n                        >\n                           <PaginationSummary\n                              pageNumber={pageNumber}\n                              pageLimit={pageLimit}\n                              totalRecords={totalRecords}\n                           />\n                        </List.Item>\n                     </List>\n                  </Grid.Column>\n                  <Grid.Column\n                     width={8}\n                     className='pagination-block-paging'\n                     textAlign='right'\n                  >\n                     <PaginationTab\n                        totalRecords={totalRecords}\n                        pageLimit={pageLimit}\n                        initialPage={initialPage}\n                        onPageChanged={onPageChanged}\n                        pageNeighbors={pageNeighbors}\n                     />\n                  </Grid.Column>\n               </Grid.Row>\n            )}\n         </PaginationBlockGrid>\n      )\n   }\n}\n\nexport default PaginationBlock\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst ContactsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={10} tablet={10} mobile={16} as='h1'>\n               Contacts\n            </Grid.Column>\n            <Grid.Column\n               as='h1'\n               computer={6}\n               tablet={6}\n               mobile={16}\n               className='add'\n            >\n               203<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default ContactsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\nimport ContactsContainer from './ContactsContainer'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nclass Contacts extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <ContactsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`c-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </ContactsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = () => ({})\n\nexport const ContactsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Contacts))\n","import React from 'react'\nimport { Container, Grid, Dimmer, Loader } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst AuthorizedAppsContainer = ({ loader, total, children }) => (\n   <CustomContainer>\n      <Dimmer inverted active={loader}>\n         <Loader />\n      </Dimmer>\n\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column as='h1' computer={10} tablet={10} mobile={16}>\n               Authorized Apps\n            </Grid.Column>\n            <Grid.Column\n               as='h1'\n               computer={6}\n               tablet={6}\n               mobile={16}\n               className='add'\n            >\n               {total}\n               <span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default AuthorizedAppsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\nimport {\n   handleRefreshAccount,\n   handleRefreshUrl,\n   getAccountDetails,\n   removeAccessKey\n} from '../../actions/account'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\n\nimport AppDefaultImage from '../../images/icon-app-default.svg'\n\nclass AuthorizedApps extends Component {\n   state = {\n      loader: true,\n      showSub: false,\n      showSubOpen: 0,\n      showSubData: [],\n      authorizedApps: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = (i, row) => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: true,\n         showSubOpen: i,\n         showSubData: row\n      }))\n   }\n\n   toggleCloseSub = () => {\n      this.setState(() => ({\n         showSub: false,\n         showSubOpen: 0,\n         showSubData: []\n      }))\n   }\n\n   handleDeauthorize = () => {\n      const publicKey = this.state.showSubData[3]\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      this.props.removeAccessKey(publicKey).then(() => {\n         this.toggleCloseSub()\n         this.refreshAuthorizedApps()\n      })\n   }\n\n   refreshAuthorizedApps = () => {\n      this.setState(() => ({\n         loader: true\n      }))\n\n      this.props.getAccountDetails().then(() => {\n         this.setState(() => ({\n            loader: false\n         }))\n      })\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.refreshAuthorizedApps()\n   }\n\n   render() {\n      const {\n         loader,\n         filterTypes,\n         showSub,\n         showSubOpen,\n         showSubData\n      } = this.state\n\n      const { authorizedApps } = this.props\n\n      return (\n         <AuthorizedAppsContainer loader={loader} total={authorizedApps.length}>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               showSubData={showSubData}\n               toggleShowSub={this.toggleShowSub}\n               toggleCloseSub={this.toggleCloseSub}\n               subPage='authorized-apps'\n               handleDeauthorize={this.handleDeauthorize}\n            >\n               {authorizedApps.map((row, i) => (\n                  <ListItem\n                     key={`a-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </AuthorizedAppsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl,\n   getAccountDetails,\n   removeAccessKey\n}\n\nconst mapStateToProps = ({ account }) => ({\n   ...account,\n   authorizedApps: account.authorizedApps\n      ? account.authorizedApps.map(r => [\n           AppDefaultImage,\n           r.contractId,\n           r.amount,\n           r.publicKey\n        ])\n      : []\n})\n\nexport const AuthorizedAppsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(AuthorizedApps))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n\n         :first-child {\n            padding-left: 0px;\n         }\n      }\n\n      h1 {\n         color: #4a4f54;\n         padding-left: 0px;\n         line-height: 48px;\n      }\n   }\n\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-left: 1rem;\n         padding-right: 1rem;\n      }\n\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst SendMoneyContainer = ({ children, step }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='1' className='page-title'>\n            <Grid.Column as='h1' textAlign='center'>\n               {step === 3 ? `Success!` : `Send Money`}\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default SendMoneyContainer\n","import React from 'react'\n\nimport {\n   Header,\n   TextArea,\n   List,\n   Image,\n   Button,\n   Form,\n   Dimmer,\n   Loader,\n   Segment\n} from 'semantic-ui-react'\n\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&&&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin: 36px auto 0 auto;\n      form {\n         h3 {\n            margin-bottom: 13px;\n            text-align: left;\n         }\n         .alert-info {\n            font-weight: 600;\n            margin: 0 0 -8px 0;\n            padding: 0 0 0 24px !important;\n            line-height: 34px;\n            font-size: 14px;\n            margin-top: -6px;\n            text-align: left;\n            &.problem {\n               color: #ff585d;\n            }\n            &.success {\n               color: #6ad1e3;\n            }\n            &.amount {\n               text-align: center;\n               padding: 0 !important;\n            }\n         }\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 auto;\n            img {\n               padding-top: 10px;\n            }\n         }\n         .amount {\n            margin-top: 16px;\n            margin-bottom: 0px;\n            padding-top: 24px;\n            \n            input {\n               height: 80px;\n               border: 0px;\n               font-family: Bw Seido Round;\n               font-size: 72px;\n               font-weight: 500;\n               line-height: 80px;\n               color: #4a4f54;\n               text-align: center;\n               padding: 0px;\n               \n               :focus::-webkit-input-placeholder { color: transparent; }\n               :focus:-moz-placeholder { color: transparent; }\n               :focus::-moz-placeholder { color: transparent; }\n               :focus:-ms-input-placeholder { color: transparent; }\n\n               -moz-appearance: textfield;\n\n               ::-webkit-outer-spin-button,\n               ::-webkit-inner-spin-button {\n                  -webkit-appearance: none;\n                  margin: 0;\n               }\n            }\n\n\n         }\n         .near-tokens {\n            margin: 14px auto 36px auto;\n            text-align: center;\n            padding: 2px;\n            width: 200px;\n            background-color: #fff;\n            color: #999999;\n            font-weight: 600;\n         }\n         .add-note {\n            > textarea {\n               width: 100%;\n               border: 0px;\n               padding: 12px;\n               :focus {\n                  border: 0px;\n               }\n            }\n         }\n         .send-money {\n            margin-top: 24px;\n            margin-bottom: 6px;\n            > button {\n               width: 288px;\n               line-height: 56px;\n               border-radius: 30px;\n               border: solid 2px #5ace84;\n               font-size: 18px;\n               font-weight: 600;\n               letter-spacing: 2px;\n               text-align: center;\n               padding: 0 0 0 0;\n               background-color: #5ace84;\n               color: #fff;\n               :hover {\n                  color: #5ace84;\n                  background: #fff;\n               }\n               :disabled {\n                  background-color: #e6e6e6;\n                  border-color: #e6e6e6;\n                  opacity: 1 !important;\n               }\n            }\n         }\n      }\n      @media screen and (max-width: 991px) {\n      }\n      @media screen and (max-width: 767px) {\n         padding: 0px;\n         width: 100%;\n         text-align: center;\n         margin-left: auto;\n         margin-right: auto;\n         border: 0px;\n         .near-tokens {\n            width: 200px;\n         }\n         form {\n            .near-tokens {\n               margin: 14px auto 24px auto;\n            }\n            .add-note {\n               margin-left: -1rem;\n               margin-right: -1rem;\n               > textarea {\n                  width: 100%;\n                  height: 98px;\n                  border: 0px;\n                  padding: 12px;\n                  background: #f8f8f8;\n                  :focus {\n                     border: 0px;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyFirstStep = ({\n   handleNextStep,\n   handleChange,\n   note,\n   loader,\n   paramAccountId,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage,\n   formLoader,\n   amount,\n   amountStatus\n}) => (\n   <CustomList className='box'>\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         {paramAccountId ? (\n            <List.Item>\n               <List.Content>\n                  <div className='main-image'>\n                     <Image src={AccountGreyImage} align='left' />\n                  </div>\n               </List.Content>\n               <List.Content as='h2'>{accountId}</List.Content>\n               <List.Content>@{accountId}</List.Content>\n            </List.Item>\n         ) : (\n            <List.Item>\n               <List.Content>\n                  <Header as='h3'>Enter a username to send:</Header>\n\n                  <CreateAccoungFormInput\n                     formLoader={formLoader}\n                     accountId={accountId}\n                     handleChangeAccountId={handleChangeAccountId}\n                     successMessage={successMessage}\n                     errorMessage={errorMessage}\n                  />\n\n                  {successMessage && (\n                     <Segment basic className='alert-info success'>\n                        Username exists.\n                     </Segment>\n                  )}\n                  {errorMessage && (\n                     <Segment basic className='alert-info problem'>\n                        Username does not exist.\n                     </Segment>\n                  )}\n               </List.Content>\n            </List.Item>\n         )}\n\n         <List.Item className='amount border-top'>\n            <Form.Input\n               type='number'\n               name='amount'\n               value={amount}\n               onChange={handleChange}\n               placeholder='0'\n               step='1'\n               min='1'\n            />\n            \n         </List.Item>\n         {amountStatus && (\n            <Segment basic textAlign='center' className='alert-info problem amount'>\n               {amountStatus}\n            </Segment>\n         )}\n         <List.Item as='h5' className='near-tokens'>\n            NEAR TOKENS\n         </List.Item>\n         {false ? (\n            <List.Item className='add-note border-bottom border-top'>\n               <TextArea\n                  name='note'\n                  value={note}\n                  onChange={handleChange}\n                  placeholder='Add a note...'\n               />\n            </List.Item>\n         ) : null}\n         <List.Item className='send-money'>\n            <Button\n               disabled={\n                  paramAccountId\n                     ? !((amount) > 0 && amountStatus === '')\n                     : !(successMessage && (amount) > 0 && amountStatus === '')\n               }\n               onClick={handleNextStep}\n            >\n               SEND MONEY\n            </Button>\n         </List.Item>\n      </Form>\n   </CustomList>\n)\n\nexport default SendMoneyFirstStep\n","import React from 'react'\n\nimport { List, Image, Button, Header, Dimmer, Loader } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 36px;\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 0;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n\n         font-family: Bw Seido Round;\n         font-size: 72px;\n         font-weight: 500;\n         line-height: 60px;\n         color: #4a4f54;\n         word-break: break-all;\n      }\n      .to {\n         width: 40px;\n         background: #fff;\n         margin: -20px auto 12px auto;\n      }\n\n      .with-note {\n         padding-top: 12px;\n\n         .expand-note {\n            color: #0072ce;\n            cursor: pointer;\n            font-weight: 600;\n\n            :hover {\n               text-decoration: underline;\n            }\n         }\n      }\n\n      .send-money {\n         padding-top: 24px;\n         padding-bottom: 24px;\n         margin-top: 24px;\n         margin-bottom: 24px;\n\n         > .button {\n            width: 288px;\n            line-height: 60px;\n            border-radius: 30px;\n            border: solid 2px #5ace84;\n            font-size: 18px;\n            font-weight: 600;\n            letter-spacing: 2px;\n            text-align: center;\n            padding: 0 0 0 0;\n            background-color: #5ace84;\n            color: #fff;\n\n            :hover {\n               color: #5ace84;\n               background: #fff;\n            }\n            :disabled {\n               border: 4px solid #e6e6e6;\n               background: #e6e6e6;\n               opacity: 1 !important;\n            }\n            :active,\n            :focus {\n               background: #fff;\n               color: #5ace84;\n            }\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         .to {\n            margin: -20px auto 12px auto;\n         }\n\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .amount {\n               font-size: 48px !important;\n               padding-top: 0px;\n            }\n            .send-money {\n               padding-top: 14px;\n               padding-bottom: 14px;\n               margin-top: 14px;\n               margin-bottom: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneySecondStep = ({\n   handleNextStep,\n   handleExpandNote,\n   expandNote,\n   note,\n   amount,\n   accountId,\n   loader\n}) => (\n   <CustomList className='box'>\n      <Dimmer inverted active={loader}>\n         <Loader />\n      </Dimmer>\n      \n      <List.Item as='h2'>You are sending</List.Item>\n      <List.Item as='h1' className='amount border-bottom'>\n         {amount}\n         <span>Ⓝ</span>\n      </List.Item>\n      <List.Item className='to'>\n         <Header as='h2'>to</Header>\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note '>\n            with note:\n            <br />\n            {expandNote ? (\n               <span className='color-black'>{note}</span>\n            ) : (\n               <span className='expand-note' onClick={handleExpandNote}>\n                  Expand note\n               </span>\n            )}\n         </List.Item>\n      )}\n      <List.Item className='send-money border-top border-bottom'>\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\n      </List.Item>\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\n   </CustomList>\n)\n\nexport default SendMoneySecondStep\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 12px;\n\n      .send-money img {\n         width: 24px;\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 32px;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n      }\n\n      .with-note {\n         padding-top: 24px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .send-money img {\n               margin-top: 12px;\n            }\n            .amount {\n               padding-top: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\n   <CustomList>\n      <List.Item className='send-money'>\n         <Image src={SendImage} />\n      </List.Item>\n      <List.Item as='h2' className='amount'>\n         {amount}\n         <span>Ⓝ</span> was sent to:\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note'>\n            <span className='font-bold'>with note:</span>\n            <br />\n            {note}\n         </List.Item>\n      )}\n   </CustomList>\n)\n\nexport default SendMoneyThirdStep\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport SendMoneyContainer from './SendMoneyContainer'\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\nimport SendMoneySecondStep from './SendMoneySecondStep'\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\n\nclass SendMoney extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      step: 1,\n      note: '',\n      expandNote: false,\n      paramAccountId: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false,\n      amount: '',\n      amountStatus: ''\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      const paramId = this.props.match.params.id\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      if (paramId) {\n         this.wallet\n            .checkAccount(paramId)\n            .then(d => {\n               this.setState(() => ({\n                  paramAccountId: true,\n                  accountId: paramId\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  accountId: ''\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  loader: false\n               }))\n            })\n      } else {\n         this.setState(() => ({\n            loader: false\n         }))\n      }\n   }\n\n   handleNextStep = () => {\n      const { step, accountId, amount} = this.state;\n\n      if (step === 2) {\n         this.setState(() => ({\n            loader: true\n         }))\n\n         this.wallet.sendTokens(this.wallet.getAccountId(), accountId, amount)\n            .then(() => {\n               this.setState(state => ({\n                  step: state.step + 1\n               }))\n            })\n            .catch(console.error)\n            .finally(() => {\n               this.setState(() => ({\n                  loader: false\n               }))\n            })\n         return;\n      }\n\n      this.setState(state => ({\n         step: state.step + 1\n      }))\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         amountStatus: !Number.isInteger(Number(value))\n            ? 'Please enter a whole number.'\n            : value > this.props.amount \n               ? 'Not enough tokens.' \n               : ''\n      }))\n\n      this.setState(() => ({\n         [name]: value\n      }))\n   }\n\n   handleExpandNote = () => {\n      this.setState(() => ({\n         expandNote: true\n      }))\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   render() {\n      const { step } = this.state\n\n      return (\n         <SendMoneyContainer step={step}>\n            {step === 1 && (\n               <SendMoneyFirstStep\n                  handleNextStep={this.handleNextStep}\n                  handleChange={this.handleChange}\n                  handleChangeAccountId={this.handleChangeAccountId}\n                  {...this.state}\n               />\n            )}\n            {step === 2 && (\n               <SendMoneySecondStep\n                  handleNextStep={this.handleNextStep}\n                  handleExpandNote={this.handleExpandNote}\n                  {...this.state}\n               />\n            )}\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\n         </SendMoneyContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   ...account\n})\n\nexport const SendMoneyWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(SendMoney))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n         float: left;\n         width: auto !important;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst ProfileContainer = ({ account, children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column as='h1'>Account:</Grid.Column>\n            <Grid.Column as='h1' className='add'>\n               @{account.accountId}\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default ProfileContainer\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Popup, Grid, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport LockImage from '../../images/icon-lock.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .row {\n         padding-top: 12px;\n         padding-bottom: 12px;\n\n         .edit-link {\n            font-weight: 600;\n         }\n         .title {\n            font-weight: 600;\n            color: #24272a;\n         }\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 120px;\n         height: 120px;\n         background: #e6e6e6;\n         border-radius: 60px;\n\n         img {\n            width: 100px;\n            padding-top: 10px;\n         }\n      }\n\n      .locked {\n         float: right;\n         border: 0px;\n         padding: 1px 7px;\n         width: 32px;\n         height: 32px;\n         background: #f8f8f8;\n         border-radius: 32px;\n\n         img {\n            padding-top: 4px;\n         }\n      }\n\n      .row-title {\n         margin-top: 20px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         margin-right: 0px;\n\n         .column {\n            padding-left: 0px;\n            padding-right: 0px;\n         }\n      }\n   }\n`\n\nconst ProfileDetails = ({ account }) => (\n   <CustomGrid>\n      <Grid.Row className='border-top-bold'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            PROFILE\n         </Grid.Column>\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Username\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            @{account.accountId}\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\n            <Popup\n               trigger={\n                  <div className='locked'>\n                     <Image src={LockImage} align='left' />\n                  </div>\n               }\n               hoverable\n               position='left center'\n            >\n               <Popup.Header>Why is this locked?</Popup.Header>\n               <Popup.Content>\n                  Your username is your unique identifier in the system and cannot be changed\n                  cause data and asset ownership is tied to it.\n                  However you are welcome to <Link to=\"/create\">create another account</Link> with desired name\n                  and transfer assets as needed.\n                  {` `}\n                  {false ?\n                  <a href='/'>Learn more</a>\n                  : null }\n               </Popup.Content>\n            </Popup>\n         </Grid.Column>\n      </Grid.Row>\n      {false ? <div>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Full Name\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            Evgeny Kuzyakov\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Photo\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            <div className='main-image'>\n               <Image src={AccountGreyImage} align='left' />\n            </div>\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            CONTACT INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Email\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            email@website.com\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Phone\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            000-000-0000\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Address\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            1234 N. West Ave., San Francisco, CA 98562\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            FINANCIAL INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      </div> : null }\n\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Balance\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            {account.amount} Ⓝ\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Only Me\n         </Grid.Column>\n         <Grid.Column as=\"div\">\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default ProfileDetails\n","import React from 'react'\n\nimport { Grid } from 'semantic-ui-react'\n\nconst ProfileSection = ({ children }) => (\n   <Grid columns={2} stackable>\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\n      <Grid.Column computer={6}>\n         {children[1]}\n         {children[2]}\n      </Grid.Column>\n   </Grid>\n)\n\nexport default ProfileSection\n","import React from 'react'\n\nimport { List, Button, Image } from 'semantic-ui-react'\n\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      margin-top: -1rem;\n      padding: 14px 4px 14px 14px;\n\n      .keys {\n         img {\n            width: 24px;\n            margin-top: 2px;\n         }\n      }\n      .account {\n         margin-top: 12px;\n\n         &-name {\n            margin-top: 12px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         img {\n            width: 18px;\n            margin-top: 8px;\n            margin-right: 20px;\n         }\n         .download {\n            margin: 0px;\n         }\n         button {\n            width: 130px;\n            background-color: #0072ce;\n            border: 2px solid #0072ce;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n            margin-left: 20px;\n\n            :hover {\n               background-color: #fff;\n               color: #0072ce;\n            }\n         }\n         .account-name {\n            color: #24272a;\n            font-weight: 600;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n         &&& {\n            .account {\n               .download {\n                  float: none;\n                  margin: 0 0 0 16px;\n               }\n            }\n         }\n      }\n      @media screen and (max-width: 767px) {\n         &&& {\n            margin-top: 20px;\n\n            .account {\n               button {\n                  margin-left: 8px;\n               }\n               .download {\n                  float: right;\n                  margin: 0 0 0 0;\n               }\n            }\n         }\n      }\n   }\n`\n\nconst ProfileYourKeys = () => (\n   <CustomList className='box'>\n      <List.Item className='keys'>\n         <List.Icon as={Image} src={KeysGreyImage} />\n         <List.Content as='h2'>Your Keys</List.Content>\n      </List.Item>\n      <List.Item className='account'>\n         <List.Content floated='right' className='download'>\n            <Button>DOWNLOAD</Button>\n         </List.Content>\n         <List.Content>\n            <Image align='left' src={DocGreyImage} />\n         </List.Content>\n         <List.Content className='account-name'>\n            @eugenethedream.key\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileYourKeys\n","import React from 'react'\n\nimport { List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 8px 0 8px 20px;\n      margin-left: 28px;\n      margin-top: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .header {\n         line-height: 28px;\n      }\n      .content {\n         line-height: 20px;\n      }\n\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         border-left: 0px;\n      }\n   }\n`\n\nconst ProfileNotice = () => (\n   <CustomList>\n      <List.Item>\n         <List.Header>Never give your keys away</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\n            sit amet pretium mi, a molestie est.\n            <a href='/'>Learn more</a>\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileNotice\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport ProfileContainer from './ProfileContainer'\nimport ProfileDetails from './ProfileDetails'\nimport ProfileSection from './ProfileSection'\nimport ProfileYourKeys from './ProfileYourKeys'\nimport ProfileNotice from './ProfileNotice'\n\nclass Profile extends Component {\n   state = {\n      loader: false\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      return (\n         <ProfileContainer account={this.props.account}>\n            <ProfileSection>\n               <ProfileDetails account={this.props.account} />\n               { false ?\n               <ProfileYourKeys />\n               : null }\n               { false ?\n               <ProfileNotice />\n               : null }\n            </ProfileSection>\n         </ProfileContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const ProfileWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Profile))\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  \n  * {\n   box-sizing: inherit;\n   }\n\n   #root {\n      min-height: 100vh;\n      position: relative;\n   }\n   html {\n      box-sizing: border-box;\n      min-height: 100vh;\n      height: auto !important;\n\n      body {\n         margin: 0;\n         padding: 0;\n         min-height: 100vh !important;\n\n         position: relative;\n         color: #999;\n         font-family: \"benton-sans\",sans-serif;\n         font-weight: 500;\n         font-size: 14px !important;\n      }\n   }\n   \n\n   .App {\n      min-height: 100vh;\n\n      > div {\n         min-height: 100vh;\n      }\n   }\n\n   a {\n      color: #0072ce;\n   }\n   a:hover {\n      color: #0072ce;\n      text-decoration: underline;\n   }\n\n   h1, .h1 {\n      font-family: Bw Seido Round !important;\n      font-size: 48px !important;\n      font-weight: 500 !important;\n      line-height: 100px;\n      color: #24272a;\n   }\n   h2, .h2 {\n      font-family: Bw Seido Round !important;\n      font-size: 24px !important;\n      font-weight: 500 !important;\n      line-height: 1.33;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h3, .h3 {\n      font-family: Bw Seido Round !important;\n      font-size: 18px !important;\n      font-weight: 500 !important;\n      line-height: 24px !important;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h4, .h4 {\n      font-family: Bw Seido Round !important;\n      font-size: 16px;\n      font-weight: 500;\n      line-height: 1.33;\n      color: #24272a;\n      margin: 0px;\n   }\n\n   h5, .h5 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 13px !important;\n      line-height: 26px;\n      font-weight: 500;\n      color: #999999 !important;\n      margin: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   h6, .h6 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      line-height: 18px;\n      font-weight: 600;\n      color: #999999;\n      margin: 0px !important;\n      letter-spacing: 1.5px !important;\n   }\n\n\n\n   .font-small {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      color: #999 !important;\n      font-weight: 500 !important;\n\n      a {\n         font-family: \"benton-sans\",sans-serif !important;\n         font-size: 12px !important;\n         color: #999 !important;\n         font-weight: 500 !important;\n      }\n\n      a:hover {\n         color: #999 !important;\n      }\n   }\n\n   .ui.form input[type=text] {\n      font-family: \"benton-sans\",sans-serif;\n      font-size: 16px;\n   }\n\n\n   .font-bold {\n      font-weight: 600;\n   }\n\n\n   .color-seafoam-blue {\n      color: #6ad1e3 !important;\n   }\n   .color-blue {\n      color: #0072ce !important;\n   }\n   .color-brown-grey {\n      color: #999;\n   }\n   .color-charcoal-grey {\n      color: #4a4f54 !important;\n   }\n   .color-black {\n      color: #24272a !important;\n\n      :hover {\n         color: #24272a;\n      }\n   }\n\n\n   .ui.popup > .header {\n      font-weight: 600 !important;\n      color: #24272a !important;\n   }\n\n\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\n      font-weight: 600;\n   }\n\n\n   .border-bottom {\n      border-bottom: 2px solid #f8f8f8 !important;\n   }\n   .border-bottom-bold {\n      border-bottom: 4px solid #e6e6e6 !important;\n   }\n   .border-bottom-light {\n      border-bottom: 1px solid #f8f8f8 !important;\n   }\n\n   .border-top {\n      border-top: 2px solid #f8f8f8 !important;\n   }\n\n   .border-top-bold {\n      border-top: 4px solid #e6e6e6 !important;\n   }\n   .border-top-light {\n      border-top: 1px solid #f8f8f8 !important;\n   }\n\n   .border-left-bold {\n      border-left: 4px solid #f8f8f8 !important;\n   }\n\n\n   .border-right {\n      border-right: 2px solid #e6e6e6;\n   }\n   .border-right-light {\n      border-right: 1px solid #e6e6e6;\n   }\n   .background-lg {\n      background: #f8f8f8;\n   }\n\n\n   .button {\n      font-family: \"benton-sans\",sans-serif !important;\n   }\n\n\n   .box {\n      border: 4px solid #e6e6e6;\n      border-radius: 8px;\n      margin-bottom: 0px;\n      position: relative;\n      min-height: 100px;\n      position: relative;\n\n      .row {\n         padding: 0px !important;\n      }\n      .column {\n         padding: 24px 10px 20px 30px !important;\n         word-wrap: break-word;\n      }\n      .segment {\n         padding: 30px 0 20px 0 !important;\n      }\n      .list {\n         > .item {\n            padding: 0px !important;\n\n            > img {\n               top: -4px;\n               margin: 0 10px;\n            }\n            > img.transarrow {\n               width: 11px !important;\n            }\n         }\n         > h5.item {\n            top: -4px;\n         }\n      } \n   }\n\n\n   .copy-image {\n      width: 18px !important;\n      margin: 0px 10px 0 0px !important;\n      top: -4px !important;\n   }\n\n\n   .balance-image {\n      font-size: 20px !important;\n      font-weight: 100 !important;\n\n      &-big {\n         font-size: 32px !important;\n         font-weight: 100 !important;\n      }\n   }\n   \n\n   .transactions-block .item {\n      margin-left: 10px !important;\n   }\n\n\n   .hide {\n      display: none !important;\n   }\n\n\n   .App-section {\n      width: 860px;\n      margin: auto;\n      margin-top: 10px;\n      margin-bottom: 20px;\n   }\n\n   .App-error-message {\n      width: 100%;\n      text-align: center;\n      display: inline-block;\n      margin: auto;\n   }\n\n   .ui.list .list>.item .header, .ui.list>.item .header {\n      font-family: \"benton-sans\",sans-serif;\n      \n   }\n   .ui.popup>.header, .ui.popup {\n      color: #999;\n      font-family: \"benton-sans\",sans-serif;\n      font-weight: 500;\n      font-size: 14px !important;\n   }\n   .ui.popup {\n      border: 1px solid #eee;\n   }\n   .ui.left.center.popup:before {\n      box-shadow: 1px -1px 0 0 #eee;\n   }\n   .ui.bottom.right.popup:before {\n      box-shadow: -1px -1px 0 0 #eee;\n   }\n\n\n   @media screen and (max-width: 767px) {\n      h1, .h1 {\n         font-size: 38px !important;\n         font-weight: 500;\n         line-height: 50px;\n         color: #4a4f54;\n      }\n      h2, .h2 {\n         font-size: 24px !important;\n         font-weight: 600;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      h3, .h3 {\n         font-size: 16px !important;\n         font-weight: 500;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      \n\n      .box .column {\n         padding: 16px 10px !important;\n      }\n   }\n`\n","import React, { Component } from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport '../index.css'\n\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\nimport Footer from './common/Footer'\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\nimport { LoginWithRouter } from './login/Login'\nimport { ContactsWithRouter } from './contacts/Contacts'\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\nimport { ProfileWithRouter } from './profile/Profile'\n\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './GlobalStyle'\nconst theme = {}\n\nconst PATH_PREFIX = process.env.PUBLIC_URL\n\nclass Routing extends Component {\n   render() {\n      return (\n         <div className='App'>\n            <GlobalStyle />\n\n            <ConnectedRouter basename={PATH_PREFIX}  history={this.props.history}>\n               <ThemeProvider theme={theme}>\n                  <ResponsiveContainer>\n                     <Switch>\n                        <Route\n                           exact\n                           path='/'\n                           component={DashboardDetailWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/create'\n                           component={CreateAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/set-recovery/:accountId'\n                           component={SetRecoveryInfoWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/recover-account'\n                           component={RecoverAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/login'\n                           component={LoginWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/contacts'\n                           component={ContactsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/authorized-apps'\n                           component={AuthorizedAppsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/send-money/:id?'\n                           component={SendMoneyWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/profile'\n                           component={ProfileWithRouter}\n                        />\n\n                        <Route component={DashboardDetailWithRouter} />\n                     </Switch>\n                     <Footer />\n                  </ResponsiveContainer>\n               </ThemeProvider>\n            </ConnectedRouter>\n         </div>\n      )\n   }\n}\n\nexport default Routing\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\n\nimport createRootReducer from './reducers'\nimport createMiddleware from './middleware'\n\nimport Routing from './components/Routing'\nimport * as serviceWorker from './serviceWorker'\n\nconst history = createBrowserHistory()\n\nconst store = createStore(createRootReducer(history), createMiddleware(history))\n\nReactDOM.render(\n   <Provider store={store}>\n      <Routing history={history} />\n   </Provider>,\n   document.getElementById('root')\n)\nserviceWorker.unregister()\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport account from './account'\n\nexport default (history) => combineReducers({\n   account,\n   router: connectRouter(history)\n})\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";"],"sourceRoot":""}