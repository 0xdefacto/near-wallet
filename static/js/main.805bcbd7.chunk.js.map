{"version":3,"sources":["images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-arrow-right.svg","images/icon-t-transfer.svg","images/icon-m-transaction.svg","images/icon-account-grey.svg","images/icon-contacts.svg","images/icon-authorized.svg","images/icon-logout.svg","images/icon-activity.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-t-stake.svg","images/near_logo.svg","utils/wallet.js","images/icon-deny.svg","images/icon-app-default.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","images/footer-nearkat.svg","images/icon-check-blue.svg","images/icon-activity-grey.svg","images/icon-authorized-grey.svg","images/icon-contacts-grey.svg","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/PopupMenuTrigger.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/common/Disclaimer.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/common/RequestStatusBox.js","components/accounts/AccountFormSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccountContainer.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/pagination/PaginationSummary.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-arrow-down.svg","images/icon-problems.svg","images/icon-close.svg","images/icon-send.svg"],"names":["module","exports","__webpack_require__","p","ACCOUNT_HELPER_URL","process","REACT_APP_ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","concat","NODE_URL","REACT_APP_NODE_URL","HELPER_KEY","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","Object","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","account","Account","nearClient","accounts","JSON","parse","localStorage","getItem","tokens","accountId","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","setItem","stringify","save","app_url","app_title","contract_id","token","possible","i","charAt","Math","floor","random","length","isLegitAccountId","account_id","test","_sendTransaction","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","senderId","receiverId","methodName","amount","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","_sendTokens","_callee2","_context2","t0","sendTokens","t1","waitForTransactionResult","call","_x6","_x7","_x8","options","undefined","history","param","next_url","window","location","search","reset_accounts","url","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee3","_context3","Error","viewAccount","_x9","_x10","_checkAccount","_callee4","_context4","_x11","_checkNewAccount","_callee5","remoteAccount","_context5","_x12","_createNewAccount","_callee6","keyPair","_this","_context6","KeyPair","fromRandomSeed","Promise","resolve","reject","data","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","saveAndSelectAccount","responseText","send","_x13","_saveAndSelectAccount","_callee7","_context7","setKey","_x14","_x15","_addAccessKey","_callee8","contractId","publicKey","successUrl","addAccessKeyResponse","result","parsedUrl","redirectUrl","_context8","addAccessKey","URL","searchParams","set","href","console","log","_x16","_x17","_x18","_x19","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee9","action","app_data","hash","signature","_context9","parseInt","sendTransaction","signer","signHash","_x20","_x21","phoneNumber","sendJson","postData","_setupAccountRecovery","_callee10","securityCode","_ref","_context10","public_keys","some","encodeBufferInBs58","Buffer","from","signBuffer","validateCode","_x22","_x23","_x24","_recoverAccount","_callee11","_context11","_x25","_x26","_x27","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","success","catch","error","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","getAccountId","type","loader","loadAccount","v","authToken","newAccessToken","stake","nonce","code_hash","message","indexOf","clearState","handleRefreshUrl","title","success_url","failure_url","public_key","redirectToApp","state","nextUrl","setTimeout","createActions","REQUEST_CODE","requestCode","successCode","errorCode","SETUP_ACCOUNT_RECOVERY","setupAccountRecovery","RECOVER_ACCOUNT","recoverAccount","initialState","formLoader","sentSms","requestResultReducer","handleActions","defineProperty","combineActions","_ref2","payload","meta","objectSpread","requestStatus","errorMessage","toString","messageCode","reducer","_ref3","ready","reduceReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","assign","warn","CustomDiv","styled","_templateObject","PopupMenuTrigger","handleClick","_ref$dropdown","dropdown","react_default","createElement","onClick","className","style","float","Image","src","AccountGreyImage","MobileMenuImage","CloseImage","ArrowDownImage","Loader","active","inline","size","CustomResponsive","Responsive","MobileView_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","maxWidth","Segment","basic","Menu","borderless","react_router_dom","to","LogoImage","responsive_PopupMenuTrigger","Item","RecentImage","SendImage","List","as","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","handleToggle","popupOpen","trigger","position","Icon","AccountImage","Content","Link","DesktopView_templateObject","DesktopView","activeItem","hideFixedMenu","fixed","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","widescreen","largeScreen","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","DashboardOtherAssets_templateObject","TContractImage","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","Row","DashboardNotice_templateObject","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","DashboardActivity_templateObject","DashboardDetail","notice","activity","authorizedaps","newcontacts","handleNotice","_","TTransferImage","TStakeImage","_this$state","dashboard_DashboardContainer","CustomGrid","CreateAccountSection_templateObject","CreateAccountSection","successMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","required","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","CustomList","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","stackable","Dimmer","inverted","Header","accounts_NearInfo","common_Disclaimer","CreateAccount","componentDidMount","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","AccountFormSection","common_RequestStatusBox","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","skipRecoverySetup","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","isValidPhoneNumber","trim","match","combinedState","accounts_SetRecoveryInfoContainer","accounts_AccountFormSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref4","_ref5","params","RecoverAccountForm_templateObject","RecoverAccountForm","RecoverAccountForm_RecoveryInfoForm","RecoverAccountContainer_templateObject","RecoverAccountContainer","RecoverAccountContainer_CustomContainer","RecoverAccount","accounts_RecoverAccountContainer","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","horizontal","AuthorizeImage","AppDefaultImage","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","step","PaginationTab","_Component","_getPrototypeOf2","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","currentPage","gotoPage","page","onPageChanged","evt","target","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","createClass","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPagingList","PaginationPaging_templateObject","pagingTypes","PaginationFilter","handleOnClickPaging","pagingValue","pagingDropdown","handlePagingDropdownClick","backgroundImage","ArrowDown","selection","PaginationSummary","pageNumber","SearchForm","Search_templateObject","MSearchImage","Search","PaginationFilterList","PaginationSortBy_templateObject","filterTypesByType","handleDropdownClick","img","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","TransactionFilter","buttonRadio","buttonRadioClick","_this$props","_this$props$pageNumbe","_this$props$showSub","subPage","_this$props2","_this$props2$totalRec","_this$props2$pageLimi","_this$props2$initialP","_this$props2$onPageCh","_this$props2$pageNeig","width","PaginationSortBy","common_Search","backgroundColor","PaginationPaging","pagination_PaginationSummary","PaginationTab_PaginationTab","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_this3","contacts_ContactsContainer","pagination_PaginationBlock","dashboard_ListItem","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","checkAccount","paramId","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileNotice_templateObject","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","basename","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.805bcbd7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","import nearlib from 'nearlib'\nimport sendJson from 'fetch-send-json'\n\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\n\nconst ACCOUNT_HELPER_URL = process.env.REACT_APP_ACCOUNT_HELPER_URL || 'https://studio.nearprotocol.com/contract-api'\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\nconst NODE_URL = process.env.REACT_APP_NODE_URL || 'https://studio.nearprotocol.com/devnet'\nconst HELPER_KEY = process.env.REACT_APP_ACCOUNT_HELPER_URL || '22skMptHjFWNyuEWY22ftn2AbLPSYpmYwGJRGwpNHbTV'\n\nconst KEY_UNIQUE_PREFIX = '_4:'\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\n\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\n\nexport class Wallet {\n   constructor() {\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\n      this.account = new nearlib.Account(this.near.nearClient);\n      this.accounts = JSON.parse(\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\n      )\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\n   }\n\n   save() {\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\n   }\n\n   getAccountId() {\n      return this.accountId\n   }\n\n   selectAccount(accountId) {\n      if (!(accountId in this.accounts)) {\n         return false\n      }\n      this.accountId = accountId\n      this.save()\n   }\n\n   newAccessToken(app_url, app_title, contract_id) {\n      var token = ''\n      var possible =\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n      for (var i = 0; i < 32; i++) {\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n\n      if (!this.isLegitAccountId(contract_id)) {\n         contract_id = ''\n      }\n\n      this.tokens[token] = {\n         app_url,\n         app_title,\n         contract_id,\n         account_id: this.accountId\n      }\n      this.save()\n      return token\n   }\n\n   isLegitAccountId(accountId) {\n      return ACCOUNT_ID_REGEX.test(accountId)\n   }\n\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\n      return await this.near.scheduleFunctionCall(\n         amount,\n         senderId,\n         receiverId,\n         methodName,\n         args || {}\n      )\n   }\n\n   async sendTokens(senderId, receiverId, amount) {\n      return this.near.waitForTransactionResult(\n         await this.near.sendTokens(amount, senderId, receiverId))\n   }\n\n   redirectToCreateAccount(options = {}, history) {\n      const param = {\n         next_url: window.location.search\n      }\n      if (options.reset_accounts) {\n         param.reset_accounts = true\n      }\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\n      let url =\n         WALLET_CREATE_NEW_ACCOUNT_URL +\n         '?' +\n         Object.keys(param).map(\n            (p, i) =>\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\n                  param[p]\n               )}`\n         )\n      history ? history.push(url) : window.location.replace(url)\n   }\n\n   isEmpty() {\n      return !this.accounts || !Object.keys(this.accounts).length\n   }\n\n   redirectIfEmpty(history) {\n      if (this.isEmpty()) {\n         this.redirectToCreateAccount({}, history)\n      }\n   }\n\n   async loadAccount(accountId, history) {\n      if (!(accountId in this.accounts)) {\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\n      }\n      return await this.near.nearClient.viewAccount(accountId)\n   }\n\n   async checkAccount(accountId) {\n      if (accountId !== this.accountId) {\n         return await this.near.nearClient.viewAccount(accountId)\n      } else {\n         throw new Error('You are logged into account ' + accountId + ' .')\n      }\n   }\n\n   async checkNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n   }\n\n   async createNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let keyPair = await nearlib.KeyPair.fromRandomSeed();\n      return await new Promise((resolve, reject) => {\n         let data = JSON.stringify({\n            newAccountId: accountId,\n            newAccountPublicKey: keyPair.getPublicKey()\n         })\n\n         let xhr = new XMLHttpRequest()\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\n         xhr.setRequestHeader('Content-Type', 'application/json')\n         xhr.onload = () => {\n            if (xhr.status === 200) {\n               this.saveAndSelectAccount(accountId, keyPair);\n               resolve(xhr)\n            } else if (xhr.status !== 200) {\n               reject(xhr.responseText)\n            }\n         }\n         xhr.send(data)\n      })\n   }\n\n   async saveAndSelectAccount(accountId, keyPair) {\n      await this.key_store.setKey(accountId, keyPair)\n      this.accounts[accountId] = true\n      this.accountId = accountId\n      this.save()\n   }\n\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\n      const addAccessKeyResponse = await this.account.addAccessKey(\n         accountId,\n         publicKey,\n         contractId,\n         '',  // methodName\n         '',  // fundingOwner\n         0,  // fundingAmount\n      );\n      try {\n         const result = await this.near.waitForTransactionResult(addAccessKeyResponse);\n         const parsedUrl = new URL(successUrl);\n         parsedUrl.searchParams.set('account_id', accountId);\n         parsedUrl.searchParams.set('public_key', publicKey);\n         const redirectUrl = parsedUrl.href;\n         if (result.status === \"Completed\") {\n            window.location.href = redirectUrl;\n         }\n      } catch (e) {\n         // TODO: handle errors\n         console.log(\"Error on adding access key \", e);\n      }\n   }\n\n   subscribeForMessages() {\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\n   }\n\n   clearState() {\n      this.accounts = {}\n      this.tokens = {}\n      this.accountId = ''\n      this.save()\n   }\n\n   async processTransactionMessage(action, data) {\n      let token = data['token'] || ''\n      if (!(token in this.tokens)) {\n         // Unknown token.\n         throw new Error('The token ' + token + ' is not found ')\n      }\n      let app_data = this.tokens[token]\n      let accountId = app_data['account_id']\n      if (!(accountId in this.accounts)) {\n         // Account is no longer authorized.\n         throw new Error(\n            'The account ' + accountId + ' is not part of the wallet anymore.'\n         )\n      }\n      let contract_id = app_data['contract_id']\n      let receiverId = data['receiver_id'] || contract_id\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\n         // Bad receiver account ID or it doesn't match contract id.\n         throw new Error(\n            \"Bad receiver's account ID ('\" +\n               receiverId +\n               \"') or it doesn't match the authorized contract id\"\n         )\n      }\n      let amount = parseInt(data['amount']) || 0\n      if (amount !== 0) {\n         // Automatic authorization denied since for amounts greater than 0.\n         throw new Error('Transaction amount should be 0.')\n      }\n      let methodName = data['methodName'] || ''\n      if (!methodName) {\n         // Method name can't be empty since the amount is 0.\n         throw new Error(\"Method name can't be empty since the amount is 0\")\n      }\n      let args = data['args'] || {}\n      if (action === 'send_transaction') {\n         // Sending the transaction on behalf of the accountId\n         return await this.sendTransaction(\n            accountId,\n            receiverId,\n            methodName,\n            amount,\n            args\n         )\n      } else if (action === 'sign_transaction') {\n         // Signing the provided hash of the transaction. It's a security issue here.\n         // In the future we would sign the transaction above and don't depend on the given hash.\n         let hash = data['hash'] || ''\n         let signature = await this.near.nearClient.signer.signHash(\n            hash,\n            accountId\n         )\n         return signature\n      } else {\n         throw new Error('Unknown action')\n      }\n   }\n\n   requestCode(phoneNumber, accountId) {\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`)\n   }\n\n   validateCode(phoneNumber, accountId, postData) {\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, postData)\n   }\n\n   async setupAccountRecovery(phoneNumber, accountId, securityCode) {\n      const nearAccount = await this.near.nearClient.viewAccount(accountId);\n      if (!nearAccount.public_keys.some(key => nearlib.KeyPair.encodeBufferInBs58(Buffer.from(key)) === HELPER_KEY)) {\n         await this.near.waitForTransactionResult(\n            await this.account.addAccessKey(accountId, HELPER_KEY));\n      }\n\n      const signer = this.near.nearClient.signer;\n      const { signature } = await signer.signBuffer(Buffer.from(securityCode), accountId);\n      await this.validateCode(phoneNumber, accountId, { securityCode, signature })\n   }\n\n   async recoverAccount(phoneNumber, accountId, securityCode) {\n      const keyPair = nearlib.KeyPair.fromRandomSeed()\n      await this.validateCode(phoneNumber, accountId, { securityCode, publicKey: keyPair.publicKey })\n      await this.saveAndSelectAccount(accountId, keyPair)\n   }\n\n   receiveMessage(event) {\n      let data\n      try {\n         data = JSON.parse(event.data)\n      } catch (e) {\n         // Silently dying.\n         return\n      }\n      const action = data['action'] || ''\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\n         // Unknown action, skipping silently.\n         return\n      }\n      const request_id = data['request_id'] || ''\n\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\n\n      this.processTransactionMessage(action, data)\n         .then(result => {\n            console.log('Wallet: OK ' + action)\n            reply({\n               success: true,\n               request_id,\n               result\n            })\n         })\n         .catch(error => {\n            console.error('Wallet: failed to ' + action, error)\n            reply({\n               success: false,\n               request_id,\n               error\n            })\n         })\n   }\n}\n","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","import { parse, stringify } from 'query-string'\nimport { createActions } from 'redux-actions';\nimport { Wallet } from '../utils/wallet';\n\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\nexport const REFRESH_URL = 'REFRESH_URL'\n\nexport function handleRefreshAccount(wallet, history) {\n   return (dispatch, getState) => {\n      wallet.redirectIfEmpty(history)\n      const accountId = wallet.getAccountId()\n\n      dispatch({\n         type: LOADER_ACCOUNT,\n         loader: true\n      })\n\n      wallet\n         .loadAccount(accountId, history)\n         .then(v => {\n            dispatch({\n               type: REFRESH_ACCOUNT,\n               data: {\n                  accountId: accountId,\n                  authToken: wallet.newAccessToken(\n                     getState().account.url.app_title,\n                     getState().account.url.app_url,\n                     getState().account.url.contract_id\n                  ),\n                  amount: v['amount'] || 0,\n                  stake: v['stake'],\n                  nonce: v['nonce'],\n                  code_hash: v['code_hash'],\n                  accounts: wallet.accounts\n               }\n            })\n\n            dispatch({\n               type: LOADER_ACCOUNT,\n               loader: false\n            })\n         })\n         .catch(e => {\n            console.log(e)\n\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\n               wallet.clearState()\n               wallet.redirectToCreateAccount(\n                  {\n                     reset_accounts: true\n                  },\n                  history\n               )\n            }\n         })\n   }\n}\n\nexport function handleRefreshUrl(location) {\n   return dispatch => {\n      dispatch({\n         type: REFRESH_URL,\n         url: {\n            app_title: parse(location.search).title || '',\n            app_url: parse(location.search).app_url || '',\n            contract_id: parse(location.search).contract_id || '',\n            success_url: parse(location.search).success_url || '',\n            failure_url: parse(location.search).failure_url || '',\n            public_key: parse(location.search).public_key || ''\n         }\n      })\n   }\n}\n\nconst wallet = new Wallet()\n\nexport const redirectToApp = () => (dispatch, getState) => {\n   const state = getState()\n   const nextUrl = (state.account.url && state.account.url.success_url) ? `/login/?${stringify(state.account.url)}` : '/'\n   setTimeout(() => {\n      window.location = nextUrl\n   }, 1500)\n}\n\nexport const { requestCode, setupAccountRecovery, recoverAccount } = createActions({\n   REQUEST_CODE: [\n      wallet.requestCode.bind(wallet),\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\n   ],\n   SETUP_ACCOUNT_RECOVERY: [\n      wallet.setupAccountRecovery.bind(wallet),\n      () => ({ successCode: 'account.setupAccountRecovery.success', errorCode: 'account.setupAccountRecovery.error' })\n   ],\n   RECOVER_ACCOUNT: [\n      wallet.recoverAccount.bind(wallet),\n      () => ({ successCode: 'account.recoverAccount.success', errorCode: 'account.recoverAccount.error' })\n   ]\n})\n\n\n\n\n","import { handleActions, combineActions } from 'redux-actions'\nimport {\n   REFRESH_ACCOUNT,\n   LOADER_ACCOUNT,\n   REFRESH_URL,\n   requestCode,\n   setupAccountRecovery,\n   recoverAccount\n} from '../actions/account'\nimport reduceReducers from 'reduce-reducers';\n\nconst initialState = {\n   formLoader: false,\n   sentSms: false\n}\n\nconst loaderReducer = (state, { ready }) => {\n   if (typeof ready === 'undefined') {\n      return state\n   }\n   return { ...state, formLoader: !ready }\n}\n\nconst requestResultReducer = handleActions({\n   // TODO: Reset state before action somehow. On navigate / start of other action?\n   // TODO: Make this generic to avoid listing actions\n   [combineActions(requestCode, setupAccountRecovery, recoverAccount)]: (state, { error, payload, meta }) => ({\n      ...state,\n      requestStatus: !!payload || error ? {\n         success: !error,\n         errorMessage: (error && payload && payload.toString()) || undefined,\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \n      } : undefined\n   })\n}, initialState)\n\nconst reducer = handleActions({\n   [requestCode]: (state, { error, ready }) => {\n      if (ready && !error) {\n         return { ...state, sentSms: true }\n      }\n      return state\n   },\n}, initialState)\n\n// TODO: Migrate everything to redux-actions\nfunction account(state = {}, action) {\n   switch (action.type) {\n      case REFRESH_ACCOUNT:\n         return {\n            ...state,\n            ...action.data\n         }\n      case LOADER_ACCOUNT: {\n         return {\n            ...state,\n            loader: action.loader\n         }\n      }\n      case REFRESH_URL: {\n         return {\n            ...state,\n            url: action.url\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default reduceReducers(\n   initialState,\n   loaderReducer,\n   requestResultReducer,\n   reducer,\n   account)\n\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n/**\n * Lets you dispatch special actions with a { promise } field.\n *\n * This middleware will turn them into a single action at the beginning,\n * and a single success (or failure) action when the `promise` resolves.\n *\n * For convenience, `dispatch` will return the promise so the caller can wait.\n */\nconst readyStatePromise = store => next => action => {\n  if (!action.payload || !action.payload.then) {\n    return next(action)\n  }\n\n  function makeAction(ready, data) {\n    const newAction = Object.assign({}, action)\n    delete newAction.payload\n    return Object.assign(newAction, { ready }, data)\n  }\n\n  next(makeAction(false))\n  return action.payload.then(\n    payload => next(makeAction(true, { payload })),\n    error => {\n      console.warn('Error in background action:', error)\n      return next(makeAction(true, { error: true, payload: error }))\n    }\n  )\n}\n\nexport default (history) => composeEnhancers(\n    applyMiddleware(\n        routerMiddleware(history),\n        thunk,\n        readyStatePromise))\n","import React from 'react'\n\nimport { Image, Loader } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\n\nimport styled from 'styled-components'\n\nconst CustomDiv = styled('div')`\n   overflow: hidden;\n   width: 100%;\n   cursor: pointer;\n   font-family: 'benton-sans', sans-serif;\n   font-weight: 600;\n   > div {\n      .account-img {\n         width: 36px;\n         height: 36px;\n         background: #4a4f54;\n         padding-right: 0px;\n         padding-left: 6px;\n         border-radius: 18px;\n         margin-top: 16px;\n         margin-right: 10px;\n         > img {\n            width: 24px;\n            height: 24px;\n            margin-top: 5px;\n         }\n      }\n      .overflow {\n         overflow: hidden;\n      }\n      .account-arrow {\n         float: right;\n         padding-right: 14px;\n         padding-left: 14px;\n         padding-top: 24px;\n         img {\n            width: 20px;\n         }\n         &.desktop {\n            padding-top: 32px;\n            padding-right: 26px;\n            img {\n               width: 12px;\n            }\n         }\n      }\n      .account-tokens {\n         float: right;\n         line-height: 29px;\n         font-size: 14px;\n         color: #fff;\n         margin: 21px 0 0 10px;\n         height: 28px;\n         background: #111314;\n         border-radius: 14px;\n         padding: 0 10px;\n         letter-spacing: normal;\n         max-width: 140px;\n         :hover {\n            color: #fff;\n         }\n         > div {\n            display: flex;\n            > div {\n               text-overflow: ellipsis;\n               overflow: hidden;\n\n               &.near {\n                  text-overflow: initial;\n               }\n            }\n         }\n         .near {\n            font-size: 18px;\n            padding-left: 4px;\n            font-weight: 500;\n         }\n      }\n      .account-name {\n         overflow: hidden;\n         padding-right: 0px;\n         text-align: right;\n         padding-left: 0px;\n         line-height: 72px;\n         > div {\n            font-size: 14px;\n            letter-spacing: normal;\n            padding-left: 0px;\n            padding-right: 0px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n            color: #fff;\n            :hover {\n               color: #fff;\n            }\n         }\n      }\n   }\n`\n\nconst PopupMenuTrigger = ({ account, handleClick, type, dropdown = false }) => (\n   <CustomDiv onClick={handleClick}>\n      <div>\n         {type === 'desktop' && (\n            <div className='account-img' style={{ float: 'left' }}>\n               <Image src={AccountGreyImage} />\n            </div>\n         )}\n         <div className={`account-arrow ${type}`}>\n            {type === 'mobile' && (\n               <Image src={dropdown ? MobileMenuImage : CloseImage} />\n            )}\n            {type === 'desktop' && <Image src={ArrowDownImage} />}\n         </div>\n         <div className='overflow'>\n            <div className='account-tokens'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  <div>\n                     <div>{account.amount} </div>\n                     <div className='near'>Ⓝ</div>\n                  </div>\n               )}\n            </div>\n            <div className='account-name'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  <div>@{account.accountId}</div>\n               )}\n            </div>\n         </div>\n      </div>\n   </CustomDiv>\n)\n\nexport default PopupMenuTrigger\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter, Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport {\n   Image,\n   Menu,\n   Responsive,\n   Segment,\n   List,\n   Button\n} from 'semantic-ui-react'\n\nimport PopupMenuTrigger from './PopupMenuTrigger'\n\nimport SendImage from '../../images/icon-send.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\nimport LogoImage from '../../images/wallet.png'\nimport AccountGreyImage from '../../images/icon-account.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   &&& {\n      padding-bottom: 240px;\n      .navbar {\n         padding: 0px;\n         &-main {\n            background-color: #24272a;\n            height: 72px;\n            border-radius: 0;\n            margin-bottom: 0;\n            .mainlogo {\n               float: left;\n               padding: 4px 10px 0px 0px;\n               div {\n                  width: 50px;\n                  overflow: hidden;\n                  > img.image {\n                     width: 160px;\n                     max-width: none;\n                  }\n               }\n            }\n            .trigger {\n               width: 100%;\n               overflow: hidden;\n            }\n         }\n         &-sub {\n            margin: 0px;\n            padding: 0px;\n            background-color: #24272a;\n            &.hide {\n               display: none;\n            }\n            .main {\n               font-family: 'benton-sans', sans-serif;\n               font-weight: 400;\n               font-size: 14px;\n               padding: 18px 6px;\n               margin: 0 1rem;\n               border-top: 1px solid #4a4f54;\n               &.border {\n                  border-bottom: 1px solid #4a4f54;\n               }\n               a {\n                  color: #fff;\n                  letter-spacing: 2px;\n               }\n               img {\n                  margin-top: -4px;\n                  width: 24px;\n                  margin-right: 20px;\n                  display: inline-block !important;\n               }\n            }\n            .sub {\n               padding: 10px 1rem 0 1rem;\n               .item {\n                  font-family: 'benton-sans', sans-serif;\n                  font-weight: 400;\n                  font-size: 14px;\n                  padding: 8px 9px;\n                  a {\n                     color: #8fd6bd;\n                     letter-spacing: 2px;\n                  }\n                  img {\n                     margin-top: -2px;\n                     width: 18px;\n                     margin-right: 22px;\n                     display: inline-block !important;\n                  }\n               }\n            }\n            .switch-account {\n               background: #000;\n               padding: 0 1rem;\n               padding: 20px;\n               .item {\n                  padding: 0 10px;\n               }\n               h6.item {\n                  padding-bottom: 10px;\n                  border: 0px;\n               }\n               .account-title {\n                  height: 40px;\n                  line-height: 40px;\n                  color: #fff;\n                  font-weight: 500;\n                  border-bottom: 1px solid #323434;\n                  letter-spacing: normal;\n                  text-overflow: ellipsis;\n                  overflow: hidden;\n               }\n               button {\n                  width: 100%;\n                  border-radius: 30px;\n                  background: #24272a;\n                  color: #6ad1e3;\n                  :hover {\n                     background: #fff;\n                     color: #6ad1e3;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      dropdown: true\n   }\n\n   handleDropdown = () =>\n      this.setState(state => ({\n         dropdown: !state.dropdown\n      }))\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n      this.handleDropdown()\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.handleDropdown()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { dropdown } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            maxWidth={Responsive.onlyTablet.maxWidth}\n         >\n            <Segment basic className='navbar'>\n               <Menu className='navbar-main' borderless>\n                  <div className='mainlogo'>\n                     <Link to='/'>\n                        <div>\n                           <Image src={LogoImage} />\n                        </div>\n                     </Link>\n                  </div>\n\n                  {account.accountId && (\n                     <div className='trigger'>\n                        <PopupMenuTrigger\n                           account={account}\n                           handleClick={this.handleDropdown}\n                           type='mobile'\n                           dropdown={dropdown}\n                        />\n                     </div>\n                  )}\n               </Menu>\n               <Segment\n                  basic\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\n               >\n                  <Menu.Menu>\n                     <Menu.Item className='main'>\n                        <Link to='/' onClick={this.handleDropdown}>\n                           <Image src={RecentImage} />\n                           SUMMARY\n                        </Link>\n                     </Menu.Item>\n                     {false ? (\n                        <Menu.Item className='main'>\n                           <Link to='/activity' onClick={this.handleDropdown}>\n                              <Image src={ActivityImage} />\n                              ACTIVITY\n                           </Link>\n                        </Menu.Item>\n                     ) : null}\n                     <Menu.Item className='main border'>\n                        <Link to='/send-money' onClick={this.handleDropdown}>\n                           <Image src={SendImage} />\n                           SEND MONEY\n                        </Link>\n                     </Menu.Item>\n\n                     <Menu.Menu className='sub'>\n                        <Menu.Item>\n                           <Link to='/profile' onClick={this.handleDropdown}>\n                              <Image src={AccountGreyImage} />\n                              Profile\n                           </Link>\n                        </Menu.Item>\n                        {false ? (\n                           <Menu.Item>\n                              <Link\n                                 to='/contacts'\n                                 onClick={this.handleDropdown}\n                              >\n                                 <Image src={ContactsGreyImage} />\n                                 Contacts\n                              </Link>\n                           </Menu.Item>\n                        ) : null}\n                        {false ? (\n                           <Menu.Item>\n                              <Link\n                                 to='/authorized-apps'\n                                 onClick={this.handleDropdown}\n                              >\n                                 <Image src={AuthorizedGreyImage} />\n                                 Authorized Apps\n                              </Link>\n                           </Menu.Item>\n                        ) : null}\n                        {false ? (\n                           <Menu.Item>\n                              <Link to='/' onClick={this.handleDropdown}>\n                                 <Image src={LogoutImage} />\n                                 Logout\n                              </Link>\n                           </Menu.Item>\n                        ) : null}\n                     </Menu.Menu>\n                     <Segment basic className='switch-account'>\n                        <List>\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n\n                           {account.accounts &&\n                              Object.keys(account.accounts)\n                                 .filter(a => a !== account.accountId)\n                                 .map((account, i) => (\n                                    <List.Item\n                                       as='a'\n                                       key={`mf-${i}`}\n                                       onClick={() =>\n                                          this.handleSelectAccount(account)\n                                       }\n                                       className='account-title'\n                                    >\n                                       @{account}\n                                    </List.Item>\n                                 ))}\n                        </List>\n                        <Button onClick={this.redirectCreateAccount}>\n                           CREATE NEW ACCOUNT\n                        </Button>\n                     </Segment>\n                  </Menu.Menu>\n               </Segment>\n            </Segment>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(MobileView))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Image, Segment, List, Button, Popup } from 'semantic-ui-react'\n\nimport PopupMenuTrigger from './PopupMenuTrigger'\n\nimport AccountImage from '../../images/icon-account.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\n\nimport styled from 'styled-components'\n\nconst CustomPopup = styled(Popup)`\n   &&& {\n      padding: 0px;\n      right: 12px !important;\n      top: 50px !important;\n      position: fixed !important;\n\n      .account-dropdown {\n         width: 290px;\n         min-height: 100px;\n         background-color: #f8f8f8;\n\n         padding: 20px;\n\n         .item {\n            color: #999999;\n         }\n\n         .submenu {\n            margin: -20px;\n            padding: 20px;\n            background: #fff;\n\n            .icon {\n               width: 20px;\n            }\n            .content {\n               line-height: 26px;\n               padding-left: 10px;\n            }\n            .item {\n               margin: 4px 0;\n            }\n         }\n\n         .switch-account {\n            margin-top: 40px;\n            margin-bottom: 0px;\n         }\n\n         &-scroll {\n            max-height: 226px;\n            overflow-y: auto;\n            width: 270px;\n            margin-top: 0px;\n\n            > .item {\n               width: 250px;\n               margin: 0px;\n               padding: 0px;\n\n               :hover {\n                  text-decoration: underline;\n               }\n               ::before {\n                  display: none;\n               }\n               ::after {\n                  display: none;\n               }\n            }\n         }\n\n         h6 {\n            padding-bottom: 6px;\n         }\n         .account-title {\n            height: 40px;\n            line-height: 40px;\n            color: #4a4f54;\n            font-weight: 500;\n            border-bottom: 2px solid #e6e6e6;\n            letter-spacing: normal;\n\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         button {\n            width: 100%;\n            border-radius: 30px;\n            background: #fff;\n            color: #6ad1e3;\n\n            :hover {\n               background: #6ad1e3;\n               color: #fff;\n            }\n         }\n      }\n\n      :hover {\n         .account-dropdown {\n            display: block;\n         }\n      }\n   }\n`\n\nconst DesktopPopup = ({\n   account,\n   handleSelectAccount,\n   redirectCreateAccount,\n   handleToggle,\n   popupOpen\n}) => (\n   <CustomPopup\n      trigger={\n         <PopupMenuTrigger\n            account={account}\n            handleClick={handleToggle}\n            type='desktop'\n         />\n      }\n      position='right center'\n      open={popupOpen}\n   >\n      <Segment basic className='account-dropdown'>\n         <List className='submenu'>\n            <List.Item>\n               <List.Icon as={Image} src={AccountImage} />\n               <List.Content as={Link} to='/profile' onClick={handleToggle}>\n                  Profile\n               </List.Content>\n            </List.Item>\n            {false ? (\n               <List.Item>\n                  <List.Icon as={Image} src={ContactsGreyImage} />\n                  <List.Content as={Link} to='/contacts' onClick={handleToggle}>\n                     Contacts\n                  </List.Content>\n               </List.Item>\n            ) : null}\n            {false ? (\n               <List.Item>\n                  <List.Icon as={Image} src={AuthorizedGreyImage} />\n                  <List.Content\n                     as={Link}\n                     to='authorized-apps'\n                     onClick={handleToggle}\n                  >\n                     Authorized Apps\n                  </List.Content>\n               </List.Item>\n            ) : null}\n            {false ? (\n               <List.Item>\n                  <List.Icon as={Image} src={LogoutImage} />\n                  <List.Content as={Link} to='/logout' onClick={handleToggle}>\n                     Logout\n                  </List.Content>\n               </List.Item>\n            ) : null}\n         </List>\n         <List className='switch-account'>\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n         </List>\n         <List className='account-dropdown-scroll'>\n            {account.accounts &&\n               Object.keys(account.accounts)\n                  .filter(a => a !== account.accountId)\n                  .map((account, i) => (\n                     <List.Item\n                        as='a'\n                        key={`mf-${i}`}\n                        onClick={() => handleSelectAccount(account)}\n                        className='account-title'\n                     >\n                        @{account}\n                     </List.Item>\n                  ))}\n         </List>\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\n      </Segment>\n   </CustomPopup>\n)\n\nexport default DesktopPopup\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport DesktopPopup from './DesktopPopup'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { Image, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nimport LogoImage from '../../images/wallet.png'\nimport HelpImage from '../../images/icon-help.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   padding-bottom: 180px;\n   .spacer {\n      height: 72px;\n   }\n   &&& .navbar {\n      width: 100%;\n      background-color: #24272a;\n      height: 72px;\n      border-radius: 0;\n      position: fixed;\n      top: 0px;\n      .left {\n         float: left;\n      }\n      .right {\n         float: right;\n      }\n      .overflow {\n         overflow: hidden;\n      }\n      .devider {\n         float: left;\n         width: 2px;\n         height: 40px;\n         background: #5d5f60;\n         padding: 0px;\n         margin: 16px 28px 0 0;\n      }\n      .help {\n         float: left;\n         margin-top: 22px;\n         margin-right: 28px;\n      }\n      &-icon {\n         height: 24px;\n         display: inline-block;\n      }\n      .mainlogo {\n         float: left;\n         padding-right: 6px;\n         img {\n            height: 72px;\n         }\n      }\n      .item {\n         float: left;\n         color: white;\n         font-family: 'benton-sans', sans-serif;\n         font-weight: 600;\n         font-size: 14px;\n         padding-left: 0px;\n         padding-right: 30px;\n         letter-spacing: 2px;\n         line-height: 72px;\n         img {\n            margin-right: 10px;\n         }\n         a {\n            color: #fff;\n         }\n         a:hover {\n            color: #6ad1e3;\n            text-decoration: none;\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      activeItem: 'home',\n      popupOpen: false\n   }\n\n   hideFixedMenu = () => this.setState({ fixed: false })\n\n   showFixedMenu = () => this.setState({ fixed: true })\n\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n      this.setState(() => ({\n         popupOpen: false\n      }))\n   }\n\n   handleToggle = () =>\n      this.setState(state => ({\n         popupOpen: !state.popupOpen\n      }))\n\n   render() {\n      const { popupOpen } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            minWidth={Responsive.onlyComputer.minWidth}\n         >\n            <Visibility\n               once={false}\n               onBottomPassed={this.showFixedMenu}\n               onBottomPassedReverse={this.hideFixedMenu}\n            >\n               <Segment className='spacer' basic />\n               <div className='navbar'>\n                  <div className='left'>\n                     <div>\n                        <div className='mainlogo'>\n                           <Link to='/'>\n                              <Image src={LogoImage} />\n                           </Link>\n                        </div>\n                        <div className='item'>\n                           <Link to='/'>\n                              <Image\n                                 className='navbar-icon'\n                                 src={RecentImage}\n                              />\n                              SUMMARY\n                           </Link>\n                        </div>\n                        {false ? (\n                           <div className='item'>\n                              <Link to='/'>\n                                 <Image\n                                    className='navbar-icon'\n                                    src={ActivityImage}\n                                 />\n                                 ACTIVITY\n                              </Link>\n                           </div>\n                        ) : null}\n                        <div className='item'>\n                           <Link to='/send-money'>\n                              <Image className='navbar-icon' src={SendImage} />\n                              SEND MONEY\n                           </Link>\n                        </div>\n                     </div>\n                  </div>\n                  <div className='overflow'>\n                     {account.accountId && (\n                        <div className='right'>\n                           <div className='help'>\n                              <a href='http://near.chat/'>\n                                 <Image\n                                    className='navbar-icon'\n                                    src={HelpImage}\n                                 />\n                              </a>\n                           </div>\n                           <div className='devider' />\n                           <div className='overflow'>\n                              <DesktopPopup\n                                 account={account}\n                                 handleSelectAccount={this.handleSelectAccount}\n                                 redirectCreateAccount={\n                                    this.redirectCreateAccount\n                                 }\n                                 handleToggle={this.handleToggle}\n                                 popupOpen={popupOpen}\n                              />\n                           </div>\n                        </div>\n                     )}\n                  </div>\n               </div>\n            </Visibility>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DesktopView))\n","import React, { Fragment } from 'react'\n\nimport MobileView from './MobileView'\nimport DesktopView from './DesktopView'\n\nconst ResponsiveContainer = ({ children }) => (\n   <Fragment>\n      <DesktopView>{children}</DesktopView>\n      <MobileView>{children}</MobileView>\n   </Fragment>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\n\nimport LogoFooterImage from '../../images/near.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nimport styled from 'styled-components'\n\nconst FooterGrid = styled(Grid)`\n   &&&& {\n      position: absolute;\n      bottom: 0px;\n      width: 100%;\n\n      background-color: #f8f8f8;\n\n      font-size: 12px;\n      font-weight: 300;\n      color: #999999;\n\n      margin-bottom: 0px;\n      margin-left: 0px;\n\n      .near-logo {\n         .content {\n            a {\n               font-size: 12px;\n               font-weight: 300;\n               color: #999999;\n               text-decoration: underline;\n\n               :hover {\n                  text-decoration: none;\n               }\n            }\n            .color-brown-grey {\n               color: #e6e6e6;\n               padding: 0 6px;\n            }\n         }\n         .image {\n            width: 140px;\n            padding-left: 14px;\n\n            img {\n            }\n         }\n      }\n\n      .learn-more {\n         padding: 0 40px 0 0;\n         color: #24272a;\n      }\n\n      .help {\n         padding-right: 0px;\n         padding-top: 10px;\n         padding-bottom: 10px;\n\n         > .list {\n            width: 230px;\n            height: 80px;\n            padding: 20px 0;\n            background: #fff;\n            text-align: left;\n\n            > img {\n               width: 80px;\n               position: absolute;\n               bottom: 0px;\n               right: 200px;\n            }\n\n            > h3 {\n               font-weight: 600 !important;\n               padding: 0 0 0 40px;\n               color: #999999 !important;\n\n               &.color {\n                  color: #0072ce !important;\n               }\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         height: 180px;\n\n         .near-logo {\n            .item {\n            }\n            .content {\n               text-align: center;\n            }\n         }\n      }\n   }\n`\n\nconst ResponsiveContainer = () => (\n   <FooterGrid columns={2}>\n      <Grid.Column\n         textAlign='left'\n         verticalAlign='middle'\n         widescreen={4}\n         largeScreen={6}\n         computer={7}\n         tablet={10}\n         mobile={16}\n      >\n         <Item.Group className='near-logo'>\n            <Item>\n               <Item.Image src={LogoFooterImage} />\n               <Item.Content>\n                  © 2019 NEAR Inc. All Rights Reserved.\n                  <br />\n                  <a href='/'>Terms of Service</a>\n                  <span className='color-brown-grey'>|</span>\n                  <a href='/'>Privacy Policy</a>\n               </Item.Content>\n            </Item>\n         </Item.Group>\n      </Grid.Column>\n      <Grid.Column\n         only='computer'\n         computer={5}\n         className='learn-more'\n         verticalAlign='middle'\n      >\n         NEAR is a scalable computing and storage platform that changes how the\n         web works for better.{' '}\n         <a href='https://nearprotocol.com/'>Learn More</a>\n      </Grid.Column>\n      <Grid.Column\n         only='tablet computer'\n         widescreen={7}\n         largeScreen={5}\n         computer={4}\n         tablet={6}\n         textAlign='right'\n         className='help'\n      >\n         <List floated='right'>\n            <List.Item as='h3'>Need Help?</List.Item>\n            <List.Item as='h3' className='color'>\n               <a href='https://discordapp.com/invite/gBtUFKR'>\n                  Contact Support\n               </a>\n            </List.Item>\n            <Image className='nearkat' src={NearkatImage} />\n         </List>\n      </Grid.Column>\n   </FooterGrid>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\n\nimport TContractImage from '../../images/icon-t-contract.svg'\n\nimport { Grid, List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&&& {\n      margin-top: 0px;\n\n      .other-assets {\n         background: #f8f8f8;\n         border-top: 2px solid #e6e6e6;\n         border-bottom: 4px solid #e6e6e6;\n         padding: 0px;\n\n         .column {\n            border-right: 2px solid #e6e6e6;\n            padding: 10px 0px 10px 18px;\n\n            :last-of-type {\n               border: 0px;\n            }\n\n            .content {\n               width: auto;\n            }\n\n            .icon {\n               background-image: url(${TContractImage});\n               background-repeat: no-repeat;\n               background-position: center top;\n               background-size: 24px 24px;\n               width: 24px;\n               height: 38px;\n               margin: 0 6px 0 0;\n            }\n\n            h5 {\n               font-weight: 600;\n               line-height: 16px;\n            }\n         }\n      }\n   }\n\n   && .other-assets-title {\n      padding-bottom: 6px;\n      color: #24272a;\n      font-weight: 600;\n   }\n\n   @media screen and (max-width: 991px) {\n      &&&& .other-assets {\n         .column {\n            .content {\n               h2 {\n                  font-size: 16px !important;\n               }\n            }\n            .icon {\n               background-size: 18px 24px;\n               width: 18px;\n               margin: 8px 6px 0 0;\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&&& .other-assets {\n         background: #fff;\n         margin-top: 18px !important;\n         border-right: 0px;\n\n         > .column {\n            width: 100% !important;\n            border-right: 0px;\n            border-bottom: 2px solid #f8f8f8;\n            padding: 6px 0px 6px 4px;\n\n            .list {\n               width: 100%;\n\n               .item {\n                  width: 100%;\n\n                  .content {\n                     float: right;\n                     text-align: right;\n\n                     h2 {\n                        font-size: 14px !important;\n                     }\n                  }\n                  .icon {\n                     height: 20px;\n                  }\n               }\n            }\n         }\n\n         &-title {\n            display: none;\n         }\n      }\n   }\n`\n\nconst DashboardOtherAssets = () => (\n   <CustomGrid>\n      <Grid.Row className='other-assets-title' as='h6'>\n         OTHER ASSETS\n      </Grid.Row>\n      <Grid.Row columns={6} className='other-assets'>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        12.125\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ETH\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        3.2501\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XRP\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        8.0987\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZEC\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        13.258\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        BNB\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        2.5897\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XMR\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        1.2589\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZIL\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardOtherAssets\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport DashboardOtherAssets from './DashboardOtherAssets'\n\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\n\nimport { Container, Grid, Button } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         text-align: right;\n      }\n   }\n   .near {\n      font-size: 48px;\n      color: #24272a;\n   }\n   &&& .send-money {\n      margin: 0 0 0 0;\n      > .button {\n         width: 100%;\n         line-height: 60px;\n         border-radius: 30px;\n         border: solid 2px #5ace84;\n         font-size: 18px;\n         font-weight: 600;\n         letter-spacing: 2px;\n         color: #5ace84;\n         background: #fff;\n         text-align: left;\n         padding: 0 0 0 40px;\n         background-image: url(${ArrowGrnImage});\n         background-repeat: no-repeat;\n         background-position: 90% center;\n         background-size: 14px 20px;\n         :hover {\n            background-color: #5ace84;\n            color: #fff;\n            background-image: url(${ArrowRightImage});\n         }\n      }\n   }\n   &&& {\n      .right-section {\n         padding-left: 40px;\n      }\n   }\n   @media screen and (max-width: 991px) {\n      > .grid {\n         margin-left: 0px;\n         margin-right: 0px;\n      }\n      &&& .send-money {\n         margin-top: 20px;\n         margin-top: 0px;\n      }\n      &&& .page-title {\n         text-align: center;\n         .column {\n            padding: 0 0 12px 0;\n         }\n         .balance {\n            display: none;\n         }\n         .button {\n            width: 240px;\n            line-height: 44px;\n         }\n      }\n   }\n   @media screen and (max-width: 767px) {\n      > .grid {\n         margin-left: 0px;\n         margin-right: 0px;\n      }\n      &&& .send-money {\n         margin-top: 20px;\n         margin-top: 0px;\n      }\n      &&& .page-title {\n         padding-top: 24px;\n         text-align: center;\n         .column {\n            padding: 0 0 12px 0;\n         }\n         .balance {\n            display: none;\n         }\n         .button {\n            width: 240px;\n            line-height: 44px;\n         }\n      }\n   }\n`\n\nconst DashboardContainer = ({ children, account }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column\n               as='h1'\n               computer={12}\n               tablet={16}\n               mobile={16}\n               verticalAlign='middle'\n            >\n               <span className='balance'>Balance: </span>\n               <span className='color-black'>{account.amount}</span>\n               <span className='near'>Ⓝ</span>\n            </Grid.Column>\n            <Grid.Column\n               computer={4}\n               tablet={16}\n               mobile={16}\n               className='send-money'\n            >\n               <Button as={Link} to='/send-money'>\n                  SEND MONEY\n               </Button>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {false ? <DashboardOtherAssets /> : null}\n      {children}\n   </CustomContainer>\n)\n\nexport default DashboardContainer\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport CloseImage from '../../images/icon-close.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      padding: 20px;\n      margin: 12px 0 12px 0;\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n\n      @media screen and (max-width: 767px) {\n      }\n   }\n`\n\nconst DashboardNotice = ({ handleNotice }) => (\n   <CustomList horizontal className='box'>\n      <List.Item className='text'>\n         <List.Header>Here’s a Notice of some sort</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\n            a finibus.{` `}\n            <a href='/'>Call to Action</a>\n         </List.Content>\n      </List.Item>\n      <List.Item className='img'>\n         <Image onClick={handleNotice} src={CloseImage} />\n      </List.Item>\n   </CustomList>\n)\n\nexport default DashboardNotice\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Grid, Image } from 'semantic-ui-react'\n\nimport ArrowRight from '../../images/icon-arrow-right.svg'\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGridRow = styled(Grid.Row)`\n   &&& {\n      margin-left: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .col-image {\n         margin-left: -33px;\n         width: 40px;\n         flex: 0 0 40px;\n         padding-left: 0px;\n\n         .main-image {\n            border: 1px solid #e6e6e6;\n            background: #fff;\n            border-radius: 14px;\n            padding: 5px;\n            width: 26px;\n            height: 26px;\n            margin: 0 24px 0 18px;\n            overflow: hidden;\n\n            img {\n               margin: 0 0 0 0;\n            }\n         }\n      }\n\n      &.wide {\n         margin-left: 0px;\n         border-left: 0px;\n\n         .col-image {\n            margin-left: 6px;\n            width: 56px;\n            flex: 0 0 56px;\n         }\n\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 24px 0 0;\n\n            img {\n               padding-top: 10px;\n            }\n         }\n      }\n\n      .main-row-title {\n         font-weight: 600;\n         width: auto;\n         padding-right: 0px;\n         flex: 1;\n      }\n\n      .dropdown-image-right {\n         width: 10px;\n         margin: 0 0 0 0;\n         cursor: pointer;\n      }\n      .dropdown-image {\n         float: right;\n      }\n\n      &.dropdown-down {\n         background-color: #f8f8f8;\n\n         .dropdown-image-right {\n            width: 10px;\n            top: 0px;\n            left: 12px;\n            cursor: pointer;\n         }\n      }\n\n      &.showsub {\n         .dropdown-image-right {\n            left: -24px;\n         }\n      }\n      &.showsub.dropdown-down {\n         .dropdown-image-right {\n            left: -6px;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &.showsub {\n            .dropdown-image-right {\n               left: -14px;\n            }\n         }\n         &.showsub.dropdown-down {\n            .dropdown-image-right {\n               left: 4px;\n            }\n         }\n\n         .main-row-title {\n            a {\n               font-size: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst ListItem = ({\n   row,\n   i,\n   wide = false,\n   showSub = false,\n   toggleShowSub,\n   showSubOpen\n}) => (\n   <CustomGridRow\n      verticalAlign='middle'\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\n         showSub && showSubOpen === i ? `dropdown-down` : ``\n      } ${showSub ? `showsub` : ``}`}\n   >\n      <Grid.Column computer={8} tablet={wide ? 14 : 8} mobile={wide ? 14 : 10}>\n         <Grid verticalAlign='middle'>\n            <Grid.Column className='col-image'>\n               <div className='main-image'>\n                  <Image src={row[0]} align='left' />\n               </div>\n            </Grid.Column>\n            <Grid.Column className='main-row-title'>\n               <Link to='/' className='color-black'>\n                  {row[1]}\n               </Link>\n               {row[2] && (\n                  <span className='font-small'>\n                     <br />\n                     <Link to='/'>{row[2]}</Link>\n                  </span>\n               )}\n            </Grid.Column>\n         </Grid>\n      </Grid.Column>\n      <Grid.Column\n         computer={8}\n         tablet={wide ? 2 : 8}\n         mobile={wide ? 2 : 6}\n         textAlign='right'\n      >\n         {wide ? (\n            <Image\n               onClick={() => toggleShowSub(i)}\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\n               className='dropdown-image dropdown-image-right'\n            />\n         ) : (\n            <span className='font-small'>{row[3]}</span>\n         )}\n      </Grid.Column>\n   </CustomGridRow>\n)\n\nexport default ListItem\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport ListItem from './ListItem'\n\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      margin-bottom: 20px;\n\n      .row:first-child {\n         padding-bottom: 0px;\n      }\n\n      .row:last-child {\n         padding: 14px 0 0 4px;\n         margin-left: 20px;\n         border-left: 4px solid #f8f8f8;\n      }\n\n      .dashboard-header {\n         padding: 14px 0 10px 0;\n      }\n\n      link.view-all,\n      button.view-all,\n      a.view-all {\n         background: #f8f8f8;\n         margin: 0;\n         padding: 10px 20px;\n         color: #0072ce;\n         font-weight: 600;\n         border-radius: 20px;\n         border: 2px solid #f8f8f8;\n\n         :hover {\n            background: #fff;\n         }\n      }\n\n      .column-icon {\n         width: 28px;\n         display: inline-block;\n         margin: -4px 10px 0 8px;\n      }\n   }\n`\n\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\n   <CustomGrid>\n      <Grid.Row>\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\n            <Header className='h2'>\n               <Image className='column-icon' src={image} />\n               {title}\n            </Header>\n         </Grid.Column>\n      </Grid.Row>\n      <Dimmer inverted active={loader}>\n         <Loader />\n      </Dimmer>\n\n      {activity.map((row, i) => (\n         <ListItem key={`d-${i}`} row={row} />\n      ))}\n\n      <Grid.Row>\n         <Grid.Column textAlign='left' width={16}>\n            <Button as={Link} to={to} className='view-all'>\n               VIEW ALL\n            </Button>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardActivity\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport DashboardContainer from './DashboardContainer'\nimport DashboardSection from './DashboardSection'\nimport DashboardActivity from './DashboardActivity'\n\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\n\nimport TStakeImage from '../../images/icon-t-stake.svg'\nimport TTransferImage from '../../images/icon-t-transfer.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nclass DashboardDetail extends Component {\n   state = {\n      loader: false,\n      notice: true,\n      activity: [],\n      authorizedaps: [],\n      newcontacts: []\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [\n                  TTransferImage,\n                  'Sent: 125 Ⓝ  to @jake.near',\n                  'Some details about this activity here',\n                  '3 min ago'\n               ],\n               [\n                  TStakeImage,\n                  'You Staked 10 tokens',\n                  'Some details about this activity here',\n                  '20 min ago'\n               ],\n               [\n                  TTransferImage,\n                  'Sent: 125 Ⓝ  to @vlad.near',\n                  'Some details about this activity here',\n                  '1 hr ago'\n               ]\n            ],\n            authorizedaps: [\n               [NearkatImage, 'NEAR Place', '', '3 hrs ago'],\n               [NearkatImage, 'Cryptocats', '', '5 hrs ago'],\n               [NearkatImage, 'Knights App', '', '2 days ago']\n            ],\n            newcontacts: [\n               [AccountGreyImage, 'Alex Skidanov ', '', 'Connected 2 days ago'],\n               [AccountGreyImage, '@vlad.near', '', '2 days ago'],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  '',\n                  'Connected 2 days ago'\n               ]\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   handleNotice = () => {\n      this.setState(state => ({\n         notice: !state.notice\n      }))\n   }\n\n   render() {\n      const {\n         loader,\n         notice,\n         activity,\n         authorizedaps,\n         newcontacts\n      } = this.state\n\n      return (\n         <DashboardContainer account={this.props.account}>\n            { false ?\n            <DashboardSection notice={notice} handleNotice={this.handleNotice}>\n               <DashboardActivity\n                  loader={loader}\n                  image={activityGreyImage}\n                  title='Activity'\n                  to='/'\n                  activity={activity}\n               />\n               <DashboardActivity\n                  loader={loader}\n                  image={AuthorizedGreyImage}\n                  title='Authorized Apps'\n                  to='/authorized-apps'\n                  activity={authorizedaps}\n               />\n               <DashboardActivity\n                  loader={loader}\n                  image={ContactsGreyImage}\n                  title='New Contacts'\n                  to='/contacts'\n                  activity={newcontacts}\n               />\n            </DashboardSection>\n            : null }\n         </DashboardContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DashboardDetail))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, List, Responsive } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .username-row {\n         padding-bottom: 0px;\n         margin-left: -1rem;\n      }\n      .alert-info {\n         font-size: 18px;\n         font-weight: 600;\n         line-height: 64px;\n         margin: 0 0 0 0;\n         padding-left: 0px;\n         &.problem {\n            color: #ff585d;\n         }\n         &.success {\n            color: #6ad1e3;\n         }\n      }\n      .note-box {\n         padding-left: 30px;\n         .border-left-bold {\n            padding-bottom: 20px;\n         }\n      }\n      .note-info {\n         .title {\n            letter-spacing: 2px;\n            font-weight: 600;\n            line-height: 20px;\n            color: #4a4f54;\n         }\n      }\n      .form-row {\n         margin-left: -1rem;\n      }\n   }\n   @media screen and (max-width: 991px) {\n      &&& {\n         .note-box {\n            padding-left: 0px;\n         }\n      }\n   }\n   @media screen and (max-width: 767px) {\n      &&& {\n         .username-row {\n            margin-left: 0;\n         }\n         .alert-info {\n            padding: 0 0 6px 24px;\n            line-height: 34px;\n            font-size: 14px;\n            margin-top: -6px;\n         }\n         .note-box {\n            padding-left: 1rem;\n            margin-top: 10px;\n         }\n         .note-box {\n            .border-left-bold {\n               padding-bottom: 0px;\n            }\n         }\n         .form-row {\n            padding-top: 6px;\n            margin-left: 0;\n         }\n         &&& .note-info {\n            font-size: 12px;\n         }\n      }\n   }\n`\n\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\n   <CustomGrid>\n      <Grid.Row className='username-row'>\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\n            Choose a Username\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='form-row'>\n         <Grid.Column computer={9} tablet={8} mobile={16}>\n            {children}\n         </Grid.Column>\n         <Grid.Column computer={7} tablet={8} mobile={16}>\n            <Grid className='note-box'>\n               {successMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info success'>\n                        Congrats! this name is available.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n               {errorMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info problem'>\n                        Username is taken. Try something else.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n\n               <Grid.Row>\n                  <Grid.Column className='border-left-bold'>\n                     <List className='note-info'>\n                        <List.Item className='title'>NOTE</List.Item>\n                        <List.Item>\n                           Your username can be 5-32 characters\n                        </List.Item>\n                        <List.Item>\n                           long and contain any of the following:\n                        </List.Item>\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\n                        <List.Item>• Digits (0-9)</List.Item>\n                        <List.Item>• Special characters (@._-)</List.Item>\n                     </List>\n                  </Grid.Column>\n               </Grid.Row>\n            </Grid>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nCreateAccountSection.propTypes = {\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired\n}\n\nexport default CreateAccountSection\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst CustomFormInput = styled(Form.Input)`\n   &&&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background-color: #f8f8f8;\n      position: relative;\n      :focus {\n         border-color: #f8f8f8;\n         background-color: #fff;\n      }\n      :valid {\n         background-color: #fff;\n      }\n   }\n   &&&&& .spinner {\n      margin-right: 20px;\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n   &.problem > .input > input,\n   &.problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   &.success > .input > input,\n   &.success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n`\n\nconst CreateAccoungFormInput = ({\n   formLoader,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage\n}) => (\n   <CustomFormInput\n      loading={formLoader}\n      className={`create ${successMessage ? 'success' : ''}${\n         errorMessage ? 'problem' : ''\n      }`}\n      name='accountId'\n      value={accountId}\n      onChange={handleChangeAccountId}\n      placeholder='example: satoshi.near'\n      required\n   />\n)\n\nCreateAccoungFormInput.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   handleChangeAccountId: PropTypes.func.isRequired,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired\n}\n\nexport default CreateAccoungFormInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\n\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\n\nimport styled from 'styled-components'\n\nconst AccountForm = styled(Form)`\n   && button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      font-weight: 600;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .recover {\n      margin-top: 36px;\n      color: #24272a;\n      line-height: 24px;\n      font-weight: 600;\n\n      a {\n         text-decoration: underline;\n\n         :hover {\n            text-decoration: none;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n   }\n`\n\nconst CreateAccountForm = ({\n   formLoader,\n   accountId,\n   successMessage,\n   errorMessage,\n   handleSubmit,\n   handleChangeAccountId,\n   handleRecaptcha\n}) => (\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\n      <CreateAccoungFormInput\n         formLoader={formLoader}\n         accountId={accountId}\n         handleChangeAccountId={handleChangeAccountId}\n         successMessage={successMessage}\n         errorMessage={errorMessage}\n      />\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n         {successMessage && (\n            <Segment basic className='alert-info success'>\n               Congrats! this name is available.\n            </Segment>\n         )}\n         {errorMessage && (\n            <Segment basic className='alert-info problem'>\n               Username is taken. Try something else.\n            </Segment>\n         )}\n      </Responsive>\n      <ReCAPTCHA\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\n         onChange={handleRecaptcha}\n      />\n      <Button type='submit' disabled={!successMessage}>\n         CREATE ACCOUNT\n      </Button>\n\n      <div className='recover'>\n         <div>Already have an account?</div>\n         <Link to='/recover-account'>Recover it here</Link>\n      </div>\n   </AccountForm>\n)\n\nCreateAccountForm.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   handleSubmit: PropTypes.func.isRequired,\n   handleChangeAccountId: PropTypes.func.isRequired\n}\n\nexport default CreateAccountForm\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst DisclaimerGrid = styled(Grid)`\n   && .disclaimer {\n      margin-top: 100px;\n\n      > .column {\n         padding-left: 0px;\n         padding-right: 0px;\n      }\n   }\n   .disclaimer-info {\n      font-weight: 600;\n      letter-spacing: 2px;\n   }\n\n   @media screen and (max-width: 767px) {\n      && .disclaimer {\n         margin-top: 50px;\n         font-size: 12px;\n      }\n   }\n`\n\nconst Disclaimer = () => (\n   <DisclaimerGrid>\n      <Grid.Row className='disclaimer border-top-bold'>\n         <Grid.Column computer={16} tablet={16} mobile={16}>\n            <span className='disclaimer-info'>DISCLAIMER: </span>\n            This is a developers&apos; preview Wallet. It should be used for\n            NEAR Protocol DevNet only. Learn more at{' '}\n            <a href='http://nearprotocol.com'>nearprotocol.com</a>\n         </Grid.Column>\n      </Grid.Row>\n   </DisclaimerGrid>\n)\n\nexport default Disclaimer\n","import React from 'react'\n\nimport { Image, List } from 'semantic-ui-react'\n\nimport NearLogoImage from '../../images/near_logo.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   background: #f8f8f8;\n   width: 360px;\n   float: right;\n\n   img {\n      width: 160px;\n   }\n\n   .text {\n      margin: 0 16px 16px 64px;\n      line-height: 20px !important;\n      color: #24272a;\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         margin-top: 14px;\n         float: left;\n         width: 100%;\n      }\n   }\n`\n\nconst NearInfo = () => (\n   <CustomList className='box'>\n      <List.Item>\n         <Image src={NearLogoImage} />\n      </List.Item>\n      <List.Item className='text'>\n         NEAR is a scalable computing and storage platform that changes how the\n         web works for the better.{' '}\n         <a href='https://nearprotocol.com/'>Learn More</a>\n      </List.Item>\n   </CustomList>\n)\n\nexport default NearInfo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport { parse } from 'query-string'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      h2 {\n         color: #4a4f54 !important;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\nconst CreateAccountContainer = ({ loader, children, location }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={9} tablet={8} mobile={16}>\n               <Header as='h1'>Create Account</Header>\n               <Header as='h2'>\n                  Creating a NEAR account is easy. Just choose a username and\n                  you’re ready to go.\n               </Header>\n               {parse(location.search).reset_accounts && (\n                  <Header as='h3' className='color-blue'>\n                     You have been redirected to this page because we had to\n                     reset the developer accounts. Please create a new account.\n                     We apologize for the inconveience.\n                  </Header>\n               )}\n            </Grid.Column>\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nCreateAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default CreateAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport CreateAccountSection from './CreateAccountSection'\nimport CreateAccountForm from './CreateAccountForm'\nimport CreateAccountContainer from './CreateAccountContainer'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass CreateAccount extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet)\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkNewAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\n         return false\n      }\n\n      this.setState(() => ({\n         successMessage: false,\n         errorMessage: false,\n         formLoader: true\n      }))\n\n      this.wallet\n         .createNewAccount(this.state.accountId)\n         .then(d => {\n            this.setState(() => ({\n               successMessage: true\n            }))\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\n         })\n         .catch(e => {\n            this.setState(() => ({\n               errorMessage: true\n            }))\n            console.error('Error creating account:', e)\n         })\n         .finally(() => {\n            this.setState(() => ({\n               formLoader: false\n            }))\n         })\n   }\n\n   handleRecaptcha = value => {\n      console.log(value)\n   }\n\n   render() {\n      const { loader } = this.state\n\n      return (\n         <CreateAccountContainer loader={loader} location={this.props.location}>\n            <CreateAccountSection {...this.state}>\n               <CreateAccountForm\n                  {...this.state}\n                  handleSubmit={this.handleSubmit}\n                  handleRecaptcha={this.handleRecaptcha}\n                  handleChangeAccountId={this.handleChangeAccountId}\n               />\n            </CreateAccountSection>\n         </CreateAccountContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const CreateAccountWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(CreateAccount)\n","import React from 'react'\nimport { Grid, Responsive } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst RequestStatusBoxGrid = styled(Grid)`\n   &&& .alert-info {\n      font-size: 18px;\n      font-weight: 600;\n      line-height: 64px;\n      margin: 0 0 0 0;\n      padding-left: 0px;\n\n      &.problem {\n         color: #ff585d;\n      }\n      &.success {\n         color: #6ad1e3;\n      }\n   }\n\n   && {\n      padding-left: 30px;\n   }\n\n   @media screen and (max-width: 991px) {\n      .note-box {\n         padding-left: 0px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .alert-info {\n         padding: 0 0 0 24px;\n         line-height: 34px;\n         font-size: 14px;\n      }\n\n      && {\n         padding-left: 1rem;\n         margin-top: 10px;\n      }\n  }\n`\n/**\n * Renders request status.\n *\n * @param requestStatus {object} request status, can be null in case not completed yet / no outgoing request\n * @param requestStatus.success {boolean} true if request was succesful\n * @param requestStatus.messageCode {string} localization code of status message to display\n */\nconst RequestStatusBox = ({ requestStatus }) => (\n   requestStatus ?\n      <RequestStatusBoxGrid>\n         <Responsive\n            as={Grid.Row}\n            minWidth={Responsive.onlyTablet.minWidth}\n         >\n            <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\n               {requestStatus.messageCode}\n            </Grid.Column>\n         </Responsive>\n      </RequestStatusBoxGrid>\n      : null\n)\n\nexport default RequestStatusBox\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport RequestStatusBox from '../common/RequestStatusBox'\n\nconst AccountFormSection = ({ requestStatus, children }) => (\n   <Grid>\n      <Grid.Column computer={9} tablet={8} mobile={16}>\n         {children}\n      </Grid.Column>\n      <Grid.Column computer={7} tablet={8} mobile={16}>\n         <RequestStatusBox requestStatus={requestStatus} />\n      </Grid.Column>\n   </Grid>\n)\n\nexport default AccountFormSection\n","import React from 'react'\nimport { Form, Input, Button, Segment } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   margin-left: -1rem;\n\n   &&&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background-color: #f8f8f8;\n      position: relative;\n      :focus {\n         border-color: #f8f8f8;\n         background-color: #fff;\n      }\n      :valid {\n         background-color: #fff;\n      }\n   }\n   .create {\n      position: relative;\n\n      .react-phone-number-input__country {\n         position: absolute;\n         top: 24px;\n         right: 22px;\n         z-index: 1;\n\n         &-select-arrow {\n            display: none;\n         }\n      }\n   }\n   .segment {\n      padding: 20px 0 0 0;\n      color: #24272a;\n      border-top: 4px solid #f8f8f8 !important;\n      margin-top: 48px;\n      line-height: 24px;\n\n      a {\n         text-decoration: underline;\n\n         :hover {\n            text-decoration: none;\n         }\n      }\n   }\n   &&&&& .spinner {\n      margin-right: 20px;\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      background: #0072ce;\n      margin: 10px 1em 0 0;\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 0;\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n   & h3 {\n      margin-bottom: 1rem;\n   }\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n\n   @media screen and (max-width: 767px) {\n      margin-left: 0;\n   }\n`\n\nconst SetRecoveryInfoForm = ({\n   formLoader,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange,\n   skipRecoverySetup\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${\n                  requestStatus\n                     ? requestStatus.success\n                        ? 'success'\n                        : 'problem'\n                     : ''\n               } ${formLoader ? 'loading' : ''}`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={value =>\n                  handleChange(null, { name: 'phoneNumber', value })\n               }\n               placeholder='example: +1 555 123 4567'\n               required\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>\n            PROTECT ACCOUNT\n         </Button>\n      </Form.Field>\n\n      <Segment basic>\n         <span>Skip this step</span>\n         if you want to backup your account keys manually. However, skipping\n         this will make it impossible for us to assist you with account recovery\n         in the future.{' '}\n         <a href='#react-wants-this' className='' onClick={skipRecoverySetup}>\n            I choose to backup my account manually\n         </a>\n      </Segment>\n   </RecoveryInfoForm>\n)\n\nexport default SetRecoveryInfoForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      h2 {\n         color: #4a4f54 !important;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst SetRecoveryInfoContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={9} tablet={8} mobile={16}>\n               <Header as='h1'>Protect your Account</Header>\n               <Header as='h2'>\n                  Enter your phone number to make your account easy for you to\n                  recover in the future.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n      <Disclaimer />\n   </CustomContainer>\n)\nSetRecoveryInfoContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\nexport default SetRecoveryInfoContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\nimport { requestCode, setupAccountRecovery, redirectToApp } from '../../actions/account';\n\nclass SetRecoveryInfo extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\n      } else {\n         dispatch(setupAccountRecovery(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\n            .then(({error}) => {\n               if (error) return\n\n               dispatch(redirectToApp())\n            })\n      }\n   }\n\n   skipRecoverySetup = e => {\n      const { dispatch } = this.props;\n      dispatch(redirectToApp())\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <SetRecoveryInfoForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n                  skipRecoverySetup={this.skipRecoverySetup}\n               />\n            </AccountFormSection>\n         </SetRecoveryInfoContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\n","import React from 'react'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   margin-left: -1rem;\n\n   &&&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background-color: #f8f8f8;\n      position: relative;\n      :focus {\n         border-color: #f8f8f8;\n         background-color: #fff;\n      }\n      :valid {\n         background-color: #fff;\n      }\n   }\n   .create {\n      position: relative;\n\n      .react-phone-number-input__country {\n         position: absolute;\n         top: 24px;\n         right: 22px;\n         z-index: 1;\n\n         &-select-arrow {\n            display: none;\n         }\n      }\n   }\n   &&&&& .spinner {\n      margin-right: 20px;\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      background: #0072ce;\n      margin: 10px 0 0 0;\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 1em;\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n   & h3 {\n      margin-bottom: 1rem;\n   }\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n\n   @media screen and (max-width: 767px) {\n      margin-left: 0;\n   }\n`\n\nconst RecoverAccountForm = ({\n   formLoader,\n   accountId,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      <Form.Field>\n         <h3>Username</h3>\n         <Form.Input\n            loading={formLoader}\n            className={`create ${\n               requestStatus\n                  ? requestStatus.success\n                     ? 'success'\n                     : 'problem'\n                  : ''\n            }`}\n            name='accountId'\n            value={accountId}\n            onChange={handleChange}\n            placeholder='example: satoshi.near'\n            disabled={sentSms}\n            required\n         />\n      </Form.Field>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${\n                  requestStatus\n                     ? requestStatus.success\n                        ? 'success'\n                        : 'problem'\n                     : ''\n               } ${formLoader ? 'loading' : ''}`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={value =>\n                  handleChange(null, { name: 'phoneNumber', value })\n               }\n               placeholder='example: +1 555 123 4567'\n               required\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>\n            FIND MY ACCOUNT\n         </Button>\n      </Form.Field>\n   </RecoveryInfoForm>\n)\n\nexport default RecoverAccountForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      h2 {\n         color: #4a4f54 !important;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst RecoverAccountContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={9} tablet={8} mobile={16}>\n               <Header as='h1'>Find your Account</Header>\n               <Header as='h2'>\n                  Enter your information associated with the account and we will\n                  send a recovery code.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={7} tablet={8} mobile={16} className='add'>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nRecoverAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default RecoverAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport RecoverAccountForm from './RecoverAccountForm'\nimport RecoverAccountContainer from './RecoverAccountContainer'\nimport { requestCode, recoverAccount, redirectToApp } from '../../actions/account';\n\nclass RecoverAccount extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         accountId: value => this.wallet.isLegitAccountId(value),\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      const accountId = this.state.accountId || this.props.accountId;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, accountId))\n      } else {\n         dispatch(recoverAccount(this.state.phoneNumber, accountId, this.state.securityCode))\n            .then(({ error }) => {\n               if (error) return;\n               dispatch(redirectToApp())\n            })\n      }\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <RecoverAccountContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <RecoverAccountForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit.bind(this)}\n                  handleChange={this.handleChange}\n               />\n            </AccountFormSection>\n         </RecoverAccountContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const RecoverAccountWithRouter = connect(mapStateToProps)(RecoverAccount)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n   Container,\n   Loader,\n   Grid,\n   Dimmer,\n   Image,\n   List,\n   Segment\n} from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\nimport DenyImage from '../../images/icon-deny.svg'\nimport AppDefaultImage from '../../images/icon-app-default.svg'\nimport AuthorizeImage from '../../images/icon-authorize.svg'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   && .title {\n      padding-top: 40px;\n   }\n\n   && .contract {\n      padding-bottom: 40px;\n   }\n\n   &&& .authorize {\n      margin-top: 40px;\n\n      .bg {\n         width: 64px;\n         height: 64px;\n         background: #e6e6e6;\n         border-radius: 32px;\n\n         > img {\n            width: 40px;\n            height: 40px;\n            margin-top: 8px;\n         }\n      }\n      .md {\n         > img {\n            margin-top: 8px;\n            padding: 0 24px;\n         }\n      }\n   }\n\n   && .cont {\n      background: #f8f8f8;\n      padding: 16px 0px;\n\n      > div {\n         padding: 20px 0 20px 50px;\n      }\n      img {\n         height: 24px;\n         margin-right: 6px;\n      }\n      div.item {\n         padding-top: 24px;\n\n         .content {\n            line-height: 24px;\n         }\n      }\n   }\n\n   .list-item {\n      background: url(${CheckBlueImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   .list-item-deny {\n      background: url(${DenyImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n      && .cont {\n         > div {\n            padding: 20px 0 20px 20px;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && .title {\n         padding-top: 0px;\n\n         h2 {\n            font-size: 18px !important;\n            line-height: 24px !important;\n         }\n      }\n\n      && .contract {\n         padding-top: 0px;\n         padding-bottom: 20px;\n      }\n\n      && .cont {\n         > div {\n            border: 0px;\n            padding: 10px 0 10px 0;\n\n            h3 {\n               font-size: 14px !important;\n            }\n         }\n\n         div.item {\n            padding-top: 24px;\n\n            .content {\n               font-size: 12px;\n               line-height: 14px;\n            }\n         }\n      }\n\n      &&& .authorize {\n         margin-top: 20px;\n      }\n   }\n`\n\nconst LoginContainer = ({ loader, children, appTitle }) => (\n   <CustomContainer>\n      <Dimmer.Dimmable as={Segment} basic>\n         <Grid>\n            <Dimmer inverted active={loader}>\n               <Loader />\n            </Dimmer>\n\n            <Grid.Row>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <List horizontal className='authorize'>\n                     <List.Item className='bg'>\n                        <Image src={AccountGreyImage} />\n                     </List.Item>\n                     <List.Item className='md'>\n                        <Image src={AuthorizeImage} />\n                     </List.Item>\n                     <List.Item className='bg'>\n                        <Image src={AppDefaultImage} />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='title'>\n               <Grid.Column\n                  as='h2'\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <span className='font-bold'>{appTitle} </span> is requesting\n                  to use your NEAR account.\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='contract'>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  Contract: @contractname.near\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List className='border-right-light'>\n                     <List.Item as='h3'>This allows:</List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           View your Account Name\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           Write Chat messages with your name\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List>\n                     <List.Item as='h3'>Does not allow:</List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           View your private account details\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           Buy, Sell, or Transfer on your behalf\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n            </Grid.Row>\n         </Grid>\n\n         {children}\n      </Dimmer.Dimmable>\n   </CustomContainer>\n)\n\nLoginContainer.propTypes = {\n   loader: PropTypes.bool,\n   children: PropTypes.element,\n   appTitle: PropTypes.string\n}\n\nexport default LoginContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\n\nimport AddBlueImage from '../../images/icon-add-blue.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   && button {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 0 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   && .deny {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n\n      background: transparent;\n\n      font-size: 18px;\n      color: #999;\n      letter-spacing: 2px;\n\n      margin: 0 0 0 0;\n\n      :hover {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n      :active,\n      :focus {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n   }\n\n   .segment {\n      width: 100%;\n      padding: 0px;\n      margin: 0px;\n   }\n\n   .dropdown-list {\n      width: 100%;\n      position: relative;\n      cursor: pointer;\n\n      .element {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n\n         background: #fff;\n\n         :hover {\n            background: #f8f8f8;\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-color: #d8d8d8;\n            background-image: url(${AccountGreyImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 36px 36px;\n         }\n         .name {\n            margin-top: 12px;\n            margin-left: 18px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            flex: 1;\n         }\n         .arrow {\n            float: right;\n            width: 56px;\n            height: 56px;\n            background-image: url(${ArrowDownImage});\n            background-repeat: no-repeat;\n            background-position: center center;\n            background-size: 24px auto;\n\n            &.up {\n               background-image: url(${ArrowUpImage});\n            }\n         }\n      }\n      .trigger {\n         display: flex;\n      }\n      .dropdown {\n         .element {\n            margin-top: -4px;\n            display: flex;\n         }\n      }\n      .create-account {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n         cursor: pointer;\n\n         background: #24272a;\n\n         :hover {\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-image: url(${AddBlueImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 24px 24px;\n         }\n         .name {\n            float: left;\n            margin-top: 12px;\n            margin-left: 18px;\n         }\n         .arrow {\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && {\n         button,\n         .deny {\n            width: 140px;\n            border-radius: 35px;\n         }\n\n         .buttons,\n         .dropdown {\n            .column {\n               padding: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst LoginForm = ({\n   dropdown,\n   account,\n   handleOnClick,\n   handleDeny,\n   handleAllow,\n   handleSelectAccount,\n   redirectCreateAccount\n}) => (\n   <CustomGrid>\n      <Grid.Row className='dropdown'>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\n               <List verticalAlign='middle' className={`element trigger`}>\n                  <List.Item className='img' />\n                  <List.Item as='h3' className='name'>\n                     @{account.accountId}\n                  </List.Item>\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\n               </List>\n\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\n                  {Object.keys(account.accounts)\n                     .filter(a => a !== account.accountId)\n                     .map((account, i) => (\n                        <List\n                           key={`lf-${i}`}\n                           onClick={() => handleSelectAccount(account)}\n                           className='element'\n                        >\n                           <List.Item className='img' />\n                           <List.Item as='h3' className='name'>\n                              @{account}\n                           </List.Item>\n                        </List>\n                     ))}\n                  <List\n                     onClick={redirectCreateAccount}\n                     className='create-account'\n                  >\n                     <List.Item className='img' />\n                     <List.Item className='h3 name color-seafoam-blue'>\n                        Create New Account\n                     </List.Item>\n                  </List>\n               </Segment>\n            </Segment>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Form action={account.url.success_url}>\n               <input\n                  type='hidden'\n                  name='authToken'\n                  value={account.authToken}\n               />\n               <input\n                  type='hidden'\n                  name='accountId'\n                  value={account.accountId}\n               />\n               <Button className='deny' onClick={handleDeny}>\n                  DENY\n               </Button>\n               <Button floated='right' onClick={handleAllow}>\n                  ALLOW\n               </Button>\n            </Form>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n   </CustomGrid>\n)\n\nLoginForm.propTypes = {\n   dropdown: PropTypes.bool.isRequired,\n   handleOnClick: PropTypes.func.isRequired,\n   handleDeny: PropTypes.func.isRequired,\n   handleSelectAccount: PropTypes.func.isRequired,\n   redirectCreateAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(mapStateToProps)(LoginForm)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport LoginContainer from './LoginContainer'\nimport LoginForm from './LoginForm'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass Login extends Component {\n   state = {\n      dropdown: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleDeny = e => {\n      e.preventDefault();\n      if (this.props.account.url.failure_url) {\n         window.location.href = this.props.account.url.failure_url\n      }\n   }\n\n   handleAllow = e => {\n      e.preventDefault()\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\n   }\n\n   handleSelectAccount = accountId => {\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { account } = this.props\n\n      return (\n         <LoginContainer\n            loader={account.loader}\n            appTitle={account.url && account.url.app_title}\n         >\n            {account.accountId && (\n               <LoginForm\n                  {...this.state}\n                  handleOnClick={this.handleOnClick}\n                  handleDeny={this.handleDeny}\n                  handleAllow={this.handleAllow}\n                  handleSelectAccount={this.handleSelectAccount}\n                  redirectCreateAccount={this.redirectCreateAccount}\n               />\n            )}\n         </LoginContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const LoginWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Login))\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Image, List } from 'semantic-ui-react'\n\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationTabList = styled(List)`\n   .ui.button {\n      background: #f8f8f8;\n      color: #0072ce;\n      height: 36px;\n      font-weight: 500;\n      padding-left: 1em;\n      padding-right: 1em;\n\n      &.active {\n         background: #999999;\n         color: #ffffff;\n      }\n\n      :hover {\n         background: #999999;\n         color: #ffffff;\n      }\n   }\n\n   .ui.image {\n      width: 0.5em;\n      padding-bottom: 0px;\n   }\n`\n\nconst LEFT_PAGE = 'LEFT'\nconst RIGHT_PAGE = 'RIGHT'\n\nconst range = (from, to, step = 1) => {\n   let i = from\n   const range = []\n\n   while (i <= to) {\n      range.push(i)\n      i += step\n   }\n\n   return range\n}\n\nexport class PaginationTab extends Component {\n   static propTypes = {\n      totalRecords: PropTypes.number.isRequired,\n      pageLimit: PropTypes.number,\n      pageNeighbors: PropTypes.number,\n      onPageChanged: PropTypes.func,\n      initialPage: PropTypes.number.isRequired\n   }\n\n   static defaultProps = {\n      pageLimit: 10,\n      pageNeighbors: 1,\n      onPageChange: () => {},\n      initialPage: 0\n   }\n\n   state = {\n      currentPage: null\n   }\n\n   getTotalPages() {\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\n   }\n\n   componentDidMount() {\n      this.setState({ currentPage: this.props.initialPage + 1 })\n   }\n\n   gotoPage = page => {\n      const currentPage = this.props.onPageChanged(page) + 1\n      this.setState({ currentPage })\n   }\n\n   handleClick = (page, evt) => {\n      evt.preventDefault()\n      this.gotoPage(page)\n      evt.target.blur()\n   }\n\n   handleMoveLeft = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\n      evt.target.blur()\n   }\n\n   handleMoveRight = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\n      evt.target.blur()\n   }\n\n   fetchPageNumbers = () => {\n      const totalPages = this.getTotalPages()\n      const currentPage = this.state.currentPage\n      const pageNeighbors = this.props.pageNeighbors\n\n      const totalNumbers = pageNeighbors * 2 + 3\n      const totalBlocks = totalNumbers + 2\n\n      if (totalPages > totalBlocks) {\n         let pages = []\n\n         const leftBound = currentPage - pageNeighbors\n         const rightBound = currentPage + pageNeighbors\n         const beforeLastPage = totalPages - 1\n\n         const startPage = leftBound > 2 ? leftBound : 2\n         const endPage =\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\n\n         pages = range(startPage, endPage)\n\n         const pagesCount = pages.length\n         const singleSpillOffset = totalNumbers - pagesCount - 1\n\n         const leftSpill = startPage > 2\n         const rightSpill = endPage < beforeLastPage\n\n         const leftSpillPage = LEFT_PAGE\n         const rightSpillPage = RIGHT_PAGE\n\n         if (leftSpill && !rightSpill) {\n            const extraPages = range(\n               startPage - singleSpillOffset,\n               startPage - 1\n            )\n            pages = [leftSpillPage, ...extraPages, ...pages]\n         } else if (!leftSpill && rightSpill) {\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\n            pages = [...pages, ...extraPages, rightSpillPage]\n         } else if (leftSpill && rightSpill) {\n            pages = [leftSpillPage, ...pages, rightSpillPage]\n         }\n\n         return [1, ...pages, totalPages]\n      }\n\n      return range(1, totalPages)\n   }\n\n   render() {\n      if (!this.props.totalRecords) return null\n      if (this.totalPages === 1) return null\n\n      const pages = this.fetchPageNumbers()\n      return (\n         <PaginationTabList horizontal className='PaginationTab'>\n            {pages.map((page, index) => {\n               if (page === LEFT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveLeft}>\n                           <Image src={ArrowLeftImage} />\n                        </Button>\n                     </List.Item>\n                  )\n\n               if (page === RIGHT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveRight}>\n                           ...\n                        </Button>\n                     </List.Item>\n                  )\n\n               return (\n                  <List.Item key={index}>\n                     <Button\n                        circular\n                        active={this.state.currentPage === page}\n                        onClick={e => this.handleClick(page, e)}\n                     >\n                        {page}\n                     </Button>\n                  </List.Item>\n               )\n            })}\n         </PaginationTabList>\n      )\n   }\n}\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\nimport styled from 'styled-components'\n\nconst PaginationPagingList = styled(List)`\n   && .paging-dropdown-tr {\n      width: 66px;\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n\n      border-radius: 18px;\n      background-position: 38px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      padding: 0 20px 0 0;\n\n      line-height: 32px;\n   }\n\n   && .paging-dropdown {\n      padding-top: 0px;\n      width: 66px;\n      min-height: 30px;\n\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n\n      position: absolute;\n      z-index: 200;\n      top: 6px;\n\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 7px;\n      }\n\n      & > .item > .content {\n         font-size: 14px;\n         line-height: 18px;\n         font-weight: 600;\n         padding-left: 6px;\n      }\n   }\n\n   &&& .filter-by {\n      padding-left: 10px;\n      padding-right: 20px;\n   }\n`\n\nconst pagingTypes = [10, 20, 50, 100]\n\nconst PaginationFilter = ({\n   handleOnClickPaging,\n   pagingValue,\n   pagingDropdown,\n   handlePagingDropdownClick\n}) => (\n   <PaginationPagingList horizontal className='border-right-light'>\n      <List.Item>\n         <Button\n            onClick={handleOnClickPaging}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='paging-dropdown-tr'\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\n         >\n            {pagingValue}\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\n         >\n            {pagingTypes.map((type, i) => (\n               <List.Item\n                  key={`page-${i}`}\n                  onClick={() => handlePagingDropdownClick(type)}\n               >\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n      <List.Item as='h6' className='filter-by'>\n         PER PAGE\n      </List.Item>\n   </PaginationPagingList>\n)\n\nexport default PaginationFilter\n","import React, { Fragment } from 'react'\n\nconst PaginationSummary = ({ pageNumber, pageLimit, totalRecords }) => (\n   <Fragment>\n      <span className='color-charcoal-grey'>\n         {pageNumber * pageLimit + 1}-{(pageNumber + 1) * pageLimit}{' '}\n      </span>\n      OF {totalRecords} TOTAL\n   </Fragment>\n)\n\nexport default PaginationSummary\n","import React from 'react'\n\nimport { Form } from 'semantic-ui-react'\n\nimport MSearchImage from '../../images/icon-m-search.svg'\n\nimport styled from 'styled-components'\n\nconst SearchForm = styled(Form)`\n   float: right;\n\n   &&&& .search input {\n      width: 360px;\n\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      border-radius: 25px;\n      padding-left: 40px;\n\n      font-size: 14px;\n\n      background-color: #f8f8f8;\n      background-image: url(${MSearchImage});\n      background-position: 12px center;\n      background-repeat: no-repeat;\n      background-size: 14px auto;\n   }\n`\n\nconst Search = ({ handleSubmit, handleChange, search }) => (\n   <SearchForm onSubmit={handleSubmit}>\n      <Form.Input\n         className='search'\n         name='search'\n         value={search}\n         onChange={handleChange}\n         placeholder='Search transactions and receipts...'\n      />\n   </SearchForm>\n)\n\nexport default Search\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationFilterList = styled(List)`\n   && .sortby-dropdown-tr {\n      width: 210px;\n      line-height: 32px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n      border-radius: 18px;\n      background-position: 180px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      background-image: url(${ArrowDown});\n      text-align: left;\n      padding-top: 0px;\n      padding-bottom: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   && .sortby-dropdown {\n      padding-top: 0px;\n      width: 210px;\n      min-height: 30px;\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n      position: absolute;\n      z-index: 200;\n      top: 2px;\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 10px;\n      }\n\n      .item {\n         height: 36px !important;\n\n         img {\n            width: 18px !important;\n            margin: 0 10px !important;\n         }\n         .content {\n            margin: 2px 0 0 0 !important;\n         }\n      }\n   }\n\n   &&& .sortby {\n      padding-left: 10px;\n      padding-right: 0px;\n   }\n`\n\nconst PaginationFilter = ({\n   filterTypesByType,\n   handleOnClick,\n   handleDropdownClick,\n   dropdown\n}) => (\n   <PaginationFilterList horizontal>\n      <List.Item as='h6' className='sortby'>\n         SORT BY\n      </List.Item>\n      <List.Item>\n         <Button\n            onClick={handleOnClick}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='sortby-dropdown-tr'\n         >\n            RECENTLY ADDED\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\n         >\n            {filterTypesByType.map((type, i) => (\n               <List.Item\n                  key={`sortby-${i}`}\n                  onClick={() => handleDropdownClick(type.img)}\n               >\n                  <List.Content as='h6'>{type.name}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n   </PaginationFilterList>\n)\n\nexport default PaginationFilter\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\n\nimport TransactionFilter from '../../images/icon-m-filter.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport { PaginationTab } from './PaginationTab'\nimport PaginationPaging from './PaginationPaging'\nimport PaginationSummary from './PaginationSummary'\nimport Search from '../common/Search'\n\nimport PaginationSortBy from './PaginationSortBy'\n\nimport styled from 'styled-components'\n\nconst PaginationBlockGrid = styled(Grid)`\n   & > .row:first-child {\n      min-height: 70px;\n   }\n\n   &&& .pagination-block-paging {\n      padding: 0px;\n   }\n\n   &&& .pagination-block-top {\n      padding-left: 0px;\n\n      &-paging-summary {\n         padding-left: 20px;\n      }\n\n      &-search {\n         padding: 0px;\n      }\n\n      &-paging {\n         padding-left: 0px;\n      }\n   }\n\n   &&& .show-sub {\n      padding: 0 0 0 0;\n      margin-top: -16px;\n   }\n\n   &&& .sub-list {\n      background: #fff;\n      width: 100%;\n      min-height: 448px;\n      padding: 0 0;\n\n      > .item {\n         padding: 18px 20px;\n      }\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n         padding: 0px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 0 0 0;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .remove-connection {\n         > button {\n            width: 100%;\n            background-color: #ff585d;\n            border: 2px solid #ff585d;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background: #fff;\n               color: #ff585d;\n            }\n         }\n      }\n      .recent-transactions {\n         background-color: #f8f8f8;\n         margin: 0 0 0 0;\n      }\n      .recent-transactions-title {\n         padding: 0 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 2px;\n         background-size: 12px auto;\n      }\n      .recent-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0;\n         border-bottom: 2px solid #e6e6e6;\n      }\n      .recent-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .authorized-transactions {\n         background-color: #fff;\n         margin: 0 0 0 0;\n         padding-top: 0px;\n      }\n      .authorized-transactions-title {\n         padding: 12px 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 14px;\n         background-size: 12px auto;\n      }\n      .authorized-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0 0 32px;\n         background: url(${CheckBlueImage}) no-repeat left 14px;\n         line-height: 32px;\n      }\n      .authorized-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .send-money {\n         > .button {\n            width: 100%;\n            background-color: #5ace84;\n            border: 2px solid #5ace84;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background-color: #fff;\n               color: #5ace84;\n            }\n         }\n      }\n   }\n   @media screen and (max-width: 991px) {\n      &&& .sub-list {\n         .img {\n            top: 6px;\n            right: 6px;\n         }\n      }\n   }\n`\n\nclass PaginationBlock extends Component {\n   static defaultProps = {\n      onPageChanged: () => {}\n   }\n\n   state = {\n      search: '',\n      dropdown: false,\n      dropdownType: this.props.type\n         ? this.props.filterTypes[this.props.type].img\n         : TransactionFilter,\n      pagingDropdown: false,\n      pagingValue: 10,\n\n      buttonRadio: false\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleOnClickPaging = () => {\n      this.setState({\n         pagingDropdown: !this.state.pagingDropdown\n      })\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({ [name]: value }))\n   }\n\n   handleSubmit = () => {\n      console.log('not ready yet')\n   }\n\n   handleDropdownClick = dropdownType => {\n      this.setState({\n         dropdownType,\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handlePagingDropdownClick = pagingValue => {\n      this.setState({\n         pagingValue,\n         pagingDropdown: !this.state.pagingDropdown\n      })\n\n      this.props.onPageChanged(1, pagingValue)\n   }\n\n   handleTabChange(pageNumber) {\n      // this.setState({\n      //    pageNumber: pageNumber,\n      //    loader: true,\n      // })\n      // this.updateBlock(pageNumber)\n      // return pageNumber\n   }\n\n   buttonRadioClick = () => {\n      this.setState(state => ({\n         buttonRadio: !state.buttonRadio\n      }))\n   }\n\n   render() {\n      const {\n         filterTypes,\n         type,\n         pageNumber = 0,\n         showSub = false,\n         subPage\n      } = this.props\n\n      const {\n         dropdownType,\n         dropdown,\n         search,\n         pagingValue,\n         pagingDropdown\n      } = this.state\n\n      const {\n         totalRecords = 1100,\n         pageLimit = 10,\n         initialPage = 0,\n         onPageChanged = () => {},\n         pageNeighbors = 1\n      } = this.props\n\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\n\n      return (\n         <PaginationBlockGrid\n            className='border-top-bold border-bottom-bold'\n            stackable\n            columns={2}\n         >\n            <Grid.Row className='border-bottom-light'>\n               <Grid.Column\n                  width={10}\n                  verticalAlign='middle'\n                  className='pagination-block-top'\n               >\n                  <PaginationSortBy\n                     filterTypesByType={filterTypesByType}\n                     handleOnClick={this.handleOnClick}\n                     dropdownType={dropdownType}\n                     handleDropdownClick={this.handleDropdownClick}\n                     dropdown={dropdown}\n                  />\n               </Grid.Column>\n               <Grid.Column\n                  width={6}\n                  textAlign='right'\n                  verticalAlign='middle'\n                  className='pagination-block-top-search'\n               >\n                  <Search\n                     handleSubmit={this.handleSubmit}\n                     handleChange={this.handleChange}\n                     search={search}\n                  />\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column computer={showSub ? 10 : 16}>\n                  <Grid>{this.props.children}</Grid>\n               </Grid.Column>\n               <Grid.Column\n                  computer={6}\n                  className={`show-sub ${showSub ? `` : `hide`}`}\n               >\n                  <List className='box sub-list'>\n                     <List.Item className='img'>\n                        <Image\n                           onClick={() => this.props.toggleShowSub()}\n                           src={CloseImage}\n                        />\n                     </List.Item>\n\n                     {subPage === 'authorized-apps' ? (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div\n                                       className='main-image'\n                                       style={{ backgroundColor: '#fff' }}\n                                    >\n                                       <Image src={NearkatImage} align='left' />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       NEAR Place\n                                    </List.Header>\n                                    <List.Item as='h5' className='color-blue'>\n                                       www.nearplace.com\n                                    </List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>DEAUTHORIZE</Button>\n                           </List.Item>\n                           <List.Item className='authorized-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='authorized-transactions-title border-top'\n                              >\n                                 AUTHORIZED TO\n                              </List.Item>\n                              <List.Item className='authorized-transactions-row color-black'>\n                                 View your Account Name\n                              </List.Item>\n                              <List.Item className='authorized-transactions-row color-black'>\n                                 Do something else on your behalf\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Another thing here</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    Another Thing Happened\n                                 </List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    In-app purchase: 20 Ⓝ\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Staked: 10 Ⓝ</List.Header>\n                                 <List.Item>2w ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Authorized</List.Header>\n                                 <List.Item>2w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                        </Fragment>\n                     ) : (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div className='main-image'>\n                                       <Image\n                                          src={AccountGreyImage}\n                                          align='left'\n                                       />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       Alex Skidanov\n                                    </List.Header>\n                                    <List.Item as='h5'>@alex.near</List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>REMOVE CONNECTION</Button>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    You and Alex played NEAR Chess\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='send-money border-top'>\n                              <Button as={Link} to='/send-money/marcin'>\n                                 SEND MONEY\n                              </Button>\n                           </List.Item>\n                        </Fragment>\n                     )}\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row className='border-top-light'>\n               <Grid.Column\n                  width={8}\n                  verticalAlign='middle'\n                  className='pagination-block-top-paging'\n               >\n                  <List horizontal verticalAlign='middle'>\n                     <List.Item width={6}>\n                        <PaginationPaging\n                           handleOnClickPaging={this.handleOnClickPaging}\n                           pagingValue={pagingValue}\n                           pagingDropdown={pagingDropdown}\n                           handlePagingDropdownClick={\n                              this.handlePagingDropdownClick\n                           }\n                        />\n                     </List.Item>\n                     <List.Item\n                        width={6}\n                        as='h6'\n                        className='pagination-block-top-paging-summary'\n                     >\n                        <PaginationSummary\n                           pageNumber={pageNumber}\n                           pageLimit={pageLimit}\n                           totalRecords={totalRecords}\n                        />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  width={8}\n                  className='pagination-block-paging'\n                  textAlign='right'\n               >\n                  <PaginationTab\n                     totalRecords={totalRecords}\n                     pageLimit={pageLimit}\n                     initialPage={initialPage}\n                     onPageChanged={onPageChanged}\n                     pageNeighbors={pageNeighbors}\n                  />\n               </Grid.Column>\n            </Grid.Row>\n         </PaginationBlockGrid>\n      )\n   }\n}\n\nexport default PaginationBlock\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst ContactsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer={10} tablet={10} mobile={16} as='h1'>\n               Contacts\n            </Grid.Column>\n            <Grid.Column\n               as='h1'\n               computer={6}\n               tablet={6}\n               mobile={16}\n               className='add'\n            >\n               203<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default ContactsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\nimport ContactsContainer from './ContactsContainer'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nclass Contacts extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <ContactsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`c-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </ContactsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = () => ({})\n\nexport const ContactsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Contacts))\n","import React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst AuthorizedAppsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column as='h1' computer={10} tablet={10} mobile={16}>\n               Authorized Apps\n            </Grid.Column>\n            <Grid.Column\n               as='h1'\n               computer={6}\n               tablet={6}\n               mobile={16}\n               className='add'\n            >\n               23<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default AuthorizedAppsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\n\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\n\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nclass AuthorizedApps extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <AuthorizedAppsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n               subPage='authorized-apps'\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`a-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </AuthorizedAppsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = () => ({})\n\nexport const AuthorizedAppsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(AuthorizedApps))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n\n         :first-child {\n            padding-left: 0px;\n         }\n      }\n\n      h1 {\n         color: #4a4f54;\n         padding-left: 0px;\n         line-height: 48px;\n      }\n   }\n\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-left: 1rem;\n         padding-right: 1rem;\n      }\n\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst SendMoneyContainer = ({ children, step }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='1' className='page-title'>\n            <Grid.Column as='h1' textAlign='center'>\n               {step === 3 ? `Success!` : `Send Money`}\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default SendMoneyContainer\n","import React from 'react'\n\nimport {\n   Header,\n   TextArea,\n   List,\n   Image,\n   Button,\n   Form,\n   Dimmer,\n   Loader,\n   Segment\n} from 'semantic-ui-react'\n\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&&&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin: 36px auto 0 auto;\n      form {\n         h3 {\n            margin-bottom: 13px;\n            text-align: left;\n         }\n         .alert-info {\n            font-weight: 600;\n            margin: 0 0 -8px 0;\n            padding: 0 0 0 24px !important;\n            line-height: 34px;\n            font-size: 14px;\n            margin-top: -6px;\n            text-align: left;\n            &.problem {\n               color: #ff585d;\n            }\n            &.success {\n               color: #6ad1e3;\n            }\n         }\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 auto;\n            img {\n               padding-top: 10px;\n            }\n         }\n         .amount {\n            margin-top: 16px;\n            margin-bottom: 0px;\n            padding-top: 24px;\n            input {\n               height: 80px;\n               border: 0px;\n               font-family: Bw Seido Round;\n               font-size: 72px;\n               font-weight: 500;\n               line-height: 80px;\n               color: #4a4f54;\n               text-align: center;\n               padding: 0px;\n            }\n         }\n         .near-tokens {\n            margin: 14px auto 36px auto;\n            text-align: center;\n            padding: 2px;\n            width: 200px;\n            background-color: #fff;\n            color: #999999;\n            font-weight: 600;\n         }\n         .add-note {\n            > textarea {\n               width: 100%;\n               border: 0px;\n               padding: 12px;\n               :focus {\n                  border: 0px;\n               }\n            }\n         }\n         .send-money {\n            margin-top: 24px;\n            margin-bottom: 6px;\n            > button {\n               width: 288px;\n               line-height: 56px;\n               border-radius: 30px;\n               border: solid 2px #5ace84;\n               font-size: 18px;\n               font-weight: 600;\n               letter-spacing: 2px;\n               text-align: center;\n               padding: 0 0 0 0;\n               background-color: #5ace84;\n               color: #fff;\n               :hover {\n                  color: #5ace84;\n                  background: #fff;\n               }\n               :disabled {\n                  background-color: #e6e6e6;\n                  border-color: #e6e6e6;\n                  opacity: 1 !important;\n               }\n            }\n         }\n      }\n      @media screen and (max-width: 991px) {\n      }\n      @media screen and (max-width: 767px) {\n         padding: 0px;\n         width: 100%;\n         text-align: center;\n         margin-left: auto;\n         margin-right: auto;\n         border: 0px;\n         .near-tokens {\n            width: 200px;\n         }\n         form {\n            .near-tokens {\n               margin: 14px auto 24px auto;\n            }\n            .add-note {\n               margin-left: -1rem;\n               margin-right: -1rem;\n               > textarea {\n                  width: 100%;\n                  height: 98px;\n                  border: 0px;\n                  padding: 12px;\n                  background: #f8f8f8;\n                  :focus {\n                     border: 0px;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyFirstStep = ({\n   handleNextStep,\n   handleChange,\n   note,\n   loader,\n   paramAccountId,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage,\n   formLoader,\n   amount\n}) => (\n   <CustomList className='box'>\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         {paramAccountId ? (\n            <List.Item>\n               <List.Content>\n                  <div className='main-image'>\n                     <Image src={AccountGreyImage} align='left' />\n                  </div>\n               </List.Content>\n               <List.Content as='h2'>{accountId}</List.Content>\n               <List.Content>@{accountId}</List.Content>\n            </List.Item>\n         ) : (\n            <List.Item>\n               <List.Content>\n                  <Header as='h3'>Enter a username to send:</Header>\n\n                  <CreateAccoungFormInput\n                     formLoader={formLoader}\n                     accountId={accountId}\n                     handleChangeAccountId={handleChangeAccountId}\n                     successMessage={successMessage}\n                     errorMessage={errorMessage}\n                  />\n\n                  {successMessage && (\n                     <Segment basic className='alert-info success'>\n                        Username is available.\n                     </Segment>\n                  )}\n                  {errorMessage && (\n                     <Segment basic className='alert-info problem'>\n                        Username is unavailable.\n                     </Segment>\n                  )}\n               </List.Content>\n            </List.Item>\n         )}\n\n         <List.Item className='amount border-top'>\n            <Form.Input\n               type='number'\n               name='amount'\n               value={amount}\n               onChange={handleChange}\n               placeholder='0.00'\n               step='0.01'\n               min='0'\n            />\n         </List.Item>\n         <List.Item as='h5' className='near-tokens'>\n            NEAR TOKENS\n         </List.Item>\n         {false ? (\n            <List.Item className='add-note border-bottom border-top'>\n               <TextArea\n                  name='note'\n                  value={note}\n                  onChange={handleChange}\n                  placeholder='Add a note...'\n               />\n            </List.Item>\n         ) : null}\n         <List.Item className='send-money'>\n            <Button\n               disabled={\n                  paramAccountId\n                     ? !(parseFloat(amount) > 0)\n                     : !(successMessage && parseFloat(amount) > 0)\n               }\n               onClick={handleNextStep}\n            >\n               SEND MONEY\n            </Button>\n         </List.Item>\n      </Form>\n   </CustomList>\n)\n\nexport default SendMoneyFirstStep\n","import React from 'react'\n\nimport { List, Image, Button, Header } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 36px;\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 0;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n\n         font-family: Bw Seido Round;\n         font-size: 72px;\n         font-weight: 500;\n         line-height: 72px;\n         color: #4a4f54;\n      }\n      .to {\n         width: 40px;\n         background: #fff;\n         margin: -20px auto 12px auto;\n      }\n\n      .with-note {\n         padding-top: 12px;\n\n         .expand-note {\n            color: #0072ce;\n            cursor: pointer;\n            font-weight: 600;\n\n            :hover {\n               text-decoration: underline;\n            }\n         }\n      }\n\n      .send-money {\n         padding-top: 24px;\n         padding-bottom: 24px;\n         margin-top: 24px;\n         margin-bottom: 24px;\n\n         > .button {\n            width: 288px;\n            line-height: 60px;\n            border-radius: 30px;\n            border: solid 2px #5ace84;\n            font-size: 18px;\n            font-weight: 600;\n            letter-spacing: 2px;\n            text-align: center;\n            padding: 0 0 0 0;\n            background-color: #5ace84;\n            color: #fff;\n\n            :hover {\n               color: #5ace84;\n               background: #fff;\n            }\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         .to {\n            margin: -20px auto 12px auto;\n         }\n\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .amount {\n               font-size: 48px !important;\n               padding-top: 0px;\n            }\n            .send-money {\n               padding-top: 14px;\n               padding-bottom: 14px;\n               margin-top: 14px;\n               margin-bottom: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneySecondStep = ({\n   handleNextStep,\n   handleExpandNote,\n   expandNote,\n   note,\n   amount,\n   accountId\n}) => (\n   <CustomList className='box'>\n      <List.Item as='h2'>You are sending</List.Item>\n      <List.Item as='h1' className='amount border-bottom'>\n         {amount}\n         <span>Ⓝ</span>\n      </List.Item>\n      <List.Item className='to'>\n         <Header as='h2'>to</Header>\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note '>\n            with note:\n            <br />\n            {expandNote ? (\n               <span className='color-black'>{note}</span>\n            ) : (\n               <span className='expand-note' onClick={handleExpandNote}>\n                  Expand note\n               </span>\n            )}\n         </List.Item>\n      )}\n      <List.Item className='send-money border-top border-bottom'>\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\n      </List.Item>\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\n   </CustomList>\n)\n\nexport default SendMoneySecondStep\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 12px;\n\n      .send-money img {\n         width: 24px;\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 32px;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n      }\n\n      .with-note {\n         padding-top: 24px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .send-money img {\n               margin-top: 12px;\n            }\n            .amount {\n               padding-top: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\n   <CustomList>\n      <List.Item className='send-money'>\n         <Image src={SendImage} />\n      </List.Item>\n      <List.Item as='h2' className='amount'>\n         {amount}\n         <span>Ⓝ</span> was sent to:\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note'>\n            <span className='font-bold'>with note:</span>\n            <br />\n            {note}\n         </List.Item>\n      )}\n   </CustomList>\n)\n\nexport default SendMoneyThirdStep\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport SendMoneyContainer from './SendMoneyContainer'\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\nimport SendMoneySecondStep from './SendMoneySecondStep'\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\n\nclass SendMoney extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      step: 1,\n      note: '',\n      expandNote: false,\n      paramAccountId: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false,\n      amount: ''\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      const paramId = this.props.match.params.id\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      if (paramId) {\n         this.wallet\n            .checkAccount(paramId)\n            .then(d => {\n               this.setState(() => ({\n                  paramAccountId: true,\n                  accountId: paramId\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  accountId: ''\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  loader: false\n               }))\n            })\n      } else {\n         this.setState(() => ({\n            loader: false\n         }))\n      }\n   }\n\n   handleNextStep = () => {\n      const { step, accountId, amount} = this.state;\n\n      if (step === 2) {\n         this.wallet.sendTokens(this.wallet.getAccountId(), accountId, amount)\n            .then(() => {\n               this.setState(state => ({\n                  step: state.step + 1\n               }))\n            })\n            .catch(console.error)\n         return;\n      }\n\n      this.setState(state => ({\n         step: state.step + 1\n      }))\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value\n      }))\n   }\n\n   handleExpandNote = () => {\n      this.setState(() => ({\n         expandNote: true\n      }))\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   render() {\n      const { step } = this.state\n\n      return (\n         <SendMoneyContainer step={step}>\n            {step === 1 && (\n               <SendMoneyFirstStep\n                  handleNextStep={this.handleNextStep}\n                  handleChange={this.handleChange}\n                  handleChangeAccountId={this.handleChangeAccountId}\n                  {...this.state}\n               />\n            )}\n            {step === 2 && (\n               <SendMoneySecondStep\n                  handleNextStep={this.handleNextStep}\n                  handleExpandNote={this.handleExpandNote}\n                  {...this.state}\n               />\n            )}\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\n         </SendMoneyContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = () => ({})\n\nexport const SendMoneyWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(SendMoney))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n         float: left;\n         width: auto !important;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst ProfileContainer = ({ account, children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column as='h1'>Account:</Grid.Column>\n            <Grid.Column as='h1' className='add'>\n               @{account.accountId}\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default ProfileContainer\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Popup, Grid, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport LockImage from '../../images/icon-lock.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .row {\n         padding-top: 12px;\n         padding-bottom: 12px;\n\n         .edit-link {\n            font-weight: 600;\n         }\n         .title {\n            font-weight: 600;\n            color: #24272a;\n         }\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 120px;\n         height: 120px;\n         background: #e6e6e6;\n         border-radius: 60px;\n\n         img {\n            width: 100px;\n            padding-top: 10px;\n         }\n      }\n\n      .locked {\n         float: right;\n         border: 0px;\n         padding: 1px 7px;\n         width: 32px;\n         height: 32px;\n         background: #f8f8f8;\n         border-radius: 32px;\n\n         img {\n            padding-top: 4px;\n         }\n      }\n\n      .row-title {\n         margin-top: 20px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         margin-right: 0px;\n\n         .column {\n            padding-left: 0px;\n            padding-right: 0px;\n         }\n      }\n   }\n`\n\nconst ProfileDetails = ({ account }) => (\n   <CustomGrid>\n      <Grid.Row className='border-top-bold'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            PROFILE\n         </Grid.Column>\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Username\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            @{account.accountId}\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\n            <Popup\n               trigger={\n                  <div className='locked'>\n                     <Image src={LockImage} align='left' />\n                  </div>\n               }\n               hoverable\n               position='left center'\n            >\n               <Popup.Header>Why is this locked?</Popup.Header>\n               <Popup.Content>\n                  Your username is your unique identifier in the system and cannot be changed\n                  cause data and asset ownership is tied to it.\n                  However you are welcome to <Link to=\"/create\">create another account</Link> with desired name\n                  and transfer assets as needed.\n                  {` `}\n                  {false ?\n                  <a href='/'>Learn more</a>\n                  : null }\n               </Popup.Content>\n            </Popup>\n         </Grid.Column>\n      </Grid.Row>\n      {false ? <div>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Full Name\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            Evgeny Kuzyakov\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Photo\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            <div className='main-image'>\n               <Image src={AccountGreyImage} align='left' />\n            </div>\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            CONTACT INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Email\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            email@website.com\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Phone\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            000-000-0000\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Address\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            1234 N. West Ave., San Francisco, CA 98562\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            FINANCIAL INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      </div> : null }\n\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Balance\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            {account.amount} Ⓝ\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Only Me\n         </Grid.Column>\n         <Grid.Column as=\"div\">\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default ProfileDetails\n","import React from 'react'\n\nimport { Grid } from 'semantic-ui-react'\n\nconst ProfileSection = ({ children }) => (\n   <Grid columns={2} stackable>\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\n      <Grid.Column computer={6}>\n         {children[1]}\n         {children[2]}\n      </Grid.Column>\n   </Grid>\n)\n\nexport default ProfileSection\n","import React from 'react'\n\nimport { List, Button, Image } from 'semantic-ui-react'\n\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      margin-top: -1rem;\n      padding: 14px 4px 14px 14px;\n\n      .keys {\n         img {\n            width: 24px;\n            margin-top: 2px;\n         }\n      }\n      .account {\n         margin-top: 12px;\n\n         &-name {\n            margin-top: 12px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         img {\n            width: 18px;\n            margin-top: 8px;\n            margin-right: 20px;\n         }\n         .download {\n            margin: 0px;\n         }\n         button {\n            width: 130px;\n            background-color: #0072ce;\n            border: 2px solid #0072ce;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n            margin-left: 20px;\n\n            :hover {\n               background-color: #fff;\n               color: #0072ce;\n            }\n         }\n         .account-name {\n            color: #24272a;\n            font-weight: 600;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n         &&& {\n            .account {\n               .download {\n                  float: none;\n                  margin: 0 0 0 16px;\n               }\n            }\n         }\n      }\n      @media screen and (max-width: 767px) {\n         &&& {\n            margin-top: 20px;\n\n            .account {\n               button {\n                  margin-left: 8px;\n               }\n               .download {\n                  float: right;\n                  margin: 0 0 0 0;\n               }\n            }\n         }\n      }\n   }\n`\n\nconst ProfileYourKeys = () => (\n   <CustomList className='box'>\n      <List.Item className='keys'>\n         <List.Icon as={Image} src={KeysGreyImage} />\n         <List.Content as='h2'>Your Keys</List.Content>\n      </List.Item>\n      <List.Item className='account'>\n         <List.Content floated='right' className='download'>\n            <Button>DOWNLOAD</Button>\n         </List.Content>\n         <List.Content>\n            <Image align='left' src={DocGreyImage} />\n         </List.Content>\n         <List.Content className='account-name'>\n            @eugenethedream.key\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileYourKeys\n","import React from 'react'\n\nimport { List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 8px 0 8px 20px;\n      margin-left: 28px;\n      margin-top: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .header {\n         line-height: 28px;\n      }\n      .content {\n         line-height: 20px;\n      }\n\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         border-left: 0px;\n      }\n   }\n`\n\nconst ProfileNotice = () => (\n   <CustomList>\n      <List.Item>\n         <List.Header>Never give your keys away</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\n            sit amet pretium mi, a molestie est.\n            <a href='/'>Learn more</a>\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileNotice\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport ProfileContainer from './ProfileContainer'\nimport ProfileDetails from './ProfileDetails'\nimport ProfileSection from './ProfileSection'\nimport ProfileYourKeys from './ProfileYourKeys'\nimport ProfileNotice from './ProfileNotice'\n\nclass Profile extends Component {\n   state = {\n      loader: false\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      return (\n         <ProfileContainer account={this.props.account}>\n            <ProfileSection>\n               <ProfileDetails account={this.props.account} />\n               { false ?\n               <ProfileYourKeys />\n               : null }\n               { false ?\n               <ProfileNotice />\n               : null }\n            </ProfileSection>\n         </ProfileContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const ProfileWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Profile))\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  \n  * {\n   box-sizing: inherit;\n   }\n\n   #root {\n      min-height: 100vh;\n      position: relative;\n   }\n   html {\n      box-sizing: border-box;\n      min-height: 100vh;\n      height: auto !important;\n\n      body {\n         margin: 0;\n         padding: 0;\n         min-height: 100vh !important;\n\n         position: relative;\n         color: #999;\n         font-family: \"benton-sans\",sans-serif;\n         font-weight: 500;\n         font-size: 14px !important;\n      }\n   }\n   \n\n   .App {\n      min-height: 100vh;\n\n      > div {\n         min-height: 100vh;\n      }\n   }\n\n   a {\n      color: #0072ce;\n   }\n   a:hover {\n      color: #0072ce;\n      text-decoration: underline;\n   }\n\n   h1, .h1 {\n      font-family: Bw Seido Round !important;\n      font-size: 48px !important;\n      font-weight: 500 !important;\n      line-height: 100px;\n      color: #24272a;\n   }\n   h2, .h2 {\n      font-family: Bw Seido Round !important;\n      font-size: 24px !important;\n      font-weight: 500 !important;\n      line-height: 1.33;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h3, .h3 {\n      font-family: Bw Seido Round !important;\n      font-size: 18px !important;\n      font-weight: 500 !important;\n      line-height: 24px !important;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h4, .h4 {\n      font-family: Bw Seido Round !important;\n      font-size: 16px;\n      font-weight: 500;\n      line-height: 1.33;\n      color: #24272a;\n      margin: 0px;\n   }\n\n   h5, .h5 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 13px !important;\n      line-height: 26px;\n      font-weight: 500;\n      color: #999999 !important;\n      margin: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   h6, .h6 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      line-height: 18px;\n      font-weight: 600;\n      color: #999999;\n      margin: 0px !important;\n      letter-spacing: 1.5px !important;\n   }\n\n\n\n   .font-small {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      color: #999 !important;\n      font-weight: 500 !important;\n\n      a {\n         font-family: \"benton-sans\",sans-serif !important;\n         font-size: 12px !important;\n         color: #999 !important;\n         font-weight: 500 !important;\n      }\n\n      a:hover {\n         color: #999 !important;\n      }\n   }\n\n   .ui.form input[type=text] {\n      font-family: \"benton-sans\",sans-serif;\n      font-size: 16px;\n   }\n\n\n   .font-bold {\n      font-weight: 600;\n   }\n\n\n   .color-seafoam-blue {\n      color: #6ad1e3 !important;\n   }\n   .color-blue {\n      color: #0072ce !important;\n   }\n   .color-brown-grey {\n      color: #999;\n   }\n   .color-charcoal-grey {\n      color: #4a4f54 !important;\n   }\n   .color-black {\n      color: #24272a !important;\n\n      :hover {\n         color: #24272a;\n      }\n   }\n\n\n   .ui.popup > .header {\n      font-weight: 600 !important;\n      color: #24272a !important;\n   }\n\n\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\n      font-weight: 600;\n   }\n\n\n   .border-bottom {\n      border-bottom: 2px solid #f8f8f8 !important;\n   }\n   .border-bottom-bold {\n      border-bottom: 4px solid #e6e6e6 !important;\n   }\n   .border-bottom-light {\n      border-bottom: 1px solid #f8f8f8 !important;\n   }\n\n   .border-top {\n      border-top: 2px solid #f8f8f8 !important;\n   }\n\n   .border-top-bold {\n      border-top: 4px solid #e6e6e6 !important;\n   }\n   .border-top-light {\n      border-top: 1px solid #f8f8f8 !important;\n   }\n\n   .border-left-bold {\n      border-left: 4px solid #f8f8f8 !important;\n   }\n\n\n   .border-right {\n      border-right: 2px solid #e6e6e6;\n   }\n   .border-right-light {\n      border-right: 1px solid #e6e6e6;\n   }\n   .background-lg {\n      background: #f8f8f8;\n   }\n\n\n   .button {\n      font-family: \"benton-sans\",sans-serif !important;\n   }\n\n\n   .box {\n      border: 4px solid #e6e6e6;\n      border-radius: 8px;\n      margin-bottom: 0px;\n      position: relative;\n      min-height: 100px;\n      position: relative;\n\n      .row {\n         padding: 0px !important;\n      }\n      .column {\n         padding: 24px 10px 20px 30px !important;\n         word-wrap: break-word;\n      }\n      .segment {\n         padding: 30px 0 20px 0 !important;\n      }\n      .list {\n         > .item {\n            padding: 0px !important;\n\n            > img {\n               top: -4px;\n               margin: 0 10px;\n            }\n            > img.transarrow {\n               width: 11px !important;\n            }\n         }\n         > h5.item {\n            top: -4px;\n         }\n      } \n   }\n\n\n   .copy-image {\n      width: 18px !important;\n      margin: 0px 10px 0 0px !important;\n      top: -4px !important;\n   }\n\n\n   .balance-image {\n      font-size: 20px !important;\n      font-weight: 100 !important;\n\n      &-big {\n         font-size: 32px !important;\n         font-weight: 100 !important;\n      }\n   }\n   \n\n   .transactions-block .item {\n      margin-left: 10px !important;\n   }\n\n\n   .hide {\n      display: none !important;\n   }\n\n\n   .App-section {\n      width: 860px;\n      margin: auto;\n      margin-top: 10px;\n      margin-bottom: 20px;\n   }\n\n   .App-error-message {\n      width: 100%;\n      text-align: center;\n      display: inline-block;\n      margin: auto;\n   }\n\n   .ui.list .list>.item .header, .ui.list>.item .header {\n      font-family: \"benton-sans\",sans-serif;\n      \n   }\n   .ui.popup>.header, .ui.popup {\n      color: #999;\n      font-family: \"benton-sans\",sans-serif;\n      font-weight: 500;\n      font-size: 14px !important;\n   }\n   .ui.popup {\n      border: 1px solid #eee;\n   }\n   .ui.left.center.popup:before {\n      box-shadow: 1px -1px 0 0 #eee;\n   }\n   .ui.bottom.right.popup:before {\n      box-shadow: -1px -1px 0 0 #eee;\n   }\n\n\n   @media screen and (max-width: 767px) {\n      h1, .h1 {\n         font-size: 38px !important;\n         font-weight: 500;\n         line-height: 50px;\n         color: #4a4f54;\n      }\n      h2, .h2 {\n         font-size: 24px !important;\n         font-weight: 600;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      h3, .h3 {\n         font-size: 16px !important;\n         font-weight: 500;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      \n\n      .box .column {\n         padding: 16px 10px !important;\n      }\n   }\n`\n","import React, { Component } from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport '../index.css'\n\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\nimport Footer from './common/Footer'\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\nimport { LoginWithRouter } from './login/Login'\nimport { ContactsWithRouter } from './contacts/Contacts'\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\nimport { ProfileWithRouter } from './profile/Profile'\n\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './GlobalStyle'\nconst theme = {}\n\nconst PATH_PREFIX = process.env.PUBLIC_URL\n\nclass Routing extends Component {\n   render() {\n      return (\n         <div className='App'>\n            <GlobalStyle />\n\n            <ConnectedRouter basename={PATH_PREFIX}  history={this.props.history}>\n               <ThemeProvider theme={theme}>\n                  <ResponsiveContainer>\n                     <Switch>\n                        <Route\n                           exact\n                           path='/'\n                           component={DashboardDetailWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/create'\n                           component={CreateAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/set-recovery/:accountId'\n                           component={SetRecoveryInfoWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/recover-account'\n                           component={RecoverAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/login'\n                           component={LoginWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/contacts'\n                           component={ContactsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/authorized-apps'\n                           component={AuthorizedAppsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/send-money/:id?'\n                           component={SendMoneyWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/profile'\n                           component={ProfileWithRouter}\n                        />\n\n                        <Route component={DashboardDetailWithRouter} />\n                     </Switch>\n                     <Footer />\n                  </ResponsiveContainer>\n               </ThemeProvider>\n            </ConnectedRouter>\n         </div>\n      )\n   }\n}\n\nexport default Routing\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\n\nimport createRootReducer from './reducers'\nimport createMiddleware from './middleware'\n\nimport Routing from './components/Routing'\nimport * as serviceWorker from './serviceWorker'\n\nconst history = createBrowserHistory()\n\nconst store = createStore(createRootReducer(history), createMiddleware(history))\n\nReactDOM.render(\n   <Provider store={store}>\n      <Routing history={history} />\n   </Provider>,\n   document.getElementById('root')\n)\nserviceWorker.unregister()\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport account from './account'\n\nexport default (history) => combineReducers({\n   account,\n   router: connectRouter(history)\n})\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";"],"sourceRoot":""}