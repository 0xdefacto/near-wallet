{"version":3,"sources":["images/wallet.png","images/icon-account.svg","images/icon-recent.svg","images/icon-arrow-right.svg","images/icon-contacts.svg","images/icon-authorized.svg","images/icon-logout.svg","images/icon-activity.svg","images/icon-t-transfer.svg","images/icon-m-transaction.svg","images/icon-account-grey.svg","images/icon-mobile-menu.svg","images/icon-help.svg","images/near.svg","images/icon-t-contract.svg","images/icon-arrow-grn.svg","images/icon-arrow-blk.svg","images/icon-t-stake.svg","images/near_logo.svg","images/icon-deny.svg","images/icon-app-default.svg","images/icon-authorize.svg","images/icon-add-blue.svg","images/icon-arrow-up.svg","images/icon-m-filter.svg","images/icon-arrow-left.svg","images/icon-m-search.svg","images/icon-lock.svg","images/icon-keys-grey.svg","images/icon-doc-grey.svg","utils/wallet.js","images/footer-nearkat.svg","images/icon-check-blue.svg","images/icon-activity-grey.svg","images/icon-authorized-grey.svg","images/icon-contacts-grey.svg","actions/account.js","reducers/account.js","middleware/index.js","components/responsive/MobileView.js","components/responsive/DesktopPopup.js","components/responsive/DesktopView.js","components/responsive/ResponsiveContainer.js","components/common/Footer.js","components/dashboard/DashboardOtherAssets.js","components/dashboard/DashboardContainer.js","components/dashboard/DashboardNotice.js","components/dashboard/ListItem.js","components/dashboard/DashboardActivity.js","components/dashboard/DashboardDetail.js","components/accounts/CreateAccountSection.js","components/accounts/CreateAccoungFormInput.js","components/accounts/CreateAccountForm.js","components/common/Disclaimer.js","components/accounts/NearInfo.js","components/accounts/CreateAccountContainer.js","components/accounts/CreateAccount.js","components/common/RequestStatusBox.js","components/accounts/AccountFormSection.js","components/accounts/SetRecoveryInfoForm.js","components/accounts/SetRecoveryInfoContainer.js","components/accounts/SetRecoveryInfo.js","components/accounts/RecoverAccountForm.js","components/accounts/RecoverAccountContainer.js","components/accounts/RecoverAccount.js","components/login/LoginContainer.js","components/login/LoginForm.js","components/login/Login.js","components/pagination/PaginationTab.js","components/pagination/PaginationPaging.js","components/pagination/PaginationSummary.js","components/common/Search.js","components/pagination/PaginationSortBy.js","components/pagination/PaginationBlock.js","components/contacts/ContactsContainer.js","components/contacts/Contacts.js","components/authorized-apps/AuthorizedAppsContainer.js","components/authorized-apps/AuthorizedApps.js","components/send-money/SendMoneyContainer.js","components/send-money/SendMoneyFirstStep.js","components/send-money/SendMoneySecondStep.js","components/send-money/SendMoneyThirdStep.js","components/send-money/SendMoney.js","components/profile/ProfileContainer.js","components/profile/ProfileDetails.js","components/profile/ProfileSection.js","components/profile/ProfileYourKeys.js","components/profile/ProfileNotice.js","components/profile/Profile.js","components/GlobalStyle.js","components/Routing.js","serviceWorker.js","index.js","reducers/index.js","images/icon-arrow-down.svg","images/icon-problems.svg","images/icon-send.svg","images/icon-close.svg"],"names":["module","exports","__webpack_require__","p","ACCOUNT_HELPER_URL","CONTRACT_CREATE_ACCOUNT_URL","concat","NODE_URL","KEY_WALLET_ACCOUNTS","KEY_UNIQUE_PREFIX","KEY_WALLET_TOKENS","KEY_ACTIVE_ACCOUNT_ID","ACCOUNT_ID_REGEX","Wallet","Object","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_2__","this","key_store","nearlib","BrowserLocalStorageKeystore","near","Near","createDefaultConfig","account","Account","nearClient","accounts","JSON","parse","localStorage","getItem","tokens","accountId","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createClass__WEBPACK_IMPORTED_MODULE_3__","key","value","setItem","stringify","save","app_url","app_title","contract_id","token","possible","i","charAt","Math","floor","random","length","isLegitAccountId","account_id","test","_sendTransaction","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_asyncToGenerator__WEBPACK_IMPORTED_MODULE_1__","_Users_vg_Documents_near_wallet_node_modules_babel_preset_react_app_node_modules_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","mark","_callee","senderId","receiverId","methodName","amount","args","wrap","_context","prev","next","scheduleFunctionCall","abrupt","sent","stop","_x","_x2","_x3","_x4","_x5","apply","arguments","_sendTokens","_callee2","_context2","t0","sendTokens","t1","waitForTransactionResult","call","_x6","_x7","_x8","options","undefined","history","param","next_url","window","location","search","reset_accounts","url","WALLET_CREATE_NEW_ACCOUNT_URL","keys","map","encodeURIComponent","push","replace","isEmpty","redirectToCreateAccount","_loadAccount","_callee3","_context3","Error","viewAccount","_x9","_x10","_checkAccount","_callee4","_context4","_x11","_checkNewAccount","_callee5","remoteAccount","_context5","_x12","_createNewAccount","_callee6","keyPair","_this","_context6","KeyPair","fromRandomSeed","Promise","resolve","reject","data","newAccountId","newAccountPublicKey","getPublicKey","xhr","XMLHttpRequest","open","setRequestHeader","onload","status","setKey","catch","console","log","responseText","send","_x13","_addAccessKey","_callee7","contractId","publicKey","successUrl","addAccessKeyResponse","result","parsedUrl","redirectUrl","_context7","addAccessKey","URL","searchParams","set","href","_x14","_x15","_x16","_x17","addEventListener","receiveMessage","bind","_processTransactionMessage","_callee8","action","app_data","hash","signature","_context8","parseInt","sendTransaction","signer","signHash","_x18","_x19","phoneNumber","sendJson","_validateCode","_callee9","securityCode","_ref","_context9","getKey","SimpleKeyStoreSigner","signBuffer","Buffer","from","_x20","_x21","_x22","event","e","request_id","reply","d","source","postMessage","origin","processTransactionMessage","then","success","error","REFRESH_ACCOUNT","LOADER_ACCOUNT","REFRESH_URL","handleRefreshAccount","wallet","dispatch","getState","redirectIfEmpty","getAccountId","type","loader","loadAccount","v","authToken","newAccessToken","stake","nonce","code_hash","message","indexOf","clearState","handleRefreshUrl","title","success_url","failure_url","public_key","createActions","REQUEST_CODE","requestCode","successCode","errorCode","VALIDATE_CODE","validateCode","initialState","formLoader","sentSms","requestResultReducer","handleActions","defineProperty","combineActions","state","_ref2","payload","meta","objectSpread","requestStatus","messageCode","reducer","_ref3","ready","reduceReducers","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","readyStatePromise","store","makeAction","newAction","assign","CustomResponsive","styled","Responsive","_templateObject","getWidth","onlyTablet","minWidth","innerWidth","MobileView","dropdown","handleDropdown","setState","handleSelectAccount","selectAccount","props","redirectCreateAccount","_this2","react_default","createElement","maxWidth","Segment","basic","className","Menu","borderless","Item","as","Link","to","Image","src","LogoImage","position","onClick","Loader","active","inline","size","MobileMenuImage","CloseImage","react_router_dom","RecentImage","ActivityImage","SendImage","AccountGreyImage","ContactsGreyImage","AuthorizedGreyImage","LogoutImage","List","filter","Button","children","Component","defaultProps","mapDispatchToProps","connect","withRouter","CustomPopup","Popup","DesktopPopup_templateObject","DesktopPopup","trigger","ArrowDownImage","on","Icon","AccountImage","Content","DesktopView_templateObject","DesktopView","fixed","activeItem","hideFixedMenu","showFixedMenu","handleItemClick","name","DesktopView_CustomResponsive","onlyComputer","Visibility","once","onBottomPassed","onBottomPassedReverse","pointing","target","HelpImage","responsive_DesktopPopup","ResponsiveContainer","react","responsive_DesktopView","responsive_MobileView","FooterGrid","Grid","Footer_templateObject","columns","Column","textAlign","verticalAlign","computer","tablet","mobile","Group","LogoFooterImage","only","floated","NearkatImage","DashboardOtherAssets_templateObject","TContractImage","CustomContainer","Container","DashboardContainer_templateObject","ArrowGrnImage","ArrowRightImage","DashboardContainer","Row","Header","DashboardNotice_templateObject","CustomGridRow","ListItem_templateObject","ListItem","row","_ref$wide","wide","_ref$showSub","showSub","toggleShowSub","showSubOpen","align","ArrowBlkImage","ArrowRight","DashboardActivity_templateObject","DashboardDetail","notice","activity","authorizedaps","newcontacts","handleNotice","setTimeout","_","TTransferImage","TStakeImage","_this$state","dashboard_DashboardContainer","CustomGrid","CreateAccountSection_templateObject","CreateAccountSection","successMessage","errorMessage","CreateAccountSection_CustomGrid","CustomFormInput","Form","Input","CreateAccoungFormInput_templateObject","ProblemsImage","CheckBlueImage","CreateAccoungFormInput","handleChangeAccountId","loading","onChange","placeholder","AccountForm","CreateAccountForm_templateObject","CreateAccountForm","handleSubmit","handleRecaptcha","autoComplete","onSubmit","accounts_CreateAccoungFormInput","onlyMobile","lib_es","sitekey","disabled","DisclaimerGrid","Disclaimer_templateObject","Disclaimer","CustomList","NearInfo_templateObject","NearInfo","NearInfo_CustomList","NearLogoImage","CreateAccountContainer_templateObject","CreateAccountContainer","CreateAccountContainer_CustomContainer","stackable","Dimmer","inverted","accounts_NearInfo","common_Disclaimer","CreateAccount","componentDidMount","timeout","clearTimeout","checkNewAccount","finally","preventDefault","createNewAccount","accounts_CreateAccountContainer","accounts_CreateAccountSection","accounts_CreateAccountForm","CreateAccountWithRouter","RequestStatusBoxGrid","RequestStatusBox_templateObject","RequestStatusBox","AccountFormSection","common_RequestStatusBox","RecoveryInfoForm","SetRecoveryInfoForm_templateObject","SetRecoveryInfoForm","isLegit","handleChange","Field","react_phone_number_input","SetRecoveryInfoContainer_templateObject","SetRecoveryInfoContainer","SetRecoveryInfoContainer_CustomContainer","SetRecoveryInfo","isLegitField","nextUrl","isValidPhoneNumber","trim","match","combinedState","accounts_SetRecoveryInfoContainer","accounts_AccountFormSection","accounts_SetRecoveryInfoForm","SetRecoveryInfoWithRouter","_ref4","_ref5","params","RecoverAccountForm_templateObject","RecoverAccountForm","RecoverAccountForm_RecoveryInfoForm","RecoverAccountContainer_templateObject","RecoverAccountContainer","RecoverAccountContainer_CustomContainer","RecoverAccount","accounts_RecoverAccountContainer","accounts_RecoverAccountForm","RecoverAccountWithRouter","LoginContainer_templateObject","DenyImage","LoginContainer","appTitle","LoginContainer_CustomContainer","Dimmable","horizontal","AuthorizeImage","AppDefaultImage","largeScreen","LoginForm_templateObject","ArrowUpImage","AddBlueImage","handleOnClick","handleDeny","handleAllow","LoginForm_CustomGrid","Login","login_LoginContainer","login_LoginForm","LoginWithRouter","PaginationTabList","PaginationTab_templateObject","LEFT_PAGE","RIGHT_PAGE","range","step","PaginationTab","_Component","_getPrototypeOf2","classCallCheck","_len","Array","_key","possibleConstructorReturn","getPrototypeOf","currentPage","gotoPage","page","onPageChanged","handleClick","evt","blur","handleMoveLeft","pageNeighbors","handleMoveRight","fetchPageNumbers","totalPages","getTotalPages","totalNumbers","pages","leftBound","rightBound","beforeLastPage","startPage","endPage","singleSpillOffset","leftSpill","rightSpill","leftSpillPage","rightSpillPage","extraPages","toConsumableArray","inherits","createClass","ceil","totalRecords","pageLimit","initialPage","index","circular","ArrowLeftImage","onPageChange","PaginationPagingList","PaginationPaging_templateObject","pagingTypes","PaginationFilter","handleOnClickPaging","pagingValue","pagingDropdown","handlePagingDropdownClick","style","backgroundImage","ArrowDown","selection","PaginationSummary","pageNumber","SearchForm","Search_templateObject","MSearchImage","Search","PaginationFilterList","PaginationSortBy_templateObject","filterTypesByType","handleDropdownClick","img","PaginationBlockGrid","PaginationBlock_templateObject","MTransactionImage","PaginationBlock","dropdownType","filterTypes","TransactionFilter","buttonRadio","buttonRadioClick","_this$props","_this$props$pageNumbe","_this$props$showSub","subPage","_this$props2","_this$props2$totalRec","_this$props2$pageLimi","_this$props2$initialP","_this$props2$onPageCh","_this$props2$pageNeig","width","PaginationSortBy","common_Search","backgroundColor","PaginationPaging","pagination_PaginationSummary","PaginationTab_PaginationTab","ContactsContainer_templateObject","ContactsContainer","ContactsContainer_CustomContainer","Contacts","_this3","contacts_ContactsContainer","pagination_PaginationBlock","dashboard_ListItem","ContactsWithRouter","AuthorizedAppsContainer_templateObject","AuthorizedAppsContainer","AuthorizedAppsContainer_CustomContainer","AuthorizedApps","authorized_apps_AuthorizedAppsContainer","AuthorizedAppsWithRouter","SendMoneyContainer_templateObject","SendMoneyContainer","SendMoneyContainer_CustomContainer","SendMoneyFirstStep_templateObject","SendMoneyFirstStep","handleNextStep","note","paramAccountId","SendMoneyFirstStep_CustomList","min","parseFloat","SendMoneySecondStep_templateObject","SendMoneySecondStep","handleExpandNote","expandNote","SendMoneySecondStep_CustomList","SendMoneyThirdStep_templateObject","SendMoneyThirdStep","SendMoneyThirdStep_CustomList","SendMoney","checkAccount","paramId","id","send_money_SendMoneyContainer","send_money_SendMoneyFirstStep","send_money_SendMoneySecondStep","send_money_SendMoneyThirdStep","SendMoneyWithRouter","ProfileContainer_templateObject","ProfileContainer","ProfileContainer_CustomContainer","ProfileDetails_templateObject","ProfileDetails","ProfileDetails_CustomGrid","LockImage","hoverable","ProfileSection","ProfileYourKeys_templateObject","ProfileNotice_templateObject","Profile","profile_ProfileContainer","profile_ProfileSection","profile_ProfileDetails","ProfileWithRouter","createGlobalStyle","GlobalStyle_templateObject","theme","Routing","GlobalStyle","esm","basename","process","styled_components_browser_esm","responsive_ResponsiveContainer","react_router","exact","path","component","DashboardDetailWithRouter","Footer","Boolean","hostname","createBrowserHistory","createStore","combineReducers","router","connectRouter","applyMiddleware","routerMiddleware","thunk","createMiddleware","ReactDOM","render","es","components_Routing","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.9d2f1f6f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wallet.89d47110.png\";","module.exports = __webpack_public_path__ + \"static/media/icon-account.ab010182.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-recent.83086272.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-right.2c9f3083.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts.f6e4afac.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized.2f2edb66.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-logout.9cae8fb5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity.b48f419e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-transfer.f726da93.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-transaction.23b32201.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-account-grey.4d7da491.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-mobile-menu.1acfd8f4.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-help.f6c0707a.svg\";","module.exports = __webpack_public_path__ + \"static/media/near.584de59e.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-contract.35047442.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-grn.eaf2a8e1.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-blk.79cca70c.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-t-stake.cc91ad52.svg\";","module.exports = __webpack_public_path__ + \"static/media/near_logo.f25a0b86.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-deny.6946f17b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-app-default.11c1df80.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorize.377da011.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-add-blue.be7039c5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-up.b5be78eb.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-filter.1f33be14.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-left.5e7a861f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-m-search.2cea301b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-lock.255000ba.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-keys-grey.a339e56f.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-doc-grey.888e4b7b.svg\";","import nearlib from 'nearlib'\nimport sendJson from 'fetch-send-json'\n\nconst WALLET_CREATE_NEW_ACCOUNT_URL = `/create/`\n\nconst ACCOUNT_HELPER_URL = 'https://studio.nearprotocol.com/contract-api'\nconst CONTRACT_CREATE_ACCOUNT_URL = `${ACCOUNT_HELPER_URL}/account`\nconst NODE_URL = 'https://studio.nearprotocol.com/devnet'\n\nconst KEY_UNIQUE_PREFIX = '_4:'\nconst KEY_WALLET_ACCOUNTS = KEY_UNIQUE_PREFIX + 'wallet:accounts_v2'\nconst KEY_WALLET_TOKENS = KEY_UNIQUE_PREFIX + 'wallet:tokens_v2'\nconst KEY_ACTIVE_ACCOUNT_ID = KEY_UNIQUE_PREFIX + 'wallet:active_account_id_v2'\n\nconst ACCOUNT_ID_REGEX = /^[a-z0-9@._-]{5,32}$/\n\nexport class Wallet {\n   constructor() {\n      this.key_store = new nearlib.BrowserLocalStorageKeystore()\n      this.near = nearlib.Near.createDefaultConfig(NODE_URL)\n      this.account = new nearlib.Account(this.near.nearClient);\n      this.accounts = JSON.parse(\n         localStorage.getItem(KEY_WALLET_ACCOUNTS) || '{}'\n      )\n      this.tokens = JSON.parse(localStorage.getItem(KEY_WALLET_TOKENS) || '{}')\n      this.accountId = localStorage.getItem(KEY_ACTIVE_ACCOUNT_ID) || ''\n   }\n\n   save() {\n      localStorage.setItem(KEY_ACTIVE_ACCOUNT_ID, this.accountId)\n      localStorage.setItem(KEY_WALLET_ACCOUNTS, JSON.stringify(this.accounts))\n      localStorage.setItem(KEY_WALLET_TOKENS, JSON.stringify(this.tokens))\n   }\n\n   getAccountId() {\n      return this.accountId\n   }\n\n   selectAccount(accountId) {\n      if (!(accountId in this.accounts)) {\n         return false\n      }\n      this.accountId = accountId\n      this.save()\n   }\n\n   newAccessToken(app_url, app_title, contract_id) {\n      var token = ''\n      var possible =\n         'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n\n      for (var i = 0; i < 32; i++) {\n         token += possible.charAt(Math.floor(Math.random() * possible.length))\n      }\n\n      if (!this.isLegitAccountId(contract_id)) {\n         contract_id = ''\n      }\n\n      this.tokens[token] = {\n         app_url,\n         app_title,\n         contract_id,\n         account_id: this.accountId\n      }\n      this.save()\n      return token\n   }\n\n   isLegitAccountId(accountId) {\n      return ACCOUNT_ID_REGEX.test(accountId)\n   }\n\n   async sendTransaction(senderId, receiverId, methodName, amount, args) {\n      return await this.near.scheduleFunctionCall(\n         amount,\n         senderId,\n         receiverId,\n         methodName,\n         args || {}\n      )\n   }\n\n   async sendTokens(senderId, receiverId, amount) {\n      return this.near.waitForTransactionResult(\n         await this.near.sendTokens(amount, senderId, receiverId))\n   }\n\n   redirectToCreateAccount(options = {}, history) {\n      const param = {\n         next_url: window.location.search\n      }\n      if (options.reset_accounts) {\n         param.reset_accounts = true\n      }\n      //  let url = WALLET_CREATE_NEW_ACCOUNT_URL + \"?\" + $.param(param)\n      let url =\n         WALLET_CREATE_NEW_ACCOUNT_URL +\n         '?' +\n         Object.keys(param).map(\n            (p, i) =>\n               `${i ? '&' : ''}${encodeURIComponent(p)}=${encodeURIComponent(\n                  param[p]\n               )}`\n         )\n      history ? history.push(url) : window.location.replace(url)\n   }\n\n   isEmpty() {\n      return !this.accounts || !Object.keys(this.accounts).length\n   }\n\n   redirectIfEmpty(history) {\n      if (this.isEmpty()) {\n         this.redirectToCreateAccount({}, history)\n      }\n   }\n\n   async loadAccount(accountId, history) {\n      if (!(accountId in this.accounts)) {\n         throw new Error('Account ' + accountId + \" doesn't exist.\")\n      }\n      return await this.near.nearClient.viewAccount(accountId)\n   }\n\n   async checkAccount(accountId) {\n      if (accountId !== this.accountId) {\n         return await this.near.nearClient.viewAccount(accountId)\n      } else {\n         throw new Error('You are logged into account ' + accountId + ' .')\n      }\n   }\n\n   async checkNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n   }\n\n   async createNewAccount(accountId) {\n      if (accountId in this.accounts) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let remoteAccount = null\n      try {\n         remoteAccount = await this.near.nearClient.viewAccount(accountId)\n      } catch (e) {\n         // expected\n      }\n      if (!!remoteAccount) {\n         throw new Error('Account ' + accountId + ' already exists.')\n      }\n      let keyPair = await nearlib.KeyPair.fromRandomSeed();\n      return await new Promise((resolve, reject) => {\n         let data = JSON.stringify({\n            newAccountId: accountId,\n            newAccountPublicKey: keyPair.getPublicKey()\n         })\n\n         let xhr = new XMLHttpRequest()\n         xhr.open('POST', CONTRACT_CREATE_ACCOUNT_URL)\n         xhr.setRequestHeader('Content-Type', 'application/json')\n         xhr.onload = () => {\n            if (xhr.status === 200) {\n               this.key_store.setKey(accountId, keyPair).catch(console.log)\n               this.accounts[accountId] = true\n               this.accountId = accountId\n               this.save()\n               resolve(xhr)\n            } else if (xhr.status !== 200) {\n               reject(xhr.responseText)\n            }\n         }\n         xhr.send(data)\n      })\n   }\n\n   async addAccessKey(accountId, contractId, publicKey, successUrl) {\n      const addAccessKeyResponse = await this.account.addAccessKey(\n         accountId,\n         publicKey,\n         contractId,\n         '',  // methodName\n         '',  // fundingOwner\n         0,  // fundingAmount\n      );\n      try {\n         const result = await this.near.waitForTransactionResult(addAccessKeyResponse);\n         const parsedUrl = new URL(successUrl);\n         parsedUrl.searchParams.set('account_id', accountId);\n         parsedUrl.searchParams.set('public_key', publicKey);\n         const redirectUrl = parsedUrl.href;\n         if (result.status === \"Completed\") {\n            window.location.href = redirectUrl;\n         }\n      } catch (e) {\n         // TODO: handle errors\n         console.log(\"Error on adding access key \", e);\n      }\n   }\n\n   subscribeForMessages() {\n      //  window.addEventListener(\"message\", $.proxy(this.receiveMessage, this), false);\n      window.addEventListener('message', this.receiveMessage.bind(this), false)\n   }\n\n   clearState() {\n      this.accounts = {}\n      this.tokens = {}\n      this.accountId = ''\n      this.save()\n   }\n\n   async processTransactionMessage(action, data) {\n      let token = data['token'] || ''\n      if (!(token in this.tokens)) {\n         // Unknown token.\n         throw new Error('The token ' + token + ' is not found ')\n      }\n      let app_data = this.tokens[token]\n      let accountId = app_data['account_id']\n      if (!(accountId in this.accounts)) {\n         // Account is no longer authorized.\n         throw new Error(\n            'The account ' + accountId + ' is not part of the wallet anymore.'\n         )\n      }\n      let contract_id = app_data['contract_id']\n      let receiverId = data['receiver_id'] || contract_id\n      if (receiverId !== contract_id || !this.isLegitAccountId(receiverId)) {\n         // Bad receiver account ID or it doesn't match contract id.\n         throw new Error(\n            \"Bad receiver's account ID ('\" +\n               receiverId +\n               \"') or it doesn't match the authorized contract id\"\n         )\n      }\n      let amount = parseInt(data['amount']) || 0\n      if (amount !== 0) {\n         // Automatic authorization denied since for amounts greater than 0.\n         throw new Error('Transaction amount should be 0.')\n      }\n      let methodName = data['methodName'] || ''\n      if (!methodName) {\n         // Method name can't be empty since the amount is 0.\n         throw new Error(\"Method name can't be empty since the amount is 0\")\n      }\n      let args = data['args'] || {}\n      if (action === 'send_transaction') {\n         // Sending the transaction on behalf of the accountId\n         return await this.sendTransaction(\n            accountId,\n            receiverId,\n            methodName,\n            amount,\n            args\n         )\n      } else if (action === 'sign_transaction') {\n         // Signing the provided hash of the transaction. It's a security issue here.\n         // In the future we would sign the transaction above and don't depend on the given hash.\n         let hash = data['hash'] || ''\n         let signature = await this.near.nearClient.signer.signHash(\n            hash,\n            accountId\n         )\n         return signature\n      } else {\n         throw new Error('Unknown action')\n      }\n   }\n\n   requestCode(phoneNumber, accountId) {\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/requestCode`)\n   }\n\n   async validateCode(phoneNumber, accountId, securityCode) {\n      const key = this.key_store.getKey(accountId)\n      const signer = new nearlib.SimpleKeyStoreSigner(this.key_store);\n      const { signature } = key ? signer.signBuffer(Buffer.from(securityCode), accountId) : undefined;\n      return sendJson('POST', `${ACCOUNT_HELPER_URL}/account/${phoneNumber}/${accountId}/validateCode`, { securityCode, signature })\n   }\n\n   receiveMessage(event) {\n      let data\n      try {\n         data = JSON.parse(event.data)\n      } catch (e) {\n         // Silently dying.\n         return\n      }\n      const action = data['action'] || ''\n      if (action !== 'send_transaction' && action !== 'sign_transaction') {\n         // Unknown action, skipping silently.\n         return\n      }\n      const request_id = data['request_id'] || ''\n\n      let reply = d => event.source.postMessage(JSON.stringify(d), event.origin)\n\n      this.processTransactionMessage(action, data)\n         .then(result => {\n            console.log('Wallet: OK ' + action)\n            reply({\n               success: true,\n               request_id,\n               result\n            })\n         })\n         .catch(error => {\n            console.error('Wallet: failed to ' + action, error)\n            reply({\n               success: false,\n               request_id,\n               error\n            })\n         })\n   }\n}\n","module.exports = __webpack_public_path__ + \"static/media/footer-nearkat.3083dec6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-check-blue.6dc3bbf5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-activity-grey.c5c92b3d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-authorized-grey.4d2fc992.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-contacts-grey.c7048ab4.svg\";","import { parse } from 'query-string'\nimport { createActions } from 'redux-actions';\nimport { Wallet } from '../utils/wallet';\n\nexport const REFRESH_ACCOUNT = 'REFRESH_ACCOUNT'\nexport const LOADER_ACCOUNT = 'LOADER_ACCOUNT'\nexport const REFRESH_URL = 'REFRESH_URL'\n\nexport function handleRefreshAccount(wallet, history) {\n   return (dispatch, getState) => {\n      wallet.redirectIfEmpty(history)\n      const accountId = wallet.getAccountId()\n\n      dispatch({\n         type: LOADER_ACCOUNT,\n         loader: true\n      })\n\n      wallet\n         .loadAccount(accountId, history)\n         .then(v => {\n            dispatch({\n               type: REFRESH_ACCOUNT,\n               data: {\n                  accountId: accountId,\n                  authToken: wallet.newAccessToken(\n                     getState().account.url.app_title,\n                     getState().account.url.app_url,\n                     getState().account.url.contract_id\n                  ),\n                  amount: v['amount'] || 0,\n                  stake: v['stake'],\n                  nonce: v['nonce'],\n                  code_hash: v['code_hash'],\n                  accounts: wallet.accounts\n               }\n            })\n\n            dispatch({\n               type: LOADER_ACCOUNT,\n               loader: false\n            })\n         })\n         .catch(e => {\n            console.log(e)\n\n            if (e.message && e.message.indexOf('is not valid') !== -1) {\n               // We have an account in the storage, but it doesn't exist on blockchain. We probably nuked storage so just redirect to create account\n               wallet.clearState()\n               wallet.redirectToCreateAccount(\n                  {\n                     reset_accounts: true\n                  },\n                  history\n               )\n            }\n         })\n   }\n}\n\nexport function handleRefreshUrl(location) {\n   return dispatch => {\n      dispatch({\n         type: REFRESH_URL,\n         url: {\n            app_title: parse(location.search).title || '',\n            app_url: parse(location.search).app_url || '',\n            contract_id: parse(location.search).contract_id || '',\n            success_url: parse(location.search).success_url || '',\n            failure_url: parse(location.search).failure_url || '',\n            public_key: parse(location.search).public_key || ''\n         }\n      })\n   }\n}\n\nconst wallet = new Wallet()\n\nexport const { requestCode, validateCode } = createActions({\n   REQUEST_CODE: [\n      wallet.requestCode.bind(wallet),\n      () => ({ successCode: 'account.requestCode.success', errorCode: 'account.requestCode.error' })\n   ],\n   VALIDATE_CODE: [\n      wallet.validateCode.bind(wallet),\n      () => ({ successCode: 'account.validateCode.success', errorCode: 'account.validateCode.error' })\n   ]\n})\n\n\n\n\n","import { handleActions, combineActions } from 'redux-actions'\nimport {\n   REFRESH_ACCOUNT,\n   LOADER_ACCOUNT,\n   REFRESH_URL,\n   requestCode,\n   validateCode\n} from '../actions/account'\nimport reduceReducers from 'reduce-reducers';\n\nconst initialState = {\n   formLoader: false,\n   sentSms: false\n}\n\nconst loaderReducer = (state, { ready }) => {\n   if (typeof ready === 'undefined') {\n      return state\n   }\n   return { ...state, formLoader: !ready }\n}\n\nconst requestResultReducer = handleActions({\n   [combineActions(requestCode, validateCode)]: (state, { error, payload, meta }) => ({\n      ...state,\n      requestStatus: !!payload || error ? {\n         success: !error,\n         messageCode: error ? payload.messageCode || meta.errorCode : meta.successCode \n      } : undefined\n   })\n}, initialState)\n\nconst reducer = handleActions({\n   [requestCode]: (state, { error, ready }) => {\n      if (ready && !error) {\n         return { ...state, sentSms: true }\n      }\n      return state\n   },\n}, initialState)\n\n// TODO: Migrate everything to redux-actions\nfunction account(state = {}, action) {\n   switch (action.type) {\n      case REFRESH_ACCOUNT:\n         return {\n            ...state,\n            ...action.data\n         }\n      case LOADER_ACCOUNT: {\n         return {\n            ...state,\n            loader: action.loader\n         }\n      }\n      case REFRESH_URL: {\n         return {\n            ...state,\n            url: action.url\n         }\n      }\n      default:\n         return state\n   }\n}\n\nexport default reduceReducers(\n   initialState,\n   loaderReducer,\n   requestResultReducer,\n   reducer,\n   account)\n\n","import thunk from 'redux-thunk'\nimport { applyMiddleware, compose } from 'redux'\nimport { routerMiddleware } from 'connected-react-router'\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\n/**\n * Lets you dispatch special actions with a { promise } field.\n *\n * This middleware will turn them into a single action at the beginning,\n * and a single success (or failure) action when the `promise` resolves.\n *\n * For convenience, `dispatch` will return the promise so the caller can wait.\n */\nconst readyStatePromise = store => next => action => {\n    if (!action.payload || !action.payload.then) {\n      return next(action)\n    }\n  \n    function makeAction(ready, data) {\n      const newAction = Object.assign({}, action)\n      delete newAction.payload\n      return Object.assign(newAction, { ready }, data)\n    }\n  \n    next(makeAction(false))\n    return action.payload.then(\n      payload => next(makeAction(true, { payload })),\n      error => next(makeAction(true, { error: true, payload: error }))\n    )\n  }\n\nexport default (history) => composeEnhancers(\n    applyMiddleware(\n        routerMiddleware(history),\n        readyStatePromise,\n        thunk))\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter, Link } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport {\n   Image,\n   Menu,\n   Responsive,\n   Segment,\n   List,\n   Button,\n   Loader\n} from 'semantic-ui-react'\n\nimport SendImage from '../../images/icon-send.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\nimport LogoImage from '../../images/wallet.png'\nimport AccountGreyImage from '../../images/icon-account.svg'\nimport MobileMenuImage from '../../images/icon-mobile-menu.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   &&& {\n      padding-bottom: 240px;\n\n      .navbar {\n         padding: 0px;\n\n         &-main {\n            background-color: #24272a;\n            height: 72px;\n            border-radius: 0;\n            margin-bottom: 0;\n\n            .item {\n               font-family: 'benton-sans', sans-serif;\n               font-weight: 600;\n            }\n\n            .mainlogo {\n               padding-left: 0px;\n\n               > div {\n                  width: 50px;\n                  overflow: hidden;\n\n                  > img.image {\n                     width: 160px;\n                     max-width: none;\n                  }\n               }\n            }\n\n            .account-name {\n               padding-right: 0px;\n               text-align: right;\n\n               > div {\n                  font-size: 16px;\n                  letter-spacing: normal;\n                  padding-left: 0px;\n                  padding-right: 0px;\n                  text-overflow: ellipsis;\n                  overflow: hidden;\n                  width: 116px;\n                  color: #fff;\n\n                  :hover {\n                     color: #fff;\n                  }\n               }\n            }\n\n            .account-tokens {\n               line-height: 28px;\n               font-size: 16px;\n\n               color: #fff;\n\n               margin: 21px 0 0 10px;\n               height: 28px;\n               background: #111314;\n               border-radius: 12px;\n               padding: 0 10px;\n\n               letter-spacing: normal;\n\n               :hover {\n                  color: #fff;\n               }\n\n               .near {\n                  font-size: 18px;\n                  padding-left: 4px;\n               }\n            }\n\n            .account-arrow {\n               padding-right: 14px;\n\n               img {\n                  width: 20px;\n               }\n            }\n         }\n         &-sub {\n            margin: 0px;\n            padding: 0px;\n            background-color: #24272a;\n\n            &.hide {\n               display: none;\n            }\n\n            .main {\n               font-family: 'benton-sans', sans-serif;\n               font-weight: 400;\n               font-size: 14px;\n               padding: 18px 6px;\n               margin: 0 1rem;\n               border-top: 1px solid #4a4f54;\n\n               &.border {\n                  border-bottom: 1px solid #4a4f54;\n               }\n\n               a {\n                  color: #fff;\n                  letter-spacing: 2px;\n               }\n\n               img {\n                  margin-top: -4px;\n                  width: 24px;\n                  margin-right: 20px;\n                  display: inline-block !important;\n               }\n            }\n\n            .sub {\n               padding: 10px 1rem 0 1rem;\n\n               .item {\n                  font-family: 'benton-sans', sans-serif;\n                  font-weight: 400;\n                  font-size: 14px;\n                  padding: 8px 9px;\n\n                  a {\n                     color: #8fd6bd;\n                     letter-spacing: 2px;\n                  }\n\n                  img {\n                     margin-top: -2px;\n                     width: 18px;\n                     margin-right: 22px;\n                     display: inline-block !important;\n                  }\n               }\n            }\n\n            .switch-account {\n               background: #000;\n               padding: 0 1rem;\n\n               padding: 20px;\n\n               .item {\n                  padding: 0 10px;\n               }\n\n               h6.item {\n                  padding-bottom: 10px;\n                  border: 0px;\n               }\n\n               .account-title {\n                  height: 40px;\n                  line-height: 40px;\n                  color: #fff;\n                  font-weight: 500;\n                  border-bottom: 1px solid #323434;\n                  letter-spacing: normal;\n\n                  text-overflow: ellipsis;\n                  overflow: hidden;\n               }\n\n               button {\n                  width: 100%;\n                  border-radius: 30px;\n                  background: #24272a;\n                  color: #6ad1e3;\n\n                  :hover {\n                     background: #fff;\n                     color: #6ad1e3;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass MobileView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      dropdown: true\n   }\n\n   handleDropdown = () =>\n      this.setState(state => ({\n         dropdown: !state.dropdown\n      }))\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n      this.handleDropdown()\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.handleDropdown()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { dropdown } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            maxWidth={Responsive.onlyTablet.maxWidth}\n         >\n            <Segment basic className='navbar'>\n               <Menu\n                  className='navbar-main'\n                  // fixed={fixed ? 'top' : null}\n                  // fixed='top'\n                  // pointing={!fixed}\n                  borderless\n               >\n                  <Menu.Item as={Link} to='/' className='mainlogo'>\n                     <div>\n                        <Image src={LogoImage} />\n                     </div>\n                  </Menu.Item>\n\n                  {account.accountId && (\n                  <Menu.Menu position='right' onClick={this.handleDropdown}>\n                     <Menu.Menu position='right'>\n                        <Menu.Item className='account-name'>\n                           {account.loader || !account.accountId ? (\n                              <Loader active inline size='mini' />\n                           ) : (\n                              <div>@{account.accountId}</div>\n                           )}\n                        </Menu.Item>\n                        <Menu.Item className='account-tokens'>\n                           {account.loader || !account.accountId ? (\n                              <Loader active inline size='mini' />\n                           ) : (\n                              account.amount\n                           )}\n                           <span className='near'>Ⓝ</span>\n                        </Menu.Item>\n                        <Menu.Item className='account-arrow'>\n                           <Image\n                              src={dropdown ? MobileMenuImage : CloseImage}\n                           />\n                        </Menu.Item>\n                     </Menu.Menu>\n                  </Menu.Menu>\n                )}\n               </Menu>\n               <Segment\n                  basic\n                  className={`navbar-sub ${dropdown ? `hide` : ``}`}\n               >\n                  <Menu.Menu>\n                     <Menu.Item className='main'>\n                        <Link to='/' onClick={this.handleDropdown}>\n                           <Image src={RecentImage} />\n                           SUMMARY\n                        </Link>\n                     </Menu.Item>\n                     <Menu.Item className='main'>\n                        <Link to='/activity' onClick={this.handleDropdown}>\n                           <Image src={ActivityImage} />\n                           ACTIVITY\n                        </Link>\n                     </Menu.Item>\n                     <Menu.Item className='main border'>\n                        <Link to='/send-money' onClick={this.handleDropdown}>\n                           <Image src={SendImage} />\n                           SEND MONEY\n                        </Link>\n                     </Menu.Item>\n\n                     <Menu.Menu className='sub'>\n                        <Menu.Item>\n                           <Link to='/profile' onClick={this.handleDropdown}>\n                              <Image src={AccountGreyImage} />\n                              Profile\n                           </Link>\n                        </Menu.Item>\n                        <Menu.Item>\n                           <Link to='/contacts' onClick={this.handleDropdown}>\n                              <Image src={ContactsGreyImage} />\n                              Contacts\n                           </Link>\n                        </Menu.Item>\n                        <Menu.Item>\n                           <Link\n                              to='/authorized-apps'\n                              onClick={this.handleDropdown}\n                           >\n                              <Image src={AuthorizedGreyImage} />\n                              Authorized Apps\n                           </Link>\n                        </Menu.Item>\n                        <Menu.Item>\n                           <Link to='/' onClick={this.handleDropdown}>\n                              <Image src={LogoutImage} />\n                              Logout\n                           </Link>\n                        </Menu.Item>\n                     </Menu.Menu>\n                     <Segment basic className='switch-account'>\n                        <List>\n                           <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n\n                           {account.accounts &&\n                              Object.keys(account.accounts)\n                                 .filter(a => a !== account.accountId)\n                                 .map((account, i) => (\n                                    <List.Item\n                                       as='a'\n                                       key={`mf-${i}`}\n                                       onClick={() =>\n                                          this.handleSelectAccount(account)\n                                       }\n                                       className='account-title'\n                                    >\n                                       @{account}\n                                    </List.Item>\n                                 ))}\n                        </List>\n                        <Button onClick={this.redirectCreateAccount}>\n                           CREATE NEW ACCOUNT\n                        </Button>\n                     </Segment>\n                  </Menu.Menu>\n               </Segment>\n            </Segment>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(MobileView))\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport {\n   Image,\n   Menu,\n   Segment,\n   List,\n   Button,\n   Loader,\n   Popup\n} from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport AccountImage from '../../images/icon-account.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\nimport ContactsGreyImage from '../../images/icon-contacts.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized.svg'\nimport LogoutImage from '../../images/icon-logout.svg'\n\nimport styled from 'styled-components'\n\nconst CustomPopup = styled(Popup)`\n   &&& {\n      padding: 0px;\n      right: 12px !important;\n      top: 50px !important;\n      position: fixed !important;\n\n      .account-dropdown {\n         width: 290px;\n         min-height: 100px;\n         background-color: #f8f8f8;\n\n         padding: 20px;\n\n         .item {\n            color: #999999;\n         }\n\n         .submenu {\n            margin: -20px;\n            padding: 20px;\n            background: #fff;\n\n            .icon {\n               width: 20px;\n            }\n            .content {\n               line-height: 26px;\n               padding-left: 10px;\n            }\n            .item {\n               margin: 4px 0;\n            }\n         }\n\n         .switch-account {\n            margin-top: 40px;\n            margin-bottom: 0px;\n         }\n\n         &-scroll {\n            max-height: 226px;\n            overflow-y: auto;\n            width: 270px;\n            margin-top: 0px;\n\n            > .item {\n               width: 250px;\n               margin: 0px;\n               padding: 0px;\n\n               :hover {\n                  text-decoration: underline;\n               }\n               ::before {\n                  display: none;\n               }\n               ::after {\n                  display: none;\n               }\n            }\n         }\n\n         h6 {\n            padding-bottom: 6px;\n         }\n         .account-title {\n            height: 40px;\n            line-height: 40px;\n            color: #4a4f54;\n            font-weight: 500;\n            border-bottom: 2px solid #e6e6e6;\n            letter-spacing: normal;\n\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         button {\n            width: 100%;\n            border-radius: 30px;\n            background: #fff;\n            color: #6ad1e3;\n\n            :hover {\n               background: #6ad1e3;\n               color: #fff;\n            }\n         }\n      }\n\n      :hover {\n         .account-dropdown {\n            display: block;\n         }\n      }\n   }\n`\n\nconst DesktopPopup = ({\n   account,\n   handleSelectAccount,\n   redirectCreateAccount\n}) => (\n   <CustomPopup\n      trigger={\n         <Menu.Menu position='right' className='popup-trigger'>\n            <Menu.Item className='devider' />\n            <Menu.Item className='account-img'>\n               <Image src={AccountGreyImage} />\n            </Menu.Item>\n            <Menu.Item className='account-name'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  `@${account.accountId}`\n               )}\n            </Menu.Item>\n            <Menu.Item className='account-tokens'>\n               {account.loader || !account.accountId ? (\n                  <Loader active inline size='mini' />\n               ) : (\n                  account.amount\n               )}\n               <span className='near'>Ⓝ</span>\n            </Menu.Item>\n            <Menu.Item className='account-arrow'>\n               <Image src={ArrowDownImage} />\n            </Menu.Item>\n         </Menu.Menu>\n      }\n      on='click'\n      position='right center'\n   >\n      <Segment basic className='account-dropdown'>\n         <List className='submenu'>\n            <List.Item>\n               <List.Icon as={Image} src={AccountImage} />\n               <List.Content as={Link} to='/profile'>\n                  Profile\n               </List.Content>\n            </List.Item>\n            { false ?\n            <List.Item>\n               <List.Icon as={Image} src={ContactsGreyImage} />\n               <List.Content as={Link} to='/contacts'>\n                  Contacts\n               </List.Content>\n            </List.Item>\n            : null }\n            { false ?\n            <List.Item>\n               <List.Icon as={Image} src={AuthorizedGreyImage} />\n               <List.Content as={Link} to='authorized-apps'>\n                  Authorized Apps\n               </List.Content>\n            </List.Item>\n            : null }\n            { false ?\n            <List.Item>\n               <List.Icon as={Image} src={LogoutImage} />\n               <List.Content as={Link} to='/logout'>\n                  Logout\n               </List.Content>\n            </List.Item>\n            : null }\n         </List>\n         <List className='switch-account'>\n            <List.Item as='h6'>SWITCH ACCOUNT</List.Item>\n         </List>\n         <List className='account-dropdown-scroll'>\n            {account.accounts &&\n               Object.keys(account.accounts)\n                  .filter(a => a !== account.accountId)\n                  .map((account, i) => (\n                     <List.Item\n                        as='a'\n                        key={`mf-${i}`}\n                        onClick={() => handleSelectAccount(account)}\n                        className='account-title'\n                     >\n                        @{account}\n                     </List.Item>\n                  ))}\n         </List>\n         <Button onClick={redirectCreateAccount}>CREATE NEW ACCOUNT</Button>\n      </Segment>\n   </CustomPopup>\n)\n\nexport default DesktopPopup\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\n\nimport DesktopPopup from './DesktopPopup'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { Image, Menu, Responsive, Segment, Visibility } from 'semantic-ui-react'\n\nimport LogoImage from '../../images/wallet.png'\nimport HelpImage from '../../images/icon-help.svg'\nimport ActivityImage from '../../images/icon-activity.svg'\nimport RecentImage from '../../images/icon-recent.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport { handleRefreshAccount } from '../../actions/account'\n\nimport styled from 'styled-components'\n\nconst CustomResponsive = styled(Responsive)`\n   padding-bottom: 180px;\n\n   .spacer {\n      height: 72px;\n   }\n\n   &&& .navbar {\n      background-color: #24272a;\n      height: 72px;\n      border-radius: 0;\n\n      &-icon {\n         height: 24px;\n         margin-right: 14px;\n         display: inline-block;\n      }\n      .item {\n         color: white;\n         font-family: 'benton-sans', sans-serif;\n         font-weight: 600;\n         font-size: 14px;\n         padding-left: 0px;\n         padding-right: 30px;\n         letter-spacing: 2px;\n\n         .mainlogo {\n            width: 220px;\n         }\n      }\n\n      a.item:hover {\n         color: #6ad1e3;\n      }\n      .hover.item {\n         color: #6ad1e3;\n      }\n      .account-img {\n         width: 36px;\n         height: 36px;\n         background: #4a4f54;\n         padding-right: 0px;\n         padding-left: 6px;\n         border-radius: 18px;\n         margin-top: 16px;\n\n         > img {\n            width: 24px;\n            height: 24px;\n         }\n      }\n      .item.account-name {\n         font-size: 14px;\n         letter-spacing: normal;\n         padding-left: 10px;\n         padding-right: 10px;\n\n         :hover {\n            color: #fff;\n         }\n      }\n      .account-tokens {\n         line-height: 24px;\n         font-size: 14px;\n\n         color: #fff;\n\n         margin: 23px 20px 0 10px;\n         height: 24px;\n         background: #111314;\n         border-radius: 12px;\n         padding: 0 10px;\n\n         letter-spacing: normal;\n\n         :hover {\n            color: #fff;\n         }\n\n         .near {\n            font-size: 18px;\n            padding-left: 4px;\n         }\n      }\n\n      .account-arrow {\n         padding-right: 26px;\n\n         img {\n            width: 12px;\n         }\n      }\n\n      .popup-container {\n         .popup-trigger {\n            cursor: pointer;\n         }\n         .devider {\n            width: 2px;\n            height: 40px;\n            background: #5d5f60;\n            padding: 0px;\n            margin: 16px 28px 0 0;\n         }\n\n         .help {\n            padding-right: 12px;\n         }\n      }\n   }\n`\n\nconst getWidth = () => {\n   const isSSR = typeof window === 'undefined'\n   return isSSR ? Responsive.onlyTablet.minWidth : window.innerWidth\n}\n\nclass DesktopView extends Component {\n   static propTypes = {\n      children: PropTypes.node\n   }\n\n   static defaultProps = {\n      children: ''\n   }\n\n   state = {\n      fixed: false,\n      activeItem: 'home'\n   }\n\n   hideFixedMenu = () => this.setState({ fixed: false })\n\n   showFixedMenu = () => this.setState({ fixed: true })\n\n   handleItemClick = (e, { name }) => this.setState({ activeItem: name })\n\n   handleSelectAccount = accountId => {\n      this.wallet = new Wallet()\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet = new Wallet()\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { fixed } = this.state\n      const { account } = this.props\n\n      return (\n         <CustomResponsive\n            getWidth={getWidth}\n            minWidth={Responsive.onlyComputer.minWidth}\n         >\n            <Visibility\n               once={false}\n               onBottomPassed={this.showFixedMenu}\n               onBottomPassedReverse={this.hideFixedMenu}\n            >\n               <Segment className='spacer' basic />\n               <Menu\n                  className='navbar'\n                  // fixed={fixed ? 'top' : null}\n                  fixed='top'\n                  pointing={!fixed}\n                  borderless\n                  size='large'\n               >\n                  <Menu.Item as={Link} to='/'>\n                     <Image className='mainlogo' src={LogoImage} />\n                  </Menu.Item>\n                  <Menu.Item as={Link} to='/'>\n                     <Image className='navbar-icon' src={RecentImage} />\n                     SUMMARY\n                  </Menu.Item>\n                  { false ?\n                  <Menu.Item as={Link} to='/activity'>\n                     <Image className='navbar-icon' src={ActivityImage} />\n                     ACTIVITY\n                  </Menu.Item>\n                  : null }\n                  <Menu.Item as={Link} to='/send-money'>\n                     <Image className='navbar-icon' src={SendImage} />\n                     SEND MONEY\n                  </Menu.Item>\n                  {account.accountId && (\n                     <Menu.Menu position='right' className='popup-container'>\n                        <Menu.Item\n                           as='a'\n                           href='http://near.chat/'\n                           target='_blank'\n                           className='help'\n                        >\n                           <Image className='navbar-icon' src={HelpImage} />\n                        </Menu.Item>\n                        <DesktopPopup\n                           account={account}\n                           handleSelectAccount={this.handleSelectAccount}\n                           redirectCreateAccount={this.redirectCreateAccount}\n                        />\n                     </Menu.Menu>\n                  )}\n               </Menu>\n            </Visibility>\n\n            {this.props.children}\n         </CustomResponsive>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DesktopView))\n","import React, { Fragment } from 'react'\n\nimport MobileView from './MobileView'\nimport DesktopView from './DesktopView'\n\nconst ResponsiveContainer = ({ children }) => (\n   <Fragment>\n      <DesktopView>{children}</DesktopView>\n      <MobileView>{children}</MobileView>\n   </Fragment>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\nimport { Grid, Image, List, Item } from 'semantic-ui-react'\n\nimport LogoFooterImage from '../../images/near.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nimport styled from 'styled-components'\n\nconst FooterGrid = styled(Grid)`\n   position: absolute;\n   bottom: 0px;\n   width: 100%;\n\n   height: 100px;\n   background-color: #f8f8f8;\n\n   font-size: 12px;\n   font-weight: 300;\n   color: #999999;\n\n   &&& {\n      margin-bottom: 0px;\n      margin-left: 0px;\n\n      .near-logo {\n         .content {\n            a {\n               font-size: 12px;\n               font-weight: 300;\n               color: #999999;\n               text-decoration: underline;\n\n               :hover {\n                  text-decoration: none;\n               }\n            }\n            .color-brown-grey {\n               color: #e6e6e6;\n               padding: 0 6px;\n            }\n         }\n         .image {\n            width: 140px;\n            padding-left: 14px;\n\n            img {\n            }\n         }\n      }\n   }\n\n   &&&& .help {\n      padding-right: 0px;\n      padding-top: 10px;\n      padding-bottom: 0px;\n\n      > .list {\n         width: 230px;\n         height: 80px;\n         padding: 20px 0;\n         background: #fff;\n         text-align: left;\n\n         > img {\n            width: 80px;\n            position: absolute;\n            bottom: 0px;\n            right: 200px;\n         }\n\n         > h3 {\n            font-weight: 600 !important;\n            padding: 0 0 0 40px;\n            color: #999999 !important;\n\n            &.color {\n               color: #0072ce !important;\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         height: 180px;\n\n         .near-logo {\n            .item {\n            }\n            .content {\n               text-align: center;\n            }\n         }\n      }\n   }\n`\n\nconst ResponsiveContainer = () => (\n   <FooterGrid columns={2}>\n      <Grid.Column\n         textAlign='left'\n         verticalAlign='middle'\n         computer={10}\n         tablet={10}\n         mobile={16}\n      >\n         <Item.Group className='near-logo'>\n            <Item>\n               <Item.Image src={LogoFooterImage} />\n               <Item.Content>\n                  © 2019 NEAR Inc. All Rights Reserved.\n                  <br />\n                  <a href='/'>Terms of Service</a>\n                  <span className='color-brown-grey'>|</span>\n                  <a href='/'>Privacy Policy</a>\n               </Item.Content>\n            </Item>\n         </Item.Group>\n      </Grid.Column>\n      <Grid.Column\n         only='tablet computer'\n         computer={6}\n         tablet={6}\n         textAlign='right'\n         className='help'\n      >\n         <List floated='right'>\n            <List.Item as='h3'>Need Help?</List.Item>\n            <List.Item as='h3' className='color'>\n               <a href='https://discordapp.com/invite/gBtUFKR'>\n                  Contact Support\n               </a>\n            </List.Item>\n            <Image className='nearkat' src={NearkatImage} />\n         </List>\n      </Grid.Column>\n   </FooterGrid>\n)\n\nexport default ResponsiveContainer\n","import React from 'react'\n\nimport TContractImage from '../../images/icon-t-contract.svg'\n\nimport { Grid, List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&&& {\n      margin-top: 0px;\n\n      .other-assets {\n         background: #f8f8f8;\n         border-top: 2px solid #e6e6e6;\n         border-bottom: 4px solid #e6e6e6;\n         padding: 0px;\n\n         .column {\n            border-right: 2px solid #e6e6e6;\n            padding: 10px 0px 10px 18px;\n\n            :last-of-type {\n               border: 0px;\n            }\n\n            .content {\n               width: auto;\n            }\n\n            .icon {\n               background-image: url(${TContractImage});\n               background-repeat: no-repeat;\n               background-position: center top;\n               background-size: 24px 24px;\n               width: 24px;\n               height: 38px;\n               margin: 0 6px 0 0;\n            }\n\n            h5 {\n               font-weight: 600;\n               line-height: 16px;\n            }\n         }\n      }\n   }\n\n   && .other-assets-title {\n      padding-bottom: 6px;\n      color: #24272a;\n      font-weight: 600;\n   }\n\n   @media screen and (max-width: 991px) {\n      &&&& .other-assets {\n         .column {\n            .content {\n               h2 {\n                  font-size: 16px !important;\n               }\n            }\n            .icon {\n               background-size: 18px 24px;\n               width: 18px;\n               margin: 8px 6px 0 0;\n            }\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&&& .other-assets {\n         background: #fff;\n         margin-top: 18px !important;\n         border-right: 0px;\n\n         > .column {\n            width: 100% !important;\n            border-right: 0px;\n            border-bottom: 2px solid #f8f8f8;\n            padding: 6px 0px 6px 4px;\n\n            .list {\n               width: 100%;\n\n               .item {\n                  width: 100%;\n\n                  .content {\n                     float: right;\n                     text-align: right;\n\n                     h2 {\n                        font-size: 14px !important;\n                     }\n                  }\n                  .icon {\n                     height: 20px;\n                  }\n               }\n            }\n         }\n\n         &-title {\n            display: none;\n         }\n      }\n   }\n`\n\nconst DashboardOtherAssets = () => (\n   <CustomGrid>\n      <Grid.Row className='other-assets-title' as='h6'>\n         OTHER ASSETS\n      </Grid.Row>\n      <Grid.Row columns={6} className='other-assets'>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        12.125\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ETH\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        3.2501\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XRP\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        8.0987\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZEC\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        13.258\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        BNB\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        2.5897\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        XMR\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n         <Grid.Column>\n            <List horizontal>\n               <List.Item>\n                  <List.Icon />\n                  <List.Content>\n                     <List.Header as='h2' className='color-charcoal-grey'>\n                        1.2589\n                     </List.Header>\n                     <List.Description as='h5' className='color-brown-grey'>\n                        ZIL\n                     </List.Description>\n                  </List.Content>\n               </List.Item>\n            </List>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardOtherAssets\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport DashboardOtherAssets from './DashboardOtherAssets'\n\nimport ArrowGrnImage from '../../images/icon-arrow-grn.svg'\nimport ArrowRightImage from '../../images/icon-arrow-right.svg'\n\nimport { Container, Grid, Button, Header } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n\n         :first-child {\n            padding-left: 0px;\n         }\n      }\n\n      h1 {\n         color: #4a4f54;\n         padding-left: 0px;\n         line-height: 48px;\n      }\n   }\n\n   .near {\n      font-size: 48px;\n      color: #24272a;\n   }\n\n   &&& .send-money {\n      margin: -8px 0 0 0;\n\n      > .button {\n         width: 100%;\n         line-height: 60px;\n         border-radius: 30px;\n         border: solid 2px #5ace84;\n         font-size: 18px;\n         font-weight: 600;\n         letter-spacing: 2px;\n         color: #5ace84;\n         background: #fff;\n         text-align: left;\n         padding: 0 0 0 40px;\n\n         background-image: url(${ArrowGrnImage});\n         background-repeat: no-repeat;\n         background-position: 90% center;\n         background-size: 14px 20px;\n\n         :hover {\n            background-color: #5ace84;\n            color: #fff;\n            background-image: url(${ArrowRightImage});\n         }\n      }\n   }\n\n   &&& {\n      .right-section {\n         padding-left: 40px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      > .grid {\n         margin-left: 0px;\n         margin-right: 0px;\n      }\n\n      &&& .send-money {\n         margin-top: 20px;\n         margin-top: 0px;\n      }\n\n      &&& .creating-info {\n         padding-top: 24px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 12px 0;\n         }\n         .balance {\n            display: none;\n         }\n         .button {\n            width: 240px;\n            line-height: 44px;\n         }\n      }\n   }\n`\n\nconst DashboardContainer = ({ children, account }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row className='creating-info'>\n            <Grid.Column computer={12} tablet={11} mobile={16}>\n               <Header as='h1'>\n                  <span className='balance'>Balance: </span>\n                  <span className='color-black'>{account.amount}</span>\n                  <span className='near'>Ⓝ</span>\n               </Header>\n            </Grid.Column>\n            <Grid.Column\n               computer={4}\n               tablet={5}\n               mobile={16}\n               className='send-money'\n            >\n               <Button as={Link} to='/send-money'>\n                  SEND MONEY\n               </Button>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      { false ?\n      <DashboardOtherAssets />\n      : null }\n      {children}\n   </CustomContainer>\n)\n\nexport default DashboardContainer\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport CloseImage from '../../images/icon-close.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      padding: 20px;\n      margin: 12px 0 12px 0;\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n\n      @media screen and (max-width: 767px) {\n      }\n   }\n`\n\nconst DashboardNotice = ({ handleNotice }) => (\n   <CustomList horizontal className='box'>\n      <List.Item className='text'>\n         <List.Header>Here’s a Notice of some sort</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Fusce nec\n            ex non augue volutpat finibus. Suspendisse fringilla consequat magna\n            a finibus.{` `}\n            <a href='/'>Call to Action</a>\n         </List.Content>\n      </List.Item>\n      <List.Item className='img'>\n         <Image onClick={handleNotice} src={CloseImage} />\n      </List.Item>\n   </CustomList>\n)\n\nexport default DashboardNotice\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Grid, Image } from 'semantic-ui-react'\n\nimport ArrowRight from '../../images/icon-arrow-right.svg'\nimport ArrowBlkImage from '../../images/icon-arrow-blk.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGridRow = styled(Grid.Row)`\n   &&& {\n      margin-left: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .col-image {\n         margin-left: -33px;\n         width: 40px;\n         flex: 0 0 40px;\n         padding-left: 0px;\n\n         .main-image {\n            border: 1px solid #e6e6e6;\n            background: #fff;\n            border-radius: 14px;\n            padding: 5px;\n            width: 26px;\n            height: 26px;\n            margin: 0 24px 0 18px;\n            overflow: hidden;\n\n            img {\n               margin: 0 0 0 0;\n            }\n         }\n      }\n\n      &.wide {\n         margin-left: 0px;\n         border-left: 0px;\n\n         .col-image {\n            margin-left: 6px;\n            width: 56px;\n            flex: 0 0 56px;\n         }\n\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 24px 0 0;\n\n            img {\n               padding-top: 10px;\n            }\n         }\n      }\n\n      .main-row-title {\n         font-weight: 600;\n         width: auto;\n         padding-right: 0px;\n         flex: 1;\n      }\n\n      .dropdown-image-right {\n         width: 10px;\n         margin: 0 0 0 0;\n         cursor: pointer;\n      }\n      .dropdown-image {\n         float: right;\n      }\n\n      &.dropdown-down {\n         background-color: #f8f8f8;\n\n         .dropdown-image-right {\n            width: 10px;\n            top: 0px;\n            left: 12px;\n            cursor: pointer;\n         }\n      }\n\n      &.showsub {\n         .dropdown-image-right {\n            left: -24px;\n         }\n      }\n      &.showsub.dropdown-down {\n         .dropdown-image-right {\n            left: -6px;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &.showsub {\n            .dropdown-image-right {\n               left: -14px;\n            }\n         }\n         &.showsub.dropdown-down {\n            .dropdown-image-right {\n               left: 4px;\n            }\n         }\n\n         .main-row-title {\n            a {\n               font-size: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst ListItem = ({\n   row,\n   i,\n   wide = false,\n   showSub = false,\n   toggleShowSub,\n   showSubOpen\n}) => (\n   <CustomGridRow\n      verticalAlign='middle'\n      className={`border-bottom-light ${wide ? `wide` : ``} ${\n         showSub && showSubOpen === i ? `dropdown-down` : ``\n      } ${showSub ? `showsub` : ``}`}\n   >\n      <Grid.Column computer={8} tablet={wide ? 14 : 8} mobile={wide ? 14 : 10}>\n         <Grid verticalAlign='middle'>\n            <Grid.Column className='col-image'>\n               <div className='main-image'>\n                  <Image src={row[0]} align='left' />\n               </div>\n            </Grid.Column>\n            <Grid.Column className='main-row-title'>\n               <Link to='/' className='color-black'>\n                  {row[1]}\n               </Link>\n               {row[2] && (\n                  <span className='font-small'>\n                     <br />\n                     <Link to='/'>{row[2]}</Link>\n                  </span>\n               )}\n            </Grid.Column>\n         </Grid>\n      </Grid.Column>\n      <Grid.Column\n         computer={8}\n         tablet={wide ? 2 : 8}\n         mobile={wide ? 2 : 6}\n         textAlign='right'\n      >\n         {wide ? (\n            <Image\n               onClick={() => toggleShowSub(i)}\n               src={showSub && showSubOpen === i ? ArrowBlkImage : ArrowRight}\n               className='dropdown-image dropdown-image-right'\n            />\n         ) : (\n            <span className='font-small'>{row[3]}</span>\n         )}\n      </Grid.Column>\n   </CustomGridRow>\n)\n\nexport default ListItem\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport ListItem from './ListItem'\n\nimport { Loader, Grid, Dimmer, Button, Header, Image } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      margin-bottom: 20px;\n\n      .row:first-child {\n         padding-bottom: 0px;\n      }\n\n      .row:last-child {\n         padding: 14px 0 0 4px;\n         margin-left: 20px;\n         border-left: 4px solid #f8f8f8;\n      }\n\n      .dashboard-header {\n         padding: 14px 0 10px 0;\n      }\n\n      link.view-all,\n      button.view-all,\n      a.view-all {\n         background: #f8f8f8;\n         margin: 0;\n         padding: 10px 20px;\n         color: #0072ce;\n         font-weight: 600;\n         border-radius: 20px;\n         border: 2px solid #f8f8f8;\n\n         :hover {\n            background: #fff;\n         }\n      }\n\n      .column-icon {\n         width: 28px;\n         display: inline-block;\n         margin: -4px 10px 0 8px;\n      }\n   }\n`\n\nconst DashboardActivity = ({ loader, image, title, to, activity }) => (\n   <CustomGrid>\n      <Grid.Row>\n         <Grid.Column className='dashboard-header' textAlign='left' width={16}>\n            <Header className='h2'>\n               <Image className='column-icon' src={image} />\n               {title}\n            </Header>\n         </Grid.Column>\n      </Grid.Row>\n      <Dimmer inverted active={loader}>\n         <Loader />\n      </Dimmer>\n\n      {activity.map((row, i) => (\n         <ListItem key={`d-${i}`} row={row} />\n      ))}\n\n      <Grid.Row>\n         <Grid.Column textAlign='left' width={16}>\n            <Button as={Link} to={to} className='view-all'>\n               VIEW ALL\n            </Button>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default DashboardActivity\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport DashboardContainer from './DashboardContainer'\nimport DashboardSection from './DashboardSection'\nimport DashboardActivity from './DashboardActivity'\n\nimport activityGreyImage from '../../images/icon-activity-grey.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport AuthorizedGreyImage from '../../images/icon-authorized-grey.svg'\nimport ContactsGreyImage from '../../images/icon-contacts-grey.svg'\n\nimport TStakeImage from '../../images/icon-t-stake.svg'\nimport TTransferImage from '../../images/icon-t-transfer.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nclass DashboardDetail extends Component {\n   state = {\n      loader: false,\n      notice: true,\n      activity: [],\n      authorizedaps: [],\n      newcontacts: []\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [\n                  TTransferImage,\n                  'Sent: 125 Ⓝ  to @jake.near',\n                  'Some details about this activity here',\n                  '3 min ago'\n               ],\n               [\n                  TStakeImage,\n                  'You Staked 10 tokens',\n                  'Some details about this activity here',\n                  '20 min ago'\n               ],\n               [\n                  TTransferImage,\n                  'Sent: 125 Ⓝ  to @vlad.near',\n                  'Some details about this activity here',\n                  '1 hr ago'\n               ]\n            ],\n            authorizedaps: [\n               [NearkatImage, 'NEAR Place', '', '3 hrs ago'],\n               [NearkatImage, 'Cryptocats', '', '5 hrs ago'],\n               [NearkatImage, 'Knights App', '', '2 days ago']\n            ],\n            newcontacts: [\n               [AccountGreyImage, 'Alex Skidanov ', '', 'Connected 2 days ago'],\n               [AccountGreyImage, '@vlad.near', '', '2 days ago'],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  '',\n                  'Connected 2 days ago'\n               ]\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   handleNotice = () => {\n      this.setState(state => ({\n         notice: !state.notice\n      }))\n   }\n\n   render() {\n      const {\n         loader,\n         notice,\n         activity,\n         authorizedaps,\n         newcontacts\n      } = this.state\n\n      return (\n         <DashboardContainer account={this.props.account}>\n            { false ?\n            <DashboardSection notice={notice} handleNotice={this.handleNotice}>\n               <DashboardActivity\n                  loader={loader}\n                  image={activityGreyImage}\n                  title='Activity'\n                  to='/'\n                  activity={activity}\n               />\n               <DashboardActivity\n                  loader={loader}\n                  image={AuthorizedGreyImage}\n                  title='Authorized Apps'\n                  to='/authorized-apps'\n                  activity={authorizedaps}\n               />\n               <DashboardActivity\n                  loader={loader}\n                  image={ContactsGreyImage}\n                  title='New Contacts'\n                  to='/contacts'\n                  activity={newcontacts}\n               />\n            </DashboardSection>\n            : null }\n         </DashboardContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(DashboardDetail))\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Grid, List, Responsive } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .username-row {\n         padding-bottom: 0px;\n         margin-left: -1rem;\n      }\n\n      .alert-info {\n         font-size: 18px;\n         font-weight: 600;\n         line-height: 64px;\n         margin: 0 0 0 0;\n         padding-left: 0px;\n\n         &.problem {\n            color: #ff585d;\n         }\n         &.success {\n            color: #6ad1e3;\n         }\n      }\n\n      .note-box {\n         padding-left: 30px;\n\n         .border-left-bold {\n            padding-bottom: 20px;\n         }\n      }\n\n      .note-info {\n         .title {\n            letter-spacing: 2px;\n            font-weight: 600;\n            line-height: 20px;\n            color: #4a4f54;\n         }\n      }\n\n      .form-row {\n         margin-left: -1rem;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n      .note-box {\n         padding-left: 0px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         .username-row {\n            margin-left: 0;\n         }\n\n         .alert-info {\n            padding: 0 0 6px 24px;\n            line-height: 34px;\n            font-size: 14px;\n            margin-top: -6px;\n         }\n\n         .note-box {\n            padding-left: 1rem;\n            margin-top: 10px;\n         }\n\n         .note-box {\n            .border-left-bold {\n               padding-bottom: 0px;\n            }\n         }\n\n         .form-row {\n            padding-top: 6px;\n            margin-left: 0;\n         }\n\n         &&& .note-info {\n            font-size: 12px;\n         }\n      }\n   }\n`\n\nconst CreateAccountSection = ({ successMessage, errorMessage, children }) => (\n   <CustomGrid>\n      <Grid.Row className='username-row'>\n         <Grid.Column as='h3' computer={16} tablet={16} mobile={16}>\n            Choose a Username\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='form-row'>\n         <Grid.Column computer={8} tablet={8} mobile={16}>\n            {children}\n         </Grid.Column>\n         <Grid.Column computer={8} tablet={8} mobile={16}>\n            <Grid className='note-box'>\n               {successMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info success'>\n                        Congrats! this name is available.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n               {errorMessage && (\n                  <Responsive\n                     as={Grid.Row}\n                     minWidth={Responsive.onlyTablet.minWidth}\n                  >\n                     <Grid.Column className='alert-info problem'>\n                        Username is taken. Try something else.\n                     </Grid.Column>\n                  </Responsive>\n               )}\n\n               <Grid.Row>\n                  <Grid.Column className='border-left-bold'>\n                     <List className='note-info'>\n                        <List.Item className='title'>NOTE</List.Item>\n                        <List.Item>\n                           Your username can be 5-32 characters\n                        </List.Item>\n                        <List.Item>\n                           long and contain any of the following:\n                        </List.Item>\n                        <List.Item>• Lowercase characters (a-z)</List.Item>\n                        <List.Item>• Digits (0-9)</List.Item>\n                        <List.Item>• Special characters (@._-)</List.Item>\n                     </List>\n                  </Grid.Column>\n               </Grid.Row>\n            </Grid>\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nCreateAccountSection.propTypes = {\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired\n}\n\nexport default CreateAccountSection\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Form } from 'semantic-ui-react'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst CustomFormInput = styled(Form.Input)`\n   &&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background: 0;\n\n      position: relative;\n\n      :focus {\n         border-color: #6ad1e3;\n      }\n   }\n\n   &&&&& .spinner {\n      margin-right: 20px;\n\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n\n   &.problem > .input > input,\n   &.problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   &.success > .input > input,\n   &.success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n`\n\nconst CreateAccoungFormInput = ({\n   formLoader,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage\n}) => (\n   <CustomFormInput\n      loading={formLoader}\n      className={`create ${successMessage ? 'success' : ''}${\n         errorMessage ? 'problem' : ''\n      }`}\n      name='accountId'\n      value={accountId}\n      onChange={handleChangeAccountId}\n      placeholder='example: satoshi.near'\n   />\n)\n\nCreateAccoungFormInput.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   handleChangeAccountId: PropTypes.func.isRequired,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired\n}\n\nexport default CreateAccoungFormInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'react-router-dom'\nimport { Segment, Form, Button, Responsive } from 'semantic-ui-react'\n\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport CreateAccoungFormInput from './CreateAccoungFormInput'\n\nimport styled from 'styled-components'\n\nconst AccountForm = styled(Form)`\n   && button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n      font-weight: 600;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .recoverAccount {\n      display: block;\n      margin-top: 2em;\n      font-size: 18px\n   }\n\n   @media screen and (max-width: 767px) {\n   }\n`\n\nconst CreateAccountForm = ({\n   formLoader,\n   accountId,\n   successMessage,\n   errorMessage,\n   handleSubmit,\n   handleChangeAccountId,\n   handleRecaptcha\n}) => (\n   <AccountForm autoComplete='off' onSubmit={handleSubmit}>\n      <CreateAccoungFormInput\n         formLoader={formLoader}\n         accountId={accountId}\n         handleChangeAccountId={handleChangeAccountId}\n         successMessage={successMessage}\n         errorMessage={errorMessage}\n      />\n\n      <Responsive maxWidth={Responsive.onlyMobile.maxWidth}>\n         {successMessage && (\n            <Segment basic className='alert-info success'>\n               Congrats! this name is available.\n            </Segment>\n         )}\n         {errorMessage && (\n            <Segment basic className='alert-info problem'>\n               Username is taken. Try something else.\n            </Segment>\n         )}\n      </Responsive>\n\n      <ReCAPTCHA\n         sitekey='6LfNjp8UAAAAAByZu30I-2-an14USj3yVbbUI3eN'\n         onChange={handleRecaptcha}\n      />\n\n      <Button type='submit' disabled={!successMessage}>\n         CREATE ACCOUNT\n      </Button>\n\n      <Link to='/recover-account' className=\"recoverAccount\">I already have an account</Link>\n   </AccountForm>\n)\n\nCreateAccountForm.propTypes = {\n   formLoader: PropTypes.bool.isRequired,\n   accountId: PropTypes.string,\n   successMessage: PropTypes.bool.isRequired,\n   errorMessage: PropTypes.bool.isRequired,\n   handleSubmit: PropTypes.func.isRequired,\n   handleChangeAccountId: PropTypes.func.isRequired\n}\n\nexport default CreateAccountForm\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst DisclaimerGrid = styled(Grid)`\n   && .disclaimer {\n      margin-left: 1rem;\n      margin-right: 1rem;\n      margin-top: 100px;\n\n      > .column {\n         padding-left: 0px;\n         padding-right: 0px;\n      }\n   }\n   .disclaimer-info {\n      font-weight: 600;\n      letter-spacing: 2px;\n   }\n\n   @media screen and (max-width: 767px) {\n      && .disclaimer {\n         margin-top: 50px;\n         font-size: 12px;\n      }\n   }\n`\n\nconst Disclaimer = () => (\n    <DisclaimerGrid>\n        <Grid.Row className='disclaimer border-top-bold'>\n        <Grid.Column computer={16} tablet={16} mobile={16}>\n            <span className='disclaimer-info'>DISCLAIMER: </span>\n            This is a developers&apos; preview Wallet. It should be used for\n            NEAR Protocol DevNet only. Learn more at <a href='http://nearprotocol.com'>nearprotocol.com</a>\n        </Grid.Column>\n        </Grid.Row>\n    </DisclaimerGrid>\n)\n\nexport default Disclaimer\n","import React from 'react'\n\nimport { Image, List } from 'semantic-ui-react'\n\nimport NearLogoImage from '../../images/near_logo.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   background: #f8f8f8;\n   width: 360px;\n   float: right;\n\n   img {\n      width: 160px;\n   }\n\n   .text {\n      margin: 0 16px 16px 64px;\n      line-height: 20px !important;\n      color: #24272a;\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& {\n         margin-top: 14px;\n         float: left;\n         width: 100%;\n      }\n   }\n`\n\nconst NearInfo = () => (\n   <CustomList className='box'>\n      <List.Item>\n         <Image src={NearLogoImage} />\n      </List.Item>\n      <List.Item className='text'>\n         NEAR is a scalable computing and storage platform that changes how the\n         web works for the better.{' '}\n         <a href='https://nearprotocol.com/'>Learn More</a>\n      </List.Item>\n   </CustomList>\n)\n\nexport default NearInfo\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport { parse } from 'query-string'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n         }\n         h1 {\n            margin-bottom: 0px;\n         }\n         h2 {\n            font-size: 16px !important;\n            line-height: 22px !important;\n            color: #999 !important;\n         }\n         .column.add {\n            text-align: left;\n            padding-top: 0px !important;\n         }\n      }\n   }\n`\n\nconst CreateAccountContainer = ({ loader, children, location }) => (\n   <CustomContainer>\n      <Grid stackable>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column>\n               <h1>Create Account</h1>\n               <h2>\n                  Creating a NEAR account is easy. Just choose a username and\n                  you’re ready to go.\n               </h2>\n               {parse(location.search).reset_accounts && (\n                  <Header as='h3' className='color-blue'>\n                     You have been redirected to this page because we had to\n                     reset the developer accounts. Please create a new account.\n                     We apologize for the inconveience.\n                  </Header>\n               )}\n            </Grid.Column>\n            <Grid.Column className='add'>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nCreateAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default CreateAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport CreateAccountSection from './CreateAccountSection'\nimport CreateAccountForm from './CreateAccountForm'\nimport CreateAccountContainer from './CreateAccountContainer'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass CreateAccount extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet)\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkNewAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.wallet.isLegitAccountId(this.state.accountId)) {\n         return false\n      }\n\n      this.setState(() => ({\n         successMessage: false,\n         errorMessage: false,\n         formLoader: true\n      }))\n\n      this.wallet\n         .createNewAccount(this.state.accountId)\n         .then(d => {\n            this.setState(() => ({\n               successMessage: true\n            }))\n            this.props.history.push(`/set-recovery/${this.state.accountId}`)\n         })\n         .catch(e => {\n            this.setState(() => ({\n               errorMessage: true\n            }))\n            console.error('Error creating account:', e)\n         })\n         .finally(() => {\n            this.setState(() => ({\n               formLoader: false\n            }))\n         })\n   }\n\n   handleRecaptcha = value => {\n      console.log(value)\n   }\n\n   render() {\n      const { loader } = this.state\n\n      return (\n         <CreateAccountContainer loader={loader} location={this.props.location}>\n            <CreateAccountSection {...this.state}>\n               <CreateAccountForm\n                  {...this.state}\n                  handleSubmit={this.handleSubmit}\n                  handleRecaptcha={this.handleRecaptcha}\n                  handleChangeAccountId={this.handleChangeAccountId}\n               />\n            </CreateAccountSection>\n         </CreateAccountContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const CreateAccountWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(CreateAccount)\n","import React from 'react'\nimport { Grid, Responsive } from 'semantic-ui-react'\nimport styled from 'styled-components'\n\nconst RequestStatusBoxGrid = styled(Grid)`\n   &&& .alert-info {\n      font-size: 18px;\n      font-weight: 600;\n      line-height: 64px;\n      margin: 0 0 0 0;\n      padding-left: 0px;\n\n      &.problem {\n         color: #ff585d;\n      }\n      &.success {\n         color: #6ad1e3;\n      }\n   }\n\n   && {\n      padding-left: 30px;\n   }\n\n   @media screen and (max-width: 991px) {\n      .note-box {\n         padding-left: 0px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .alert-info {\n         padding: 0 0 0 24px;\n         line-height: 34px;\n         font-size: 14px;\n      }\n\n      && {\n         padding-left: 1rem;\n         margin-top: 10px;\n      }\n  }\n`\n/**\n * Renders request status.\n *\n * @param requestStatus {object} request status, can be null in case not completed yet / no outgoing request\n * @param requestStatus.success {boolean} true if request was succesful\n * @param requestStatus.messageCode {string} localization code of status message to display\n */\nconst RequestStatusBox = ({ requestStatus }) => (\n   requestStatus ?\n      <RequestStatusBoxGrid>\n         <Responsive\n            as={Grid.Row}\n            minWidth={Responsive.onlyTablet.minWidth}\n         >\n            <Grid.Column className={`alert-info ${requestStatus.success ? 'success' : 'problem'}`}>\n               {requestStatus.messageCode}\n            </Grid.Column>\n         </Responsive>\n      </RequestStatusBoxGrid>\n      : null\n)\n\nexport default RequestStatusBox\n","import React from 'react'\nimport { Grid } from 'semantic-ui-react'\n\nimport RequestStatusBox from '../common/RequestStatusBox'\n\nconst AccountFormSection = ({ requestStatus, children }) => (\n   <Grid>\n      <Grid.Column computer={8} tablet={8} mobile={16}>\n         {children}\n      </Grid.Column>\n      <Grid.Column computer={8} tablet={8} mobile={16}>\n         <RequestStatusBox requestStatus={requestStatus} />\n      </Grid.Column>\n   </Grid>\n)\n\nexport default AccountFormSection\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   &&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background: 0;\n\n      position: relative;\n\n      :focus {\n         border-color: #6ad1e3;\n      }\n   }\n\n   &&&&& .spinner {\n      margin-right: 20px;\n\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 1em;\n\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n\n   & h3 {\n      margin-bottom: 1rem;\n   }\n\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n`\n\nconst SetRecoveryInfoForm = ({\n   formLoader,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''} ${formLoader ? 'loading' : '' }`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\n               placeholder='example: +1 555 123 4567'\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>PROTECT ACCOUNT</Button>\n         <Link to=\"/dashboard\" className=\"ui button\">NOT NOW</Link>\n      </Form.Field>\n   </RecoveryInfoForm>\n)\n\nexport default SetRecoveryInfoForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n\n      h1 {\n         color: #4a4f54;\n         padding-bottom: 24px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-right: 1rem;\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst SetRecoveryInfoContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row className='creating-info'>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <Header as='h1'>Protect your Account</Header>\n               <Header as='h2'>\n                  Enter your phone number to make your account easy for you to recover in the future.\n               </Header>\n               <Header as='h3' className='color-blue'>\n                  If you want to backup your account keys manually, you can skip this.\n                  However if you choose this option, we won't be able to assist you with account recovery.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nSetRecoveryInfoContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default SetRecoveryInfoContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport SetRecoveryInfoForm from './SetRecoveryInfoForm'\nimport SetRecoveryInfoContainer from './SetRecoveryInfoContainer'\nimport { requestCode, validateCode } from '../../actions/account';\n\nclass SetRecoveryInfo extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\n      } else {\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\n            .then(({error}) => {\n               if (error) return\n\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\n               setTimeout(() => {\n                  this.props.history.push(nextUrl)\n               }, 1500)\n            })\n      }\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <SetRecoveryInfoContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <SetRecoveryInfoForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n               />\n            </AccountFormSection>\n         </SetRecoveryInfoContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const SetRecoveryInfoWithRouter = connect(mapStateToProps)(SetRecoveryInfo)\n","import React from 'react'\nimport { Form, Input, Button } from 'semantic-ui-react'\nimport PhoneInput from 'react-phone-number-input'\n\nimport ProblemsImage from '../../images/icon-problems.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport styled from 'styled-components'\n\nconst RecoveryInfoForm = styled(Form)`\n   &&& input {\n      width: 100%;\n      height: 64px;\n      border: 4px solid #f8f8f8;\n      padding: 0 0 0 20px;\n\n      font-size: 18px;\n      color: #4a4f54;\n      font-weight: 400;\n      background: 0;\n\n      position: relative;\n\n      :focus {\n         border-color: #6ad1e3;\n      }\n   }\n\n   &&&&& .spinner {\n      margin-right: 20px;\n\n      :before,\n      :after {\n         top: 28px;\n         width: 24px;\n         height: 24px;\n      }\n   }\n\n   .problem > .input > input {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .problem > .input > input:focus {\n      background: url(${ProblemsImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   .success > .input > input {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n   .success > .input > input:focus {\n      background: url(${CheckBlueImage}) right 22px center no-repeat;\n      background-size: 24px 24px;\n   }\n\n   &&& button {\n      width: 288px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 10px 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n         opacity: 1 !important;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   .ui.button {\n      height: 60px;\n      margin: 10px 0 0 1em;\n\n      background-color: #fff;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n      color: #999999;\n\n      font-size: 18px;\n      line-height: 24px;\n      letter-spacing: 2px;\n\n      :hover {\n         background-color: #e6e6e6;\n         color: #fff;\n      }\n   }\n\n   & h3 {\n      margin-bottom: 1rem;\n   }\n\n   select.react-phone-number-input__country-select {\n      height: 100%;\n   }\n`\n\nconst RecoverAccountForm = ({\n   formLoader,\n   accountId,\n   phoneNumber,\n   sentSms,\n   isLegit,\n   requestStatus,\n   handleSubmit,\n   handleChange\n}) => (\n   <RecoveryInfoForm autoComplete='off' onSubmit={handleSubmit}>\n      <Form.Field>\n         <h3>Username</h3>\n         <Form.Input\n            loading={formLoader}\n            className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''}`}\n            name='accountId'\n            value={accountId}\n            onChange={handleChange}\n            placeholder='example: satoshi.near'\n            disabled={sentSms}\n         />\n      </Form.Field>\n      {!sentSms && (\n         <Form.Field>\n            <h3>Phone Number</h3>\n            <PhoneInput\n               className={`create ${requestStatus ? (requestStatus.success ? 'success' : 'problem') : ''} ${formLoader ? 'loading' : '' }`}\n               name='phoneNumber'\n               value={phoneNumber}\n               onChange={ value => handleChange(null, { name: 'phoneNumber', value })}\n               placeholder='example: +1 555 123 4567'\n            />\n         </Form.Field>\n      )}\n\n      {sentSms && (\n         <Form.Field>\n            <h3>Security Code from SMS</h3>\n            <Input\n               name='securityCode'\n               onChange={handleChange}\n               placeholder='example: 123456'\n            />\n         </Form.Field>\n      )}\n\n      <Form.Field>\n         <Button type='submit' disabled={!isLegit}>RECOVER ACCOUNT</Button>\n      </Form.Field>\n   </RecoveryInfoForm>\n)\n\nexport default RecoverAccountForm\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Container, Loader, Grid, Dimmer, Header } from 'semantic-ui-react'\n\nimport Disclaimer from '../common/Disclaimer'\nimport NearInfo from './NearInfo'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n\n      h1 {\n         color: #4a4f54;\n         padding-bottom: 24px;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-right: 1rem;\n      }\n   }\n`\n\n/* eslint-disable jsx-a11y/accessible-emoji */\nconst RecoverAccountContainer = ({ loader, children }) => (\n   <CustomContainer>\n      <Grid>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         <Grid.Row className='creating-info'>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <Header as='h1'>Recover your Account</Header>\n               <Header as='h2'>\n                  Please enter your account name and phone number you used to protect account.\n               </Header>\n            </Grid.Column>\n            <Grid.Column computer={8} tablet={8} mobile={16}>\n               <NearInfo />\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n\n      <Disclaimer />\n   </CustomContainer>\n)\n\nRecoverAccountContainer.propTypes = {\n   loader: PropTypes.bool.isRequired,\n   children: PropTypes.element.isRequired,\n   location: PropTypes.object.isRequired\n}\n\nexport default RecoverAccountContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { isValidPhoneNumber } from 'react-phone-number-input'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport AccountFormSection from './AccountFormSection'\nimport RecoverAccountForm from './RecoverAccountForm'\nimport RecoverAccountContainer from './RecoverAccountContainer'\nimport { requestCode, validateCode } from '../../actions/account';\n\nclass RecoverAccount extends Component {\n   state = {\n      loader: false,\n      phoneNumber: '',\n      isLegit: false,\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         isLegit: this.isLegitField(name, value)\n      }))\n   }\n\n   isLegitField(name, value) {\n      // TODO: Use some validation framework?\n      let validators = {\n         accountId: value => this.wallet.isLegitAccountId(value),\n         phoneNumber: isValidPhoneNumber,\n         securityCode: value => !!value.trim().match(/^\\d{6}$/)\n      }\n      return validators[name](value);\n   }\n\n   handleSubmit = e => {\n      e.preventDefault()\n\n      if (!this.state.isLegit) {\n         return false\n      }\n\n      const { dispatch } = this.props;\n      if (!this.props.sentSms) {\n         dispatch(requestCode(this.state.phoneNumber, this.props.accountId))\n      } else {\n         dispatch(validateCode(this.state.phoneNumber, this.props.accountId, this.state.securityCode))\n            .then(({error}) => {\n               if (error) return\n\n               let nextUrl = `/login/${(this.props.url && this.props.url.next_url) || '/'}`\n               setTimeout(() => {\n                  this.props.history.push(nextUrl)\n               }, 1500)\n            })\n      }\n   }\n\n   render() {\n      const { loader } = this.state\n      const combinedState = {\n         ...this.props,\n         ...this.state,\n         isLegit: this.state.isLegit && !this.props.formLoader\n      }\n      return (\n         <RecoverAccountContainer loader={loader} location={this.props.location}>\n            <AccountFormSection {...combinedState}>\n               <RecoverAccountForm\n                  {...combinedState}\n                  handleSubmit={this.handleSubmit}\n                  handleChange={this.handleChange}\n               />\n            </AccountFormSection>\n         </RecoverAccountContainer>\n      )\n   }\n}\n\nconst mapStateToProps = ({ account }, { match }) => {\n   return {\n      ...account,\n      accountId: match.params.accountId\n   }\n}\n\nexport const RecoverAccountWithRouter = connect(mapStateToProps)(RecoverAccount)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n   Container,\n   Loader,\n   Grid,\n   Dimmer,\n   Image,\n   List,\n   Segment\n} from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\nimport DenyImage from '../../images/icon-deny.svg'\nimport AppDefaultImage from '../../images/icon-app-default.svg'\nimport AuthorizeImage from '../../images/icon-authorize.svg'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   && .title {\n      padding-top: 40px;\n   }\n\n   && .contract {\n      padding-bottom: 40px;\n   }\n\n   &&& .authorize {\n      margin-top: 40px;\n\n      .bg {\n         width: 64px;\n         height: 64px;\n         background: #e6e6e6;\n         border-radius: 32px;\n\n         > img {\n            width: 40px;\n            height: 40px;\n            margin-top: 8px;\n         }\n      }\n      .md {\n         > img {\n            margin-top: 8px;\n            padding: 0 24px;\n         }\n      }\n   }\n\n   && .cont {\n      background: #f8f8f8;\n      padding: 16px 0px;\n\n      > div {\n         padding: 20px 0 20px 50px;\n      }\n      img {\n         height: 24px;\n         margin-right: 6px;\n      }\n      div.item {\n         padding-top: 24px;\n\n         .content {\n            line-height: 24px;\n         }\n      }\n   }\n\n   .list-item {\n      background: url(${CheckBlueImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   .list-item-deny {\n      background: url(${DenyImage}) no-repeat left 24px;\n      background-size: 24px 24px;\n\n      > .content {\n         padding-left: 32px;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n      && .cont {\n         > div {\n            padding: 20px 0 20px 20px;\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && .title {\n         padding-top: 0px;\n\n         h2 {\n            font-size: 18px !important;\n            line-height: 24px !important;\n         }\n      }\n\n      && .contract {\n         padding-top: 0px;\n         padding-bottom: 20px;\n      }\n\n      && .cont {\n         > div {\n            border: 0px;\n            padding: 10px 0 10px 0;\n\n            h3 {\n               font-size: 14px !important;\n            }\n         }\n\n         div.item {\n            padding-top: 24px;\n\n            .content {\n               font-size: 12px;\n               line-height: 14px;\n            }\n         }\n      }\n\n      &&& .authorize {\n         margin-top: 20px;\n      }\n   }\n`\n\nconst LoginContainer = ({ loader, children, appTitle }) => (\n   <CustomContainer>\n      <Dimmer.Dimmable as={Segment} basic>\n         <Grid>\n            <Dimmer inverted active={loader}>\n               <Loader />\n            </Dimmer>\n\n            <Grid.Row>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <List horizontal className='authorize'>\n                     <List.Item className='bg'>\n                        <Image src={AccountGreyImage} />\n                     </List.Item>\n                     <List.Item className='md'>\n                        <Image src={AuthorizeImage} />\n                     </List.Item>\n                     <List.Item className='bg'>\n                        <Image src={AppDefaultImage} />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='title'>\n               <Grid.Column\n                  as='h2'\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  <span className='font-bold'>{appTitle} </span> is requesting\n                  to use your NEAR account.\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row className='contract'>\n               <Grid.Column\n                  textAlign='center'\n                  computer={16}\n                  tablet={16}\n                  mobile={16}\n               >\n                  Contract: @contractname.near\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List className='border-right-light'>\n                     <List.Item as='h3'>This allows:</List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           View your Account Name\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item'>\n                        <List.Content className='color-black'>\n                           Write Chat messages with your name\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={6}\n                  computer={7}\n                  tablet={8}\n                  mobile={8}\n                  className='cont'\n               >\n                  <List>\n                     <List.Item as='h3'>Does not allow:</List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           View your private account details\n                        </List.Content>\n                     </List.Item>\n                     <List.Item className='list-item-deny'>\n                        <List.Content className='color-black'>\n                           Buy, Sell, or Transfer on your behalf\n                        </List.Content>\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  largeScreen={2}\n                  computer={1}\n                  mobile={16}\n                  only='large screen computer mobile'\n               />\n            </Grid.Row>\n         </Grid>\n\n         {children}\n      </Dimmer.Dimmable>\n   </CustomContainer>\n)\n\nLoginContainer.propTypes = {\n   loader: PropTypes.bool,\n   children: PropTypes.element,\n   appTitle: PropTypes.string\n}\n\nexport default LoginContainer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from 'react-redux'\n\nimport { Grid, Segment, List, Form, Button } from 'semantic-ui-react'\n\nimport AddBlueImage from '../../images/icon-add-blue.svg'\nimport ArrowDownImage from '../../images/icon-arrow-down.svg'\nimport ArrowUpImage from '../../images/icon-arrow-up.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   && button {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #0072ce;\n\n      background: #0072ce;\n      margin: 0 0 0 0;\n\n      font-size: 18px;\n      color: #fff;\n      letter-spacing: 2px;\n\n      :hover {\n         background: #fff;\n         color: #0072ce;\n      }\n      :disabled {\n         border: 4px solid #e6e6e6;\n         background: #e6e6e6;\n      }\n      :active,\n      :focus {\n         background: #fff;\n         color: #0072ce;\n      }\n   }\n\n   && .deny {\n      width: 190px;\n      height: 60px;\n      border-radius: 30px;\n      border: 4px solid #e6e6e6;\n\n      background: transparent;\n\n      font-size: 18px;\n      color: #999;\n      letter-spacing: 2px;\n\n      margin: 0 0 0 0;\n\n      :hover {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n      :active,\n      :focus {\n         border: 4px solid #0072ce;\n         color: #0072ce;\n      }\n   }\n\n   .segment {\n      width: 100%;\n      padding: 0px;\n      margin: 0px;\n   }\n\n   .dropdown-list {\n      width: 100%;\n      position: relative;\n      cursor: pointer;\n\n      .element {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n\n         background: #fff;\n\n         :hover {\n            background: #f8f8f8;\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-color: #d8d8d8;\n            background-image: url(${AccountGreyImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 36px 36px;\n         }\n         .name {\n            margin-top: 12px;\n            margin-left: 18px;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            flex: 1;\n         }\n         .arrow {\n            float: right;\n            width: 56px;\n            height: 56px;\n            background-image: url(${ArrowDownImage});\n            background-repeat: no-repeat;\n            background-position: center center;\n            background-size: 24px auto;\n\n            &.up {\n               background-image: url(${ArrowUpImage});\n            }\n         }\n      }\n      .trigger {\n         display: flex;\n      }\n      .dropdown {\n         .element {\n            margin-top: -4px;\n            display: flex;\n         }\n      }\n      .create-account {\n         width: 100%;\n         min-height: 64px;\n         border: solid 4px #24272a;\n         margin: 0px;\n         padding: 0px;\n         cursor: pointer;\n\n         background: #24272a;\n\n         :hover {\n         }\n         .img {\n            float: left;\n            width: 56px;\n            height: 56px;\n            background-image: url(${AddBlueImage});\n            background-position: center center;\n            background-repeat: no-repeat;\n            background-size: 24px 24px;\n         }\n         .name {\n            float: left;\n            margin-top: 12px;\n            margin-left: 18px;\n         }\n         .arrow {\n         }\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      && {\n         button,\n         .deny {\n            width: 140px;\n            border-radius: 35px;\n         }\n\n         .buttons,\n         .dropdown {\n            .column {\n               padding: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst LoginForm = ({\n   dropdown,\n   account,\n   handleOnClick,\n   handleDeny,\n   handleAllow,\n   handleSelectAccount,\n   redirectCreateAccount\n}) => (\n   <CustomGrid>\n      <Grid.Row className='dropdown'>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Segment className='dropdown-list' onClick={handleOnClick} basic>\n               <List verticalAlign='middle' className={`element trigger`}>\n                  <List.Item className='img' />\n                  <List.Item as='h3' className='name'>\n                     @{account.accountId}\n                  </List.Item>\n                  <List.Item className={`arrow ${dropdown ? 'up' : ''}`} />\n               </List>\n\n               <Segment basic className={`dropdown ${dropdown ? '' : 'hide'}`}>\n                  {Object.keys(account.accounts)\n                     .filter(a => a !== account.accountId)\n                     .map((account, i) => (\n                        <List\n                           key={`lf-${i}`}\n                           onClick={() => handleSelectAccount(account)}\n                           className='element'\n                        >\n                           <List.Item className='img' />\n                           <List.Item as='h3' className='name'>\n                              @{account}\n                           </List.Item>\n                        </List>\n                     ))}\n                  <List\n                     onClick={redirectCreateAccount}\n                     className='create-account'\n                  >\n                     <List.Item className='img' />\n                     <List.Item className='h3 name color-seafoam-blue'>\n                        Create New Account\n                     </List.Item>\n                  </List>\n               </Segment>\n            </Segment>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n      <Grid.Row className={`buttons ${dropdown ? 'hide' : ''}`}>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n         <Grid.Column largeScreen={6} computer={8} tablet={10} mobile={16}>\n            <Form action={account.url.success_url}>\n               <input\n                  type='hidden'\n                  name='authToken'\n                  value={account.authToken}\n               />\n               <input\n                  type='hidden'\n                  name='accountId'\n                  value={account.accountId}\n               />\n               <Button className='deny' onClick={handleDeny}>\n                  DENY\n               </Button>\n               <Button floated='right' onClick={handleAllow}>\n                  ALLOW\n               </Button>\n            </Form>\n         </Grid.Column>\n         <Grid.Column largeScreen={5} computer={4} tablet={3} mobile={16} />\n      </Grid.Row>\n   </CustomGrid>\n)\n\nLoginForm.propTypes = {\n   dropdown: PropTypes.bool.isRequired,\n   handleOnClick: PropTypes.func.isRequired,\n   handleDeny: PropTypes.func.isRequired,\n   handleSelectAccount: PropTypes.func.isRequired,\n   redirectCreateAccount: PropTypes.func.isRequired\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport default connect(mapStateToProps)(LoginForm)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport LoginContainer from './LoginContainer'\nimport LoginForm from './LoginForm'\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nclass Login extends Component {\n   state = {\n      dropdown: false\n   }\n\n   componentDidMount = () => {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleDeny = e => {\n      e.preventDefault();\n      if (this.props.account.url.failure_url) {\n         window.location.href = this.props.account.url.failure_url\n      }\n   }\n\n   handleAllow = e => {\n      e.preventDefault()\n      this.wallet.addAccessKey(this.props.account.accountId, this.props.account.url.contract_id, this.props.account.url.public_key, this.props.account.url.success_url);\n   }\n\n   handleSelectAccount = accountId => {\n      this.wallet.selectAccount(accountId)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n   }\n\n   redirectCreateAccount = () => {\n      this.wallet.redirectToCreateAccount({}, this.props.history)\n   }\n\n   render() {\n      const { account } = this.props\n\n      return (\n         <LoginContainer\n            loader={account.loader}\n            appTitle={account.url && account.url.app_title}\n         >\n            {account.accountId && (\n               <LoginForm\n                  {...this.state}\n                  handleOnClick={this.handleOnClick}\n                  handleDeny={this.handleDeny}\n                  handleAllow={this.handleAllow}\n                  handleSelectAccount={this.handleSelectAccount}\n                  redirectCreateAccount={this.redirectCreateAccount}\n               />\n            )}\n         </LoginContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const LoginWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Login))\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Button, Image, List } from 'semantic-ui-react'\n\nimport ArrowLeftImage from '../../images/icon-arrow-left.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationTabList = styled(List)`\n   .ui.button {\n      background: #f8f8f8;\n      color: #0072ce;\n      height: 36px;\n      font-weight: 500;\n      padding-left: 1em;\n      padding-right: 1em;\n\n      &.active {\n         background: #999999;\n         color: #ffffff;\n      }\n\n      :hover {\n         background: #999999;\n         color: #ffffff;\n      }\n   }\n\n   .ui.image {\n      width: 0.5em;\n      padding-bottom: 0px;\n   }\n`\n\nconst LEFT_PAGE = 'LEFT'\nconst RIGHT_PAGE = 'RIGHT'\n\nconst range = (from, to, step = 1) => {\n   let i = from\n   const range = []\n\n   while (i <= to) {\n      range.push(i)\n      i += step\n   }\n\n   return range\n}\n\nexport class PaginationTab extends Component {\n   static propTypes = {\n      totalRecords: PropTypes.number.isRequired,\n      pageLimit: PropTypes.number,\n      pageNeighbors: PropTypes.number,\n      onPageChanged: PropTypes.func,\n      initialPage: PropTypes.number.isRequired\n   }\n\n   static defaultProps = {\n      pageLimit: 10,\n      pageNeighbors: 1,\n      onPageChange: () => {},\n      initialPage: 0\n   }\n\n   state = {\n      currentPage: null\n   }\n\n   getTotalPages() {\n      return Math.ceil(this.props.totalRecords / this.props.pageLimit)\n   }\n\n   componentDidMount() {\n      this.setState({ currentPage: this.props.initialPage + 1 })\n   }\n\n   gotoPage = page => {\n      const currentPage = this.props.onPageChanged(page) + 1\n      this.setState({ currentPage })\n   }\n\n   handleClick = (page, evt) => {\n      evt.preventDefault()\n      this.gotoPage(page)\n      evt.target.blur()\n   }\n\n   handleMoveLeft = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage - this.props.pageNeighbors * 2 - 1)\n      evt.target.blur()\n   }\n\n   handleMoveRight = evt => {\n      evt.preventDefault()\n      this.gotoPage(this.state.currentPage + this.props.pageNeighbors * 2 + 1)\n      evt.target.blur()\n   }\n\n   fetchPageNumbers = () => {\n      const totalPages = this.getTotalPages()\n      const currentPage = this.state.currentPage\n      const pageNeighbors = this.props.pageNeighbors\n\n      const totalNumbers = pageNeighbors * 2 + 3\n      const totalBlocks = totalNumbers + 2\n\n      if (totalPages > totalBlocks) {\n         let pages = []\n\n         const leftBound = currentPage - pageNeighbors\n         const rightBound = currentPage + pageNeighbors\n         const beforeLastPage = totalPages - 1\n\n         const startPage = leftBound > 2 ? leftBound : 2\n         const endPage =\n            rightBound < beforeLastPage ? rightBound : beforeLastPage\n\n         pages = range(startPage, endPage)\n\n         const pagesCount = pages.length\n         const singleSpillOffset = totalNumbers - pagesCount - 1\n\n         const leftSpill = startPage > 2\n         const rightSpill = endPage < beforeLastPage\n\n         const leftSpillPage = LEFT_PAGE\n         const rightSpillPage = RIGHT_PAGE\n\n         if (leftSpill && !rightSpill) {\n            const extraPages = range(\n               startPage - singleSpillOffset,\n               startPage - 1\n            )\n            pages = [leftSpillPage, ...extraPages, ...pages]\n         } else if (!leftSpill && rightSpill) {\n            const extraPages = range(endPage + 1, endPage + singleSpillOffset)\n            pages = [...pages, ...extraPages, rightSpillPage]\n         } else if (leftSpill && rightSpill) {\n            pages = [leftSpillPage, ...pages, rightSpillPage]\n         }\n\n         return [1, ...pages, totalPages]\n      }\n\n      return range(1, totalPages)\n   }\n\n   render() {\n      if (!this.props.totalRecords) return null\n      if (this.totalPages === 1) return null\n\n      const pages = this.fetchPageNumbers()\n      return (\n         <PaginationTabList horizontal className='PaginationTab'>\n            {pages.map((page, index) => {\n               if (page === LEFT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveLeft}>\n                           <Image src={ArrowLeftImage} />\n                        </Button>\n                     </List.Item>\n                  )\n\n               if (page === RIGHT_PAGE)\n                  return (\n                     <List.Item key={index}>\n                        <Button circular onClick={this.handleMoveRight}>\n                           ...\n                        </Button>\n                     </List.Item>\n                  )\n\n               return (\n                  <List.Item key={index}>\n                     <Button\n                        circular\n                        active={this.state.currentPage === page}\n                        onClick={e => this.handleClick(page, e)}\n                     >\n                        {page}\n                     </Button>\n                  </List.Item>\n               )\n            })}\n         </PaginationTabList>\n      )\n   }\n}\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\nimport styled from 'styled-components'\n\nconst PaginationPagingList = styled(List)`\n   && .paging-dropdown-tr {\n      width: 66px;\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n\n      border-radius: 18px;\n      background-position: 38px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      padding: 0 20px 0 0;\n\n      line-height: 32px;\n   }\n\n   && .paging-dropdown {\n      padding-top: 0px;\n      width: 66px;\n      min-height: 30px;\n\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n\n      position: absolute;\n      z-index: 200;\n      top: 6px;\n\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 7px;\n      }\n\n      & > .item > .content {\n         font-size: 14px;\n         line-height: 18px;\n         font-weight: 600;\n         padding-left: 6px;\n      }\n   }\n\n   &&& .filter-by {\n      padding-left: 10px;\n      padding-right: 20px;\n   }\n`\n\nconst pagingTypes = [10, 20, 50, 100]\n\nconst PaginationFilter = ({\n   handleOnClickPaging,\n   pagingValue,\n   pagingDropdown,\n   handlePagingDropdownClick\n}) => (\n   <PaginationPagingList horizontal className='border-right-light'>\n      <List.Item>\n         <Button\n            onClick={handleOnClickPaging}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='paging-dropdown-tr'\n            style={{ backgroundImage: ` url(${ArrowDown})` }}\n         >\n            {pagingValue}\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`paging-dropdown ${pagingDropdown ? '' : 'hide'}`}\n         >\n            {pagingTypes.map((type, i) => (\n               <List.Item\n                  key={`page-${i}`}\n                  onClick={() => handlePagingDropdownClick(type)}\n               >\n                  <List.Content verticalAlign='middle'>{type}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n      <List.Item as='h6' className='filter-by'>\n         PER PAGE\n      </List.Item>\n   </PaginationPagingList>\n)\n\nexport default PaginationFilter\n","import React, { Fragment } from 'react'\n\nconst PaginationSummary = ({ pageNumber, pageLimit, totalRecords }) => (\n   <Fragment>\n      <span className='color-charcoal-grey'>\n         {pageNumber * pageLimit + 1}-{(pageNumber + 1) * pageLimit}{' '}\n      </span>\n      OF {totalRecords} TOTAL\n   </Fragment>\n)\n\nexport default PaginationSummary\n","import React from 'react'\n\nimport { Form } from 'semantic-ui-react'\n\nimport MSearchImage from '../../images/icon-m-search.svg'\n\nimport styled from 'styled-components'\n\nconst SearchForm = styled(Form)`\n   float: right;\n\n   &&&& .search input {\n      width: 360px;\n\n      height: 36px;\n      border: 2px solid #e6e6e6;\n      border-radius: 25px;\n      padding-left: 40px;\n\n      font-size: 14px;\n\n      background-color: #f8f8f8;\n      background-image: url(${MSearchImage});\n      background-position: 12px center;\n      background-repeat: no-repeat;\n      background-size: 14px auto;\n   }\n`\n\nconst Search = ({ handleSubmit, handleChange, search }) => (\n   <SearchForm onSubmit={handleSubmit}>\n      <Form.Input\n         className='search'\n         name='search'\n         value={search}\n         onChange={handleChange}\n         placeholder='Search transactions and receipts...'\n      />\n   </SearchForm>\n)\n\nexport default Search\n","import React from 'react'\n\nimport { Button, List } from 'semantic-ui-react'\n\nimport ArrowDown from '../../images/icon-arrow-down.svg'\n\nimport styled from 'styled-components'\n\nconst PaginationFilterList = styled(List)`\n   && .sortby-dropdown-tr {\n      width: 210px;\n      line-height: 32px;\n      border: 2px solid #e6e6e6;\n      background-color: #fff;\n      border-radius: 18px;\n      background-position: 180px center;\n      background-repeat: no-repeat;\n      background-size: 12px auto;\n      background-image: url(${ArrowDown});\n      text-align: left;\n      padding-top: 0px;\n      padding-bottom: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   && .sortby-dropdown {\n      padding-top: 0px;\n      width: 210px;\n      min-height: 30px;\n      border: 2px solid #e6e6e6;\n      background: #fff;\n      border-radius: 18px;\n      position: absolute;\n      z-index: 200;\n      top: 2px;\n      box-shadow: 0 0 10px #ddd;\n\n      & > .item:first-child {\n         padding-top: 10px;\n      }\n\n      .item {\n         height: 36px !important;\n\n         img {\n            width: 18px !important;\n            margin: 0 10px !important;\n         }\n         .content {\n            margin: 2px 0 0 0 !important;\n         }\n      }\n   }\n\n   &&& .sortby {\n      padding-left: 10px;\n      padding-right: 0px;\n   }\n`\n\nconst PaginationFilter = ({\n   filterTypesByType,\n   handleOnClick,\n   handleDropdownClick,\n   dropdown\n}) => (\n   <PaginationFilterList horizontal>\n      <List.Item as='h6' className='sortby'>\n         SORT BY\n      </List.Item>\n      <List.Item>\n         <Button\n            onClick={handleOnClick}\n            // onBlur={() => this.setState({ dropdown: !this.state.dropdown })}\n            className='sortby-dropdown-tr'\n         >\n            RECENTLY ADDED\n         </Button>\n\n         <List\n            selection\n            verticalAlign='middle'\n            className={`sortby-dropdown ${dropdown ? '' : 'hide'}`}\n         >\n            {filterTypesByType.map((type, i) => (\n               <List.Item\n                  key={`sortby-${i}`}\n                  onClick={() => handleDropdownClick(type.img)}\n               >\n                  <List.Content as='h6'>{type.name}</List.Content>\n               </List.Item>\n            ))}\n         </List>\n      </List.Item>\n   </PaginationFilterList>\n)\n\nexport default PaginationFilter\n","import React, { Component, Fragment } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Grid, List, Image, Button } from 'semantic-ui-react'\n\nimport TransactionFilter from '../../images/icon-m-filter.svg'\nimport CloseImage from '../../images/icon-close.svg'\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport MTransactionImage from '../../images/icon-m-transaction.svg'\nimport NearkatImage from '../../images/footer-nearkat.svg'\nimport CheckBlueImage from '../../images/icon-check-blue.svg'\n\nimport { PaginationTab } from './PaginationTab'\nimport PaginationPaging from './PaginationPaging'\nimport PaginationSummary from './PaginationSummary'\nimport Search from '../common/Search'\n\nimport PaginationSortBy from './PaginationSortBy'\n\nimport styled from 'styled-components'\n\nconst PaginationBlockGrid = styled(Grid)`\n   & > .row:first-child {\n      min-height: 70px;\n   }\n\n   &&& .pagination-block-paging {\n      padding: 0px;\n   }\n\n   &&& .pagination-block-top {\n      padding-left: 0px;\n\n      &-paging-summary {\n         padding-left: 20px;\n      }\n\n      &-search {\n         padding: 0px;\n      }\n\n      &-paging {\n         padding-left: 0px;\n      }\n   }\n\n   &&& .show-sub {\n      padding: 0 0 0 0;\n      margin-top: -16px;\n   }\n\n   &&& .sub-list {\n      background: #fff;\n      width: 100%;\n      min-height: 448px;\n      padding: 0 0;\n\n      > .item {\n         padding: 18px 20px;\n      }\n\n      .img {\n         width: 20px;\n         position: absolute;\n         top: 20px;\n         right: 20px;\n         padding: 0px;\n\n         img {\n            cursor: pointer;\n         }\n      }\n\n      .text {\n         margin: 0 10% 0 0;\n         color: #24272a;\n         float: left;\n\n         .header {\n            font-family: 'benton-sans', sans-serif;\n         }\n         .content {\n            color: #999999;\n            padding-top: 12px;\n            line-height: 20px;\n         }\n      }\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 0 0 0;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .remove-connection {\n         > button {\n            width: 100%;\n            background-color: #ff585d;\n            border: 2px solid #ff585d;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background: #fff;\n               color: #ff585d;\n            }\n         }\n      }\n      .recent-transactions {\n         background-color: #f8f8f8;\n         margin: 0 0 0 0;\n      }\n      .recent-transactions-title {\n         padding: 0 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 2px;\n         background-size: 12px auto;\n      }\n      .recent-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0;\n         border-bottom: 2px solid #e6e6e6;\n      }\n      .recent-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .authorized-transactions {\n         background-color: #fff;\n         margin: 0 0 0 0;\n         padding-top: 0px;\n      }\n      .authorized-transactions-title {\n         padding: 12px 0 0 24px;\n         background: url(${MTransactionImage}) no-repeat left 14px;\n         background-size: 12px auto;\n      }\n      .authorized-transactions-row {\n         margin: 0 0 0 24px;\n         padding: 12px 0 0 32px;\n         background: url(${CheckBlueImage}) no-repeat left 14px;\n         line-height: 32px;\n      }\n      .authorized-transactions-row:last-child {\n         border-bottom: 0px solid #e6e6e6;\n      }\n\n      .send-money {\n         > .button {\n            width: 100%;\n            background-color: #5ace84;\n            border: 2px solid #5ace84;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n\n            :hover {\n               background-color: #fff;\n               color: #5ace84;\n            }\n         }\n      }\n   }\n   @media screen and (max-width: 991px) {\n      &&& .sub-list {\n         .img {\n            top: 6px;\n            right: 6px;\n         }\n      }\n   }\n`\n\nclass PaginationBlock extends Component {\n   static defaultProps = {\n      onPageChanged: () => {}\n   }\n\n   state = {\n      search: '',\n      dropdown: false,\n      dropdownType: this.props.type\n         ? this.props.filterTypes[this.props.type].img\n         : TransactionFilter,\n      pagingDropdown: false,\n      pagingValue: 10,\n\n      buttonRadio: false\n   }\n\n   handleOnClick = () => {\n      this.setState({\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handleOnClickPaging = () => {\n      this.setState({\n         pagingDropdown: !this.state.pagingDropdown\n      })\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({ [name]: value }))\n   }\n\n   handleSubmit = () => {\n      console.log('not ready yet')\n   }\n\n   handleDropdownClick = dropdownType => {\n      this.setState({\n         dropdownType,\n         dropdown: !this.state.dropdown\n      })\n   }\n\n   handlePagingDropdownClick = pagingValue => {\n      this.setState({\n         pagingValue,\n         pagingDropdown: !this.state.pagingDropdown\n      })\n\n      this.props.onPageChanged(1, pagingValue)\n   }\n\n   handleTabChange(pageNumber) {\n      // this.setState({\n      //    pageNumber: pageNumber,\n      //    loader: true,\n      // })\n      // this.updateBlock(pageNumber)\n      // return pageNumber\n   }\n\n   buttonRadioClick = () => {\n      this.setState(state => ({\n         buttonRadio: !state.buttonRadio\n      }))\n   }\n\n   render() {\n      const {\n         filterTypes,\n         type,\n         pageNumber = 0,\n         showSub = false,\n         subPage\n      } = this.props\n\n      const {\n         dropdownType,\n         dropdown,\n         search,\n         pagingValue,\n         pagingDropdown\n      } = this.state\n\n      const {\n         totalRecords = 1100,\n         pageLimit = 10,\n         initialPage = 0,\n         onPageChanged = () => {},\n         pageNeighbors = 1\n      } = this.props\n\n      const filterTypesByType = type ? [filterTypes[type]] : filterTypes\n\n      return (\n         <PaginationBlockGrid\n            className='border-top-bold border-bottom-bold'\n            stackable\n            columns={2}\n         >\n            <Grid.Row className='border-bottom-light'>\n               <Grid.Column\n                  width={10}\n                  verticalAlign='middle'\n                  className='pagination-block-top'\n               >\n                  <PaginationSortBy\n                     filterTypesByType={filterTypesByType}\n                     handleOnClick={this.handleOnClick}\n                     dropdownType={dropdownType}\n                     handleDropdownClick={this.handleDropdownClick}\n                     dropdown={dropdown}\n                  />\n               </Grid.Column>\n               <Grid.Column\n                  width={6}\n                  textAlign='right'\n                  verticalAlign='middle'\n                  className='pagination-block-top-search'\n               >\n                  <Search\n                     handleSubmit={this.handleSubmit}\n                     handleChange={this.handleChange}\n                     search={search}\n                  />\n               </Grid.Column>\n            </Grid.Row>\n            <Grid.Row>\n               <Grid.Column computer={showSub ? 10 : 16}>\n                  <Grid>{this.props.children}</Grid>\n               </Grid.Column>\n               <Grid.Column\n                  computer={6}\n                  className={`show-sub ${showSub ? `` : `hide`}`}\n               >\n                  <List className='box sub-list'>\n                     <List.Item className='img'>\n                        <Image\n                           onClick={() => this.props.toggleShowSub()}\n                           src={CloseImage}\n                        />\n                     </List.Item>\n\n                     {subPage === 'authorized-apps' ? (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div\n                                       className='main-image'\n                                       style={{ backgroundColor: '#fff' }}\n                                    >\n                                       <Image src={NearkatImage} align='left' />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       NEAR Place\n                                    </List.Header>\n                                    <List.Item as='h5' className='color-blue'>\n                                       www.nearplace.com\n                                    </List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>DEAUTHORIZE</Button>\n                           </List.Item>\n                           <List.Item className='authorized-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='authorized-transactions-title border-top'\n                              >\n                                 AUTHORIZED TO\n                              </List.Item>\n                              <List.Item className='authorized-transactions-row color-black'>\n                                 View your Account Name\n                              </List.Item>\n                              <List.Item className='authorized-transactions-row color-black'>\n                                 Do something else on your behalf\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Another thing here</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    Another Thing Happened\n                                 </List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    In-app purchase: 20 Ⓝ\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Staked: 10 Ⓝ</List.Header>\n                                 <List.Item>2w ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Authorized</List.Header>\n                                 <List.Item>2w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                        </Fragment>\n                     ) : (\n                        <Fragment>\n                           <List.Item>\n                              <List horizontal>\n                                 <List.Item>\n                                    <div className='main-image'>\n                                       <Image\n                                          src={AccountGreyImage}\n                                          align='left'\n                                       />\n                                    </div>\n                                 </List.Item>\n                                 <List.Item>\n                                    <List.Header as='h2'>\n                                       Alex Skidanov\n                                    </List.Header>\n                                    <List.Item as='h5'>@alex.near</List.Item>\n                                 </List.Item>\n                              </List>\n                           </List.Item>\n                           <List.Item className='remove-connection border-top'>\n                              <Button>REMOVE CONNECTION</Button>\n                           </List.Item>\n                           <List.Item className='recent-transactions'>\n                              <List.Item\n                                 as='h6'\n                                 className='recent-transactions-title border-top'\n                              >\n                                 RECENT TRANSACTIONS\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>You sent 20 Ⓝ</List.Header>\n                                 <List.Item>3h ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>Alex sent you 1020 Ⓝ</List.Header>\n                                 <List.Item>3d ago</List.Item>\n                              </List.Item>\n                              <List.Item className='recent-transactions-row border-top'>\n                                 <List.Header>\n                                    You and Alex played NEAR Chess\n                                 </List.Header>\n                                 <List.Item>1w ago</List.Item>\n                              </List.Item>\n                           </List.Item>\n                           <List.Item className='send-money border-top'>\n                              <Button as={Link} to='/send-money/marcin'>\n                                 SEND MONEY\n                              </Button>\n                           </List.Item>\n                        </Fragment>\n                     )}\n                  </List>\n               </Grid.Column>\n            </Grid.Row>\n\n            <Grid.Row className='border-top-light'>\n               <Grid.Column\n                  width={8}\n                  verticalAlign='middle'\n                  className='pagination-block-top-paging'\n               >\n                  <List horizontal verticalAlign='middle'>\n                     <List.Item width={6}>\n                        <PaginationPaging\n                           handleOnClickPaging={this.handleOnClickPaging}\n                           pagingValue={pagingValue}\n                           pagingDropdown={pagingDropdown}\n                           handlePagingDropdownClick={\n                              this.handlePagingDropdownClick\n                           }\n                        />\n                     </List.Item>\n                     <List.Item\n                        width={6}\n                        as='h6'\n                        className='pagination-block-top-paging-summary'\n                     >\n                        <PaginationSummary\n                           pageNumber={pageNumber}\n                           pageLimit={pageLimit}\n                           totalRecords={totalRecords}\n                        />\n                     </List.Item>\n                  </List>\n               </Grid.Column>\n               <Grid.Column\n                  width={8}\n                  className='pagination-block-paging'\n                  textAlign='right'\n               >\n                  <PaginationTab\n                     totalRecords={totalRecords}\n                     pageLimit={pageLimit}\n                     initialPage={initialPage}\n                     onPageChanged={onPageChanged}\n                     pageNeighbors={pageNeighbors}\n                  />\n               </Grid.Column>\n            </Grid.Row>\n         </PaginationBlockGrid>\n      )\n   }\n}\n\nexport default PaginationBlock\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst ContactsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\n               Contacts\n            </Grid.Column>\n            <Grid.Column\n               computer='6'\n               tablet='6'\n               mobile='16'\n               as='h1'\n               className='add'\n            >\n               203<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default ContactsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\n\nimport ContactsContainer from './ContactsContainer'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nclass Contacts extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      // this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', ''],\n               [AccountGreyImage, '@vlad.near', '2 days ago', ''],\n               [\n                  AccountGreyImage,\n                  'Illia Polosukhin',\n                  'Connected 2 days ago',\n                  ''\n               ],\n               [AccountGreyImage, 'Alex Skidanov ', 'Connected 2 days ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <ContactsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`c-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </ContactsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {}\n\nconst mapStateToProps = () => ({})\n\nexport const ContactsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Contacts))\n","import React from 'react'\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n         text-align: right;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n            text-align: center;\n         }\n      }\n   }\n`\n\nconst AuthorizedAppsContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column computer='10' tablet='10' mobile='16' as='h1'>\n               Authorized Apps\n            </Grid.Column>\n            <Grid.Column\n               computer='6'\n               tablet='6'\n               mobile='16'\n               as='h1'\n               className='add'\n            >\n               23<span className='color-brown-grey'> total</span>\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n\n      {children}\n   </CustomContainer>\n)\n\nexport default AuthorizedAppsContainer\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport PaginationBlock from '../pagination/PaginationBlock'\nimport ListItem from '../dashboard/ListItem'\n\nimport AuthorizedAppsContainer from './AuthorizedAppsContainer'\n\nimport NearkatImage from '../../images/footer-nearkat.svg'\n\nclass AuthorizedApps extends Component {\n   state = {\n      loader: false,\n      showSub: false,\n      showSubOpen: 0,\n      activity: [],\n      filterTypes: [\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' },\n         { img: '', name: 'ALL' }\n      ]\n   }\n\n   toggleShowSub = i => {\n      i = i == null ? this.state.showSubOpen : i\n\n      this.setState(state => ({\n         showSub: i === state.showSubOpen ? !state.showSub : state.showSub,\n         showSubOpen: i\n      }))\n   }\n\n   componentDidMount() {\n      // this.wallet = new Wallet()\n      // this.props.handleRefreshUrl(this.props.location)\n      // this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            activity: [\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', ''],\n               [NearkatImage, 'Cryptocats', '5 hrs ago', ''],\n               [NearkatImage, 'Knights App', '2 days ago', ''],\n               [NearkatImage, 'NEAR Place', '3 hrs ago', '']\n            ],\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      const { activity, filterTypes, showSub, showSubOpen } = this.state\n\n      return (\n         <AuthorizedAppsContainer>\n            <PaginationBlock\n               filterTypes={filterTypes}\n               showSub={showSub}\n               toggleShowSub={this.toggleShowSub}\n               subPage='authorized-apps'\n            >\n               {activity.map((row, i) => (\n                  <ListItem\n                     key={`a-${i}`}\n                     row={row}\n                     i={i}\n                     wide={true}\n                     showSub={showSub}\n                     toggleShowSub={this.toggleShowSub}\n                     showSubOpen={showSubOpen}\n                  />\n               ))}\n            </PaginationBlock>\n         </AuthorizedAppsContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {}\n\nconst mapStateToProps = () => ({})\n\nexport const AuthorizedAppsWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(AuthorizedApps))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .creating-info {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n\n         :first-child {\n            padding-left: 0px;\n         }\n      }\n\n      h1 {\n         color: #4a4f54;\n         padding-left: 0px;\n         line-height: 48px;\n      }\n   }\n\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 0 24px 0;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 991px) {\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .creating-info {\n         padding-left: 1rem;\n         padding-right: 1rem;\n      }\n\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst SendMoneyContainer = ({ children, step }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='1' className='page-title'>\n            <Grid.Column as='h1' textAlign='center'>\n               {step === 3 ? `Success!` : `Send Money`}\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default SendMoneyContainer\n","import React from 'react'\n\nimport {\n   Header,\n   TextArea,\n   List,\n   Image,\n   Button,\n   Form,\n   Dimmer,\n   Loader\n} from 'semantic-ui-react'\n\nimport CreateAccoungFormInput from '../accounts/CreateAccoungFormInput'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&&&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin: 36px auto 0 auto;\n\n      form {\n         h3 {\n            margin-bottom: 13px;\n            text-align: left;\n         }\n\n         .main-image {\n            border: 0px;\n            padding: 0 10px;\n            width: 48px;\n            height: 48px;\n            background: #e6e6e6;\n            border-radius: 32px;\n            margin: 0 auto;\n\n            img {\n               padding-top: 10px;\n            }\n         }\n\n         .amount {\n            margin-top: 16px;\n            margin-bottom: 0px;\n            padding-top: 24px;\n\n            input {\n               height: 80px;\n               border: 0px;\n               font-family: Bw Seido Round;\n               font-size: 72px;\n               font-weight: 500;\n               line-height: 80px;\n               color: #4a4f54;\n               text-align: center;\n               padding: 0px;\n            }\n         }\n         .near-tokens {\n            margin: 14px auto 36px auto;\n            text-align: center;\n            padding: 2px;\n\n            width: 200px;\n            background-color: #fff;\n            border: 2px solid #e6e6e6;\n            border-radius: 25px;\n            color: #999999;\n            font-weight: 700;\n\n            :hover {\n               background-color: #e6e6e6;\n               color: #fff;\n            }\n         }\n\n         .add-note {\n            > textarea {\n               width: 100%;\n               border: 0px;\n               padding: 12px;\n\n               :focus {\n                  border: 0px;\n               }\n            }\n         }\n\n         .send-money {\n            margin-top: 24px;\n            margin-bottom: 6px;\n\n            > button {\n               width: 288px;\n               line-height: 56px;\n               border-radius: 30px;\n               border: solid 2px #5ace84;\n               font-size: 18px;\n               font-weight: 600;\n               letter-spacing: 2px;\n               text-align: center;\n               padding: 0 0 0 0;\n               background-color: #5ace84;\n               color: #fff;\n\n               :hover {\n                  color: #5ace84;\n                  background: #fff;\n               }\n               :disabled {\n                  background-color: #e6e6e6;\n                  border-color: #e6e6e6;\n                  opacity: 1 !important;\n               }\n            }\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         padding: 0px;\n         width: 100%;\n         text-align: center;\n         margin-left: auto;\n         margin-right: auto;\n         border: 0px;\n\n         .near-tokens {\n            width: 200px;\n         }\n\n         form {\n            .near-tokens {\n               margin: 14px auto 24px auto;\n            }\n            .add-note {\n               margin-left: -1rem;\n               margin-right: -1rem;\n\n               > textarea {\n                  width: 100%;\n                  height: 98px;\n                  border: 0px;\n                  padding: 12px;\n                  background: #f8f8f8;\n\n                  :focus {\n                     border: 0px;\n                  }\n               }\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyFirstStep = ({\n   handleNextStep,\n   handleChange,\n   note,\n   loader,\n   paramAccountId,\n   accountId,\n   handleChangeAccountId,\n   successMessage,\n   errorMessage,\n   formLoader,\n   amount\n}) => (\n   <CustomList className='box'>\n      <Form autoComplete='off' onSubmit={handleChangeAccountId}>\n         <Dimmer inverted active={loader}>\n            <Loader />\n         </Dimmer>\n\n         {paramAccountId ? (\n            <List.Item>\n               <List.Content>\n                  <div className='main-image'>\n                     <Image src={AccountGreyImage} align='left' />\n                  </div>\n               </List.Content>\n               <List.Content as='h2'>{accountId}</List.Content>\n               <List.Content>@{accountId}</List.Content>\n            </List.Item>\n         ) : (\n            <List.Item>\n               <List.Content>\n                  <Header as='h3'>Enter a username to send:</Header>\n\n                  <CreateAccoungFormInput\n                     formLoader={formLoader}\n                     accountId={accountId}\n                     handleChangeAccountId={handleChangeAccountId}\n                     successMessage={successMessage}\n                     errorMessage={errorMessage}\n                  />\n               </List.Content>\n            </List.Item>\n         )}\n\n         <List.Item className='amount border-top'>\n            <Form.Input\n               type='number'\n               name='amount'\n               value={amount}\n               onChange={handleChange}\n               placeholder='0.00'\n               step='0.01'\n               min='0'\n            />\n         </List.Item>\n         <List.Item as='h5' className='near-tokens'>\n            NEAR TOKENS\n         </List.Item>\n         { false ?\n         <List.Item className='add-note border-bottom border-top'>\n            <TextArea\n               name='note'\n               value={note}\n               onChange={handleChange}\n               placeholder='Add a note...'\n            />\n         </List.Item>\n         : null }\n         <List.Item className='send-money'>\n            <Button\n               disabled={\n                  paramAccountId\n                     ? !(parseFloat(amount) > 0)\n                     : !(successMessage && parseFloat(amount) > 0)\n               }\n               onClick={handleNextStep}\n            >\n               SEND MONEY\n            </Button>\n         </List.Item>\n      </Form>\n   </CustomList>\n)\n\nexport default SendMoneyFirstStep\n","import React from 'react'\n\nimport { List, Image, Button, Header } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 36px;\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 0;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n\n         font-family: Bw Seido Round;\n         font-size: 72px;\n         font-weight: 500;\n         line-height: 72px;\n         color: #4a4f54;\n      }\n      .to {\n         width: 40px;\n         background: #fff;\n         margin: -20px auto 12px auto;\n      }\n\n      .with-note {\n         padding-top: 12px;\n\n         .expand-note {\n            color: #0072ce;\n            cursor: pointer;\n            font-weight: 600;\n\n            :hover {\n               text-decoration: underline;\n            }\n         }\n      }\n\n      .send-money {\n         padding-top: 24px;\n         padding-bottom: 24px;\n         margin-top: 24px;\n         margin-bottom: 24px;\n\n         > .button {\n            width: 288px;\n            line-height: 60px;\n            border-radius: 30px;\n            border: solid 2px #5ace84;\n            font-size: 18px;\n            font-weight: 600;\n            letter-spacing: 2px;\n            text-align: center;\n            padding: 0 0 0 0;\n            background-color: #5ace84;\n            color: #fff;\n\n            :hover {\n               color: #5ace84;\n               background: #fff;\n            }\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         .to {\n            margin: -20px auto 12px auto;\n         }\n\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .amount {\n               font-size: 48px !important;\n               padding-top: 0px;\n            }\n            .send-money {\n               padding-top: 14px;\n               padding-bottom: 14px;\n               margin-top: 14px;\n               margin-bottom: 14px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneySecondStep = ({\n   handleNextStep,\n   handleExpandNote,\n   expandNote,\n   note,\n   amount,\n   accountId\n}) => (\n   <CustomList className='box'>\n      <List.Item as='h2'>You are sending</List.Item>\n      <List.Item as='h1' className='amount border-bottom'>\n         {amount}\n         <span>Ⓝ</span>\n      </List.Item>\n      <List.Item className='to'>\n         <Header as='h2'>to</Header>\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note '>\n            with note:\n            <br />\n            {expandNote ? (\n               <span className='color-black'>{note}</span>\n            ) : (\n               <span className='expand-note' onClick={handleExpandNote}>\n                  Expand note\n               </span>\n            )}\n         </List.Item>\n      )}\n      <List.Item className='send-money border-top border-bottom'>\n         <Button onClick={handleNextStep}>CONFIRM & SEND</Button>\n      </List.Item>\n      <List.Item>Once confirmed, this is not undoable.</List.Item>\n   </CustomList>\n)\n\nexport default SendMoneySecondStep\n","import React from 'react'\n\nimport { List, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport SendImage from '../../images/icon-send.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 24px;\n      width: 360px;\n      text-align: center;\n      margin-left: auto;\n      margin-right: auto;\n      margin-top: 12px;\n\n      .send-money img {\n         width: 24px;\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 48px;\n         height: 48px;\n         background: #e6e6e6;\n         border-radius: 32px;\n         margin: 0 auto;\n\n         img {\n            padding-top: 10px;\n         }\n      }\n\n      .amount {\n         margin-top: 32px;\n         margin-bottom: 0px;\n         padding-top: 12px;\n         padding-bottom: 24px;\n      }\n\n      .with-note {\n         padding-top: 24px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n\n      @media screen and (max-width: 767px) {\n         &&& {\n            padding: 0px;\n            width: 100%;\n            text-align: center;\n            margin-left: auto;\n            margin-right: auto;\n\n            border: 0px;\n\n            .send-money img {\n               margin-top: 12px;\n            }\n            .amount {\n               padding-top: 0px;\n            }\n         }\n      }\n   }\n`\n\nconst SendMoneyThirdStep = ({ note, amount, accountId }) => (\n   <CustomList>\n      <List.Item className='send-money'>\n         <Image src={SendImage} />\n      </List.Item>\n      <List.Item as='h2' className='amount'>\n         {amount}\n         <span>Ⓝ</span> was sent to:\n      </List.Item>\n      <List.Item>\n         <div className='main-image'>\n            <Image src={AccountGreyImage} align='left' />\n         </div>\n      </List.Item>\n      <List.Item as='h2'>{accountId}</List.Item>\n      <List.Item>@{accountId}</List.Item>\n      {note && (\n         <List.Item className='with-note'>\n            <span className='font-bold'>with note:</span>\n            <br />\n            {note}\n         </List.Item>\n      )}\n   </CustomList>\n)\n\nexport default SendMoneyThirdStep\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport SendMoneyContainer from './SendMoneyContainer'\nimport SendMoneyFirstStep from './SendMoneyFirstStep'\nimport SendMoneySecondStep from './SendMoneySecondStep'\nimport SendMoneyThirdStep from './SendMoneyThirdStep'\n\nclass SendMoney extends Component {\n   state = {\n      loader: false,\n      formLoader: false,\n      step: 1,\n      note: '',\n      expandNote: false,\n      paramAccountId: false,\n      accountId: '',\n      successMessage: false,\n      errorMessage: false,\n      amount: ''\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      const paramId = this.props.match.params.id\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      if (paramId) {\n         this.wallet\n            .checkAccount(paramId)\n            .then(d => {\n               this.setState(() => ({\n                  paramAccountId: true,\n                  accountId: paramId\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  accountId: ''\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  loader: false\n               }))\n            })\n      } else {\n         this.setState(() => ({\n            loader: false\n         }))\n      }\n   }\n\n   handleNextStep = () => {\n      const { step, accountId, amount} = this.state;\n\n      if (step === 2) {\n         this.wallet.sendTokens(this.wallet.getAccountId(), accountId, amount)\n            .then(() => {\n               this.setState(state => ({\n                  step: state.step + 1\n               }))\n            })\n            .catch(console.error)\n         return;\n      }\n\n      this.setState(state => ({\n         step: state.step + 1\n      }))\n   }\n\n   handleChange = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value\n      }))\n   }\n\n   handleExpandNote = () => {\n      this.setState(() => ({\n         expandNote: true\n      }))\n   }\n\n   handleChangeAccountId = (e, { name, value }) => {\n      this.setState(() => ({\n         [name]: value,\n         successMessage: false,\n         errorMessage: false,\n         formLoader: false\n      }))\n\n      if (!this.wallet.isLegitAccountId(value)) {\n         return false\n      }\n\n      this.setState(() => ({\n         formLoader: true\n      }))\n\n      this.timeout && clearTimeout(this.timeout)\n\n      this.timeout = setTimeout(() => {\n         this.wallet\n            .checkAccount(value)\n            .then(d => {\n               this.setState(() => ({\n                  successMessage: true,\n                  errorMessage: false\n               }))\n            })\n            .catch(e => {\n               this.setState(() => ({\n                  successMessage: false,\n                  errorMessage: true\n               }))\n            })\n            .finally(() => {\n               this.setState(() => ({\n                  formLoader: false\n               }))\n            })\n      }, 500)\n   }\n\n   render() {\n      const { step } = this.state\n\n      return (\n         <SendMoneyContainer step={step}>\n            {step === 1 && (\n               <SendMoneyFirstStep\n                  handleNextStep={this.handleNextStep}\n                  handleChange={this.handleChange}\n                  handleChangeAccountId={this.handleChangeAccountId}\n                  {...this.state}\n               />\n            )}\n            {step === 2 && (\n               <SendMoneySecondStep\n                  handleNextStep={this.handleNextStep}\n                  handleExpandNote={this.handleExpandNote}\n                  {...this.state}\n               />\n            )}\n            {step === 3 && <SendMoneyThirdStep {...this.state} />}\n         </SendMoneyContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = () => ({})\n\nexport const SendMoneyWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(SendMoney))\n","import React from 'react'\n\nimport { Container, Grid } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomContainer = styled(Container)`\n   &&& .page-title {\n      padding-right: 0px;\n      padding-top: 48px;\n      padding-bottom: 0px;\n\n      .column {\n         padding: 0 14px 24px 0;\n         float: left;\n         width: auto !important;\n      }\n      h1 {\n         line-height: 48px;\n      }\n      .add {\n         color: #24272a;\n      }\n   }\n\n   @media screen and (max-width: 767px) {\n      &&& .page-title {\n         padding-top: 14px;\n         text-align: center;\n\n         .column {\n            padding: 0 0 6px 0;\n            width: 100% !important;\n            float: none;\n         }\n         .add {\n            font-size: 12px !important;\n            line-height: 18px !important;\n            letter-spacing: 2px;\n            text-transform: uppercase;\n\n            padding-bottom: 18px;\n         }\n      }\n   }\n`\n\nconst ProfileContainer = ({ children }) => (\n   <CustomContainer>\n      <Grid>\n         <Grid.Row columns='2' className='page-title'>\n            <Grid.Column as='h1'>Account:</Grid.Column>\n            <Grid.Column as='h1' className='add'>\n               @eugenethedream\n            </Grid.Column>\n         </Grid.Row>\n      </Grid>\n      {children}\n   </CustomContainer>\n)\n\nexport default ProfileContainer\n","import React from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport { Popup, Grid, Image } from 'semantic-ui-react'\n\nimport AccountGreyImage from '../../images/icon-account-grey.svg'\nimport LockImage from '../../images/icon-lock.svg'\n\nimport styled from 'styled-components'\n\nconst CustomGrid = styled(Grid)`\n   &&& {\n      .row {\n         padding-top: 12px;\n         padding-bottom: 12px;\n\n         .edit-link {\n            font-weight: 600;\n         }\n         .title {\n            font-weight: 600;\n            color: #24272a;\n         }\n      }\n\n      .main-image {\n         border: 0px;\n         padding: 0 10px;\n         width: 120px;\n         height: 120px;\n         background: #e6e6e6;\n         border-radius: 60px;\n\n         img {\n            width: 100px;\n            padding-top: 10px;\n         }\n      }\n\n      .locked {\n         float: right;\n         border: 0px;\n         padding: 1px 7px;\n         width: 32px;\n         height: 32px;\n         background: #f8f8f8;\n         border-radius: 32px;\n\n         img {\n            padding-top: 4px;\n         }\n      }\n\n      .row-title {\n         margin-top: 20px;\n      }\n\n      @media screen and (max-width: 991px) {\n      }\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         margin-right: 0px;\n\n         .column {\n            padding-left: 0px;\n            padding-right: 0px;\n         }\n      }\n   }\n`\n\nconst ProfileDetails = ({ account }) => (\n   <CustomGrid>\n      <Grid.Row className='border-top-bold'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            PROFILE\n         </Grid.Column>\n         <Grid.Column computer='4' as='h6' textAlign='center' only='tablet'>\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Username\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            @eugenethedream\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column computer='2' tablet='2' mobile='3' textAlign='right'>\n            <Popup\n               trigger={\n                  <div className='locked'>\n                     <Image src={LockImage} align='left' />\n                  </div>\n               }\n               hoverable\n               position='left center'\n            >\n               <Popup.Header>Why is this locked?</Popup.Header>\n               <Popup.Content>\n                  Your username is your unique identifier in the system and cannot be changed\n                  cause data and asset ownership is tied to it.\n                  However you are welcome to <Link to=\"/create\">create another account</Link> with desired name\n                  and transfer assets as needed.\n                  {` `}\n                  {false ?\n                  <a href='/'>Learn more</a>\n                  : null }\n               </Popup.Content>\n            </Popup>\n         </Grid.Column>\n      </Grid.Row>\n      {false ? <div>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Full Name\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            Evgeny Kuzyakov\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Photo\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            <div className='main-image'>\n               <Image src={AccountGreyImage} align='left' />\n            </div>\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            CONTACT INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Email\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            email@website.com\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Public\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Phone\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            000-000-0000\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Address\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            1234 N. West Ave., San Francisco, CA 98562\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Friends\n         </Grid.Column>\n         <Grid.Column\n            as={Link}\n            to='/'\n            computer='2'\n            tablet='2'\n            mobile='3'\n            textAlign='right'\n            className='edit-link'\n         >\n            Edit\n         </Grid.Column>\n      </Grid.Row>\n\n      <Grid.Row className='border-top-bold row-title'>\n         <Grid.Column\n            computer='10'\n            tablet='10'\n            mobile='16'\n            as='h6'\n            className='color-charcoal-grey'\n         >\n            FINANCIAL INFORMATION\n         </Grid.Column>\n         <Grid.Column\n            computer='4'\n            tablet='4'\n            as='h6'\n            textAlign='center'\n            only='tablet'\n         >\n            VISIBLE TO\n         </Grid.Column>\n      </Grid.Row>\n      </div> : null }\n\n      <Grid.Row className='border-top'>\n         <Grid.Column computer='3' tablet='3' mobile='4' className='title'>\n            Balance\n         </Grid.Column>\n         <Grid.Column computer='7' tablet='7' mobile='9'>\n            {account.amount} Ⓝ\n         </Grid.Column>\n         <Grid.Column computer='4' tablet='4' textAlign='center' only='tablet'>\n            Only Me\n         </Grid.Column>\n         <Grid.Column as=\"div\">\n         </Grid.Column>\n      </Grid.Row>\n   </CustomGrid>\n)\n\nexport default ProfileDetails\n","import React from 'react'\n\nimport { Grid } from 'semantic-ui-react'\n\nconst ProfileSection = ({ children }) => (\n   <Grid columns={2} stackable>\n      <Grid.Column computer={10}>{children[0]}</Grid.Column>\n      <Grid.Column computer={6}>\n         {children[1]}\n         {children[2]}\n      </Grid.Column>\n   </Grid>\n)\n\nexport default ProfileSection\n","import React from 'react'\n\nimport { List, Button, Image } from 'semantic-ui-react'\n\nimport KeysGreyImage from '../../images/icon-keys-grey.svg'\nimport DocGreyImage from '../../images/icon-doc-grey.svg'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      background: #fff;\n      width: 100%;\n      margin-top: -1rem;\n      padding: 14px 4px 14px 14px;\n\n      .keys {\n         img {\n            width: 24px;\n            margin-top: 2px;\n         }\n      }\n      .account {\n         margin-top: 12px;\n\n         &-name {\n            margin-top: 12px;\n            text-overflow: ellipsis;\n            overflow: hidden;\n         }\n         img {\n            width: 18px;\n            margin-top: 8px;\n            margin-right: 20px;\n         }\n         .download {\n            margin: 0px;\n         }\n         button {\n            width: 130px;\n            background-color: #0072ce;\n            border: 2px solid #0072ce;\n            border-radius: 25px;\n            color: #fff;\n            font-weight: 600;\n            margin-left: 20px;\n\n            :hover {\n               background-color: #fff;\n               color: #0072ce;\n            }\n         }\n         .account-name {\n            color: #24272a;\n            font-weight: 600;\n         }\n      }\n\n      @media screen and (max-width: 991px) {\n         &&& {\n            .account {\n               .download {\n                  float: none;\n                  margin: 0 0 0 16px;\n               }\n            }\n         }\n      }\n      @media screen and (max-width: 767px) {\n         &&& {\n            margin-top: 20px;\n\n            .account {\n               button {\n                  margin-left: 8px;\n               }\n               .download {\n                  float: right;\n                  margin: 0 0 0 0;\n               }\n            }\n         }\n      }\n   }\n`\n\nconst ProfileYourKeys = () => (\n   <CustomList className='box'>\n      <List.Item className='keys'>\n         <List.Icon as={Image} src={KeysGreyImage} />\n         <List.Content as='h2'>Your Keys</List.Content>\n      </List.Item>\n      <List.Item className='account'>\n         <List.Content floated='right' className='download'>\n            <Button>DOWNLOAD</Button>\n         </List.Content>\n         <List.Content>\n            <Image align='left' src={DocGreyImage} />\n         </List.Content>\n         <List.Content className='account-name'>\n            @eugenethedream.key\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileYourKeys\n","import React from 'react'\n\nimport { List } from 'semantic-ui-react'\n\nimport styled from 'styled-components'\n\nconst CustomList = styled(List)`\n   &&& {\n      padding: 8px 0 8px 20px;\n      margin-left: 28px;\n      margin-top: 20px;\n      border-left: 4px solid #f8f8f8;\n\n      .header {\n         line-height: 28px;\n      }\n      .content {\n         line-height: 20px;\n      }\n\n      @media screen and (max-width: 767px) {\n         margin-left: 0px;\n         border-left: 0px;\n      }\n   }\n`\n\nconst ProfileNotice = () => (\n   <CustomList>\n      <List.Item>\n         <List.Header>Never give your keys away</List.Header>\n         <List.Content>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Curabitur\n            sit amet pretium mi, a molestie est.\n            <a href='/'>Learn more</a>\n         </List.Content>\n      </List.Item>\n   </CustomList>\n)\n\nexport default ProfileNotice\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport { withRouter } from 'react-router-dom'\n\nimport { Wallet } from '../../utils/wallet'\n\nimport { handleRefreshAccount, handleRefreshUrl } from '../../actions/account'\n\nimport ProfileContainer from './ProfileContainer'\nimport ProfileDetails from './ProfileDetails'\nimport ProfileSection from './ProfileSection'\nimport ProfileYourKeys from './ProfileYourKeys'\nimport ProfileNotice from './ProfileNotice'\n\nclass Profile extends Component {\n   state = {\n      loader: false\n   }\n\n   componentDidMount() {\n      this.wallet = new Wallet()\n      this.props.handleRefreshUrl(this.props.location)\n      this.props.handleRefreshAccount(this.wallet, this.props.history)\n\n      this.setState(() => ({\n         loader: true\n      }))\n\n      setTimeout(() => {\n         this.setState(_ => ({\n            loader: false\n         }))\n      }, 1000)\n   }\n\n   render() {\n      return (\n         <ProfileContainer>\n            <ProfileSection>\n               <ProfileDetails account={this.props.account} />\n               { false ?\n               <ProfileYourKeys />\n               : null }\n               { false ?\n               <ProfileNotice />\n               : null }\n            </ProfileSection>\n         </ProfileContainer>\n      )\n   }\n}\n\nconst mapDispatchToProps = {\n   handleRefreshAccount,\n   handleRefreshUrl\n}\n\nconst mapStateToProps = ({ account }) => ({\n   account\n})\n\nexport const ProfileWithRouter = connect(\n   mapStateToProps,\n   mapDispatchToProps\n)(withRouter(Profile))\n","import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\n  \n  * {\n   box-sizing: inherit;\n   }\n\n   #root {\n      min-height: 100vh;\n      position: relative;\n   }\n   html {\n      box-sizing: border-box;\n      min-height: 100vh;\n      height: auto !important;\n\n      body {\n         margin: 0;\n         padding: 0;\n         min-height: 100vh !important;\n\n         position: relative;\n         color: #999;\n         font-family: \"benton-sans\",sans-serif;\n         font-weight: 500;\n         font-size: 14px !important;\n      }\n   }\n   \n\n   .App {\n      min-height: 100vh;\n\n      > div {\n         min-height: 100vh;\n      }\n   }\n\n   a {\n      color: #0072ce;\n   }\n   a:hover {\n      color: #0072ce;\n      text-decoration: underline;\n   }\n\n   h1, .h1 {\n      font-family: Bw Seido Round !important;\n      font-size: 48px !important;\n      font-weight: 500 !important;\n      line-height: 100px;\n      color: #4a4f54;\n   }\n   h2, .h2 {\n      font-family: Bw Seido Round !important;\n      font-size: 24px !important;\n      font-weight: 500 !important;\n      line-height: 1.33;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h3, .h3 {\n      font-family: Bw Seido Round !important;\n      font-size: 18px !important;\n      font-weight: 500 !important;\n      line-height: 24px !important;\n      color: #24272a !important;\n      margin: 0px;\n   }\n   h4, .h4 {\n      font-family: Bw Seido Round !important;\n      font-size: 16px;\n      font-weight: 500;\n      line-height: 1.33;\n      color: #24272a;\n      margin: 0px;\n   }\n\n   h5, .h5 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 13px !important;\n      line-height: 26px;\n      font-weight: 500;\n      color: #999999 !important;\n      margin: 0px;\n      letter-spacing: 1.8px;\n   }\n\n   h6, .h6 {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      line-height: 18px;\n      font-weight: 600;\n      color: #999999;\n      margin: 0px !important;\n      letter-spacing: 1.5px !important;\n   }\n\n\n\n   .font-small {\n      font-family: \"benton-sans\",sans-serif !important;\n      font-size: 12px !important;\n      color: #999 !important;\n      font-weight: 500 !important;\n\n      a {\n         font-family: \"benton-sans\",sans-serif !important;\n         font-size: 12px !important;\n         color: #999 !important;\n         font-weight: 500 !important;\n      }\n\n      a:hover {\n         color: #999 !important;\n      }\n   }\n\n   .ui.form input[type=text] {\n      font-family: \"benton-sans\",sans-serif;\n      font-size: 16px;\n   }\n\n\n   .font-bold {\n      font-weight: 600;\n   }\n\n\n   .color-seafoam-blue {\n      color: #6ad1e3 !important;\n   }\n   .color-blue {\n      color: #0072ce !important;\n   }\n   .color-brown-grey {\n      color: #999;\n   }\n   .color-charcoal-grey {\n      color: #4a4f54 !important;\n   }\n   .color-black {\n      color: #24272a !important;\n\n      :hover {\n         color: #24272a;\n      }\n   }\n\n\n   .ui.popup > .header {\n      font-weight: 600 !important;\n      color: #24272a !important;\n   }\n\n\n   .ui.list .list>.item .header, .ui.list>.item .header, .ui.button {\n      font-weight: 600;\n   }\n\n\n   .border-bottom {\n      border-bottom: 2px solid #f8f8f8 !important;\n   }\n   .border-bottom-bold {\n      border-bottom: 4px solid #e6e6e6 !important;\n   }\n   .border-bottom-light {\n      border-bottom: 1px solid #f8f8f8 !important;\n   }\n\n   .border-top {\n      border-top: 2px solid #f8f8f8 !important;\n   }\n\n   .border-top-bold {\n      border-top: 4px solid #e6e6e6 !important;\n   }\n   .border-top-light {\n      border-top: 1px solid #f8f8f8 !important;\n   }\n\n   .border-left-bold {\n      border-left: 4px solid #f8f8f8 !important;\n   }\n\n\n   .border-right {\n      border-right: 2px solid #e6e6e6;\n   }\n   .border-right-light {\n      border-right: 1px solid #e6e6e6;\n   }\n   .background-lg {\n      background: #f8f8f8;\n   }\n\n\n   .button {\n      font-family: \"benton-sans\",sans-serif !important;\n   }\n\n\n   .box {\n      border: 4px solid #e6e6e6;\n      border-radius: 8px;\n      margin-bottom: 0px;\n      position: relative;\n      min-height: 100px;\n      position: relative;\n\n      .row {\n         padding: 0px !important;\n      }\n      .column {\n         padding: 24px 10px 20px 30px !important;\n         word-wrap: break-word;\n      }\n      .segment {\n         padding: 30px 0 20px 0 !important;\n      }\n      .list {\n         > .item {\n            padding: 0px !important;\n\n            > img {\n               top: -4px;\n               margin: 0 10px;\n            }\n            > img.transarrow {\n               width: 11px !important;\n            }\n         }\n         > h5.item {\n            top: -4px;\n         }\n      } \n   }\n\n\n   .copy-image {\n      width: 18px !important;\n      margin: 0px 10px 0 0px !important;\n      top: -4px !important;\n   }\n\n\n   .balance-image {\n      font-size: 20px !important;\n      font-weight: 100 !important;\n\n      &-big {\n         font-size: 32px !important;\n         font-weight: 100 !important;\n      }\n   }\n   \n\n   .transactions-block .item {\n      margin-left: 10px !important;\n   }\n\n\n   .hide {\n      display: none !important;\n   }\n\n\n   .App-section {\n      width: 860px;\n      margin: auto;\n      margin-top: 10px;\n      margin-bottom: 20px;\n   }\n\n   .App-error-message {\n      width: 100%;\n      text-align: center;\n      display: inline-block;\n      margin: auto;\n   }\n\n   .ui.list .list>.item .header, .ui.list>.item .header {\n      font-family: \"benton-sans\",sans-serif;\n      \n   }\n   .ui.popup>.header, .ui.popup {\n      color: #999;\n      font-family: \"benton-sans\",sans-serif;\n      font-weight: 500;\n      font-size: 14px !important;\n   }\n   .ui.popup {\n      border: 1px solid #eee;\n   }\n   .ui.left.center.popup:before {\n      box-shadow: 1px -1px 0 0 #eee;\n   }\n   .ui.bottom.right.popup:before {\n      box-shadow: -1px -1px 0 0 #eee;\n   }\n\n\n   @media screen and (max-width: 767px) {\n      h1, .h1 {\n         font-size: 38px !important;\n         font-weight: 500;\n         line-height: 50px;\n         color: #4a4f54;\n      }\n      h2, .h2 {\n         font-size: 24px !important;\n         font-weight: 600;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      h3, .h3 {\n         font-size: 16px !important;\n         font-weight: 500;\n         line-height: 1.33;\n         margin: 0px;\n      }\n      \n\n      .box .column {\n         padding: 16px 10px !important;\n      }\n   }\n`\n","import React, { Component } from 'react'\n\nimport { Route, Switch } from 'react-router-dom'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport '../index.css'\n\nimport ResponsiveContainer from './responsive/ResponsiveContainer'\nimport Footer from './common/Footer'\nimport DashboardDetailWithRouter from './dashboard/DashboardDetail'\nimport { CreateAccountWithRouter } from './accounts/CreateAccount'\nimport { SetRecoveryInfoWithRouter } from './accounts/SetRecoveryInfo'\nimport { RecoverAccountWithRouter } from './accounts/RecoverAccount'\nimport { LoginWithRouter } from './login/Login'\nimport { ContactsWithRouter } from './contacts/Contacts'\nimport { AuthorizedAppsWithRouter } from './authorized-apps/AuthorizedApps'\nimport { SendMoneyWithRouter } from './send-money/SendMoney'\nimport { ProfileWithRouter } from './profile/Profile'\n\nimport { ThemeProvider } from 'styled-components'\nimport GlobalStyle from './GlobalStyle'\nconst theme = {}\n\nconst PATH_PREFIX = process.env.PUBLIC_URL\n\nclass Routing extends Component {\n   render() {\n      return (\n         <div className='App'>\n            <GlobalStyle />\n\n            <ConnectedRouter basename={PATH_PREFIX}  history={this.props.history}>\n               <ThemeProvider theme={theme}>\n                  <ResponsiveContainer>\n                     <Switch>\n                        <Route\n                           exact\n                           path='/'\n                           component={DashboardDetailWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/create'\n                           component={CreateAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/set-recovery/:accountId'\n                           component={SetRecoveryInfoWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/recover-account'\n                           component={RecoverAccountWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/login'\n                           component={LoginWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/contacts'\n                           component={ContactsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/authorized-apps'\n                           component={AuthorizedAppsWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/send-money/:id?'\n                           component={SendMoneyWithRouter}\n                        />\n                        <Route\n                           exact\n                           path='/profile'\n                           component={ProfileWithRouter}\n                        />\n\n                        <Route component={DashboardDetailWithRouter} />\n                     </Switch>\n                     <Footer />\n                  </ResponsiveContainer>\n               </ThemeProvider>\n            </ConnectedRouter>\n         </div>\n      )\n   }\n}\n\nexport default Routing\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { createBrowserHistory } from 'history'\n\nimport createRootReducer from './reducers'\nimport createMiddleware from './middleware'\n\nimport Routing from './components/Routing'\nimport * as serviceWorker from './serviceWorker'\n\nconst history = createBrowserHistory()\n\nconst store = createStore(createRootReducer(history), createMiddleware(history))\n\nReactDOM.render(\n   <Provider store={store}>\n      <Routing history={history} />\n   </Provider>,\n   document.getElementById('root')\n)\nserviceWorker.unregister()\n","import { combineReducers } from 'redux'\nimport { connectRouter } from 'connected-react-router'\n\nimport account from './account'\n\nexport default (history) => combineReducers({\n   account,\n   router: connectRouter(history)\n})\n","module.exports = __webpack_public_path__ + \"static/media/icon-arrow-down.fcefbf0b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-problems.1f0685f5.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-send.f7a4807a.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon-close.5c3cedcf.svg\";"],"sourceRoot":""}