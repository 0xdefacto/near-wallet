import React, { useState } from 'react'
import { Translate } from 'react-localize-redux'
import styled from 'styled-components'
import FormButton from '../../common/FormButton'
import DropDown from '../../common/DropDown'
import ChevronIcon from '../../svg/ChevronIcon'
import { onKeyDown } from '../../../hooks/eventListeners'

const Container = styled.div`
    width: 100%;
    margin: 10px 0 30px 0;

    .ledger-dropdown-content {
        padding: 20px 15px;

        .title {
            font-weight: 600;
            color: #24272a;
        }

        .desc {
            margin-top: 10px;
            font-weight: 500;
        }

        button {
            &.blue {
                :focus {
                    box-shadow: 0 0 0 3pt #c8e3fc !important;
                }
            }
        }
    }

    .path-wrapper {
        display: flex;
        align-items: center;
        margin: 30px 0 10px 0;

        > span {
            color: #e0e0e0;
            font-weight: 600;
            margin: 0 10px;
        }
    }

    .default-paths {
        background-color: #F0F0F1;
        padding: 12.5px 14px;
        border-radius: 4px;
        font-weight: 600;
        color: #909090;
    }

    .custom-path {
        display: flex;
        align-items: center;
        justify-content: space-between;
        border: 1px solid #F0F0F1;
        padding: 3px 3px 3px 12px;
        border-radius: 4px;
        min-width: 55px;
        font-weight: 600;

        .buttons-wrapper {
            margin-left: 10px;
        }

        .arrow-btn {
            border: 1px solid #F0F0F1;
            border-radius: 2px;
            width: 18px;
            height: 18px;
            display: flex;
            align-items: center;
            justify-content: center;

            :hover {
                svg {
                    path {
                        stroke: #0072ce;
                    }
                }
            }

            svg {
                width: 10px;
                height: 10px;
            }

            &.increment {
                svg {
                    transform: rotate(-90deg);
                }
            }

            &.decrement {
                svg {
                    transform: rotate(90deg);
                }
            }
        }
    }
`

const SettingsIcon = () => {
    // TODO: Replace w/ icon from Figma
    return (
        <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M21.6 8.8H21.0512C20.9393 8.48154 20.8106 8.16926 20.6656 7.86448L21.056 7.472C21.5037 7.02116 21.7547 6.41137 21.754 5.77599C21.7534 5.14061 21.5011 4.53135 21.0525 4.08144L19.9234 2.952C19.7012 2.72837 19.4367 2.55107 19.1455 2.43037C18.8542 2.30968 18.5419 2.24799 18.2266 2.24888H18.224C17.9082 2.24835 17.5955 2.31054 17.3039 2.43184C17.0123 2.55315 16.7477 2.73115 16.5255 2.95552L16.1443 3.3384C15.8372 3.19042 15.5219 3.05997 15.2 2.94768V2.4C15.1993 1.7637 14.9462 1.15365 14.4963 0.703716C14.0463 0.25378 13.4363 0.000698783 12.8 0H11.2C10.5637 0.000698783 9.95365 0.25378 9.50372 0.703716C9.05378 1.15365 8.8007 1.7637 8.8 2.4V2.9492C8.4804 3.06156 8.16727 3.19157 7.86208 3.33864L7.47304 2.9492C7.02248 2.49993 6.41215 2.24768 5.77588 2.24776C5.13961 2.24783 4.52933 2.50023 4.07888 2.9496L2.9492 4.07888C2.50003 4.52949 2.24785 5.1398 2.24792 5.77604C2.248 6.41228 2.50033 7.02254 2.9496 7.47304L3.33864 7.86208C3.19157 8.16727 3.06156 8.4804 2.9492 8.8H2.4C1.7637 8.8007 1.15365 9.05378 0.703716 9.50372C0.25378 9.95365 0.000698783 10.5637 0 11.2V12.8C0.000698783 13.4363 0.25378 14.0463 0.703716 14.4963C1.15365 14.9462 1.7637 15.1993 2.4 15.2H2.94768C3.05995 15.522 3.19037 15.8373 3.33832 16.1446L2.95544 16.5258C2.73182 16.7485 2.55432 17.0131 2.43309 17.3045C2.31187 17.5959 2.24931 17.9083 2.24899 18.2239C2.24867 18.5395 2.3106 18.852 2.43123 19.1437C2.55186 19.4353 2.72883 19.7003 2.952 19.9234L4.08096 21.0523C4.53098 21.5009 5.1403 21.7531 5.77572 21.7538C6.41115 21.7545 7.02101 21.5036 7.472 21.056L7.86464 20.6654C8.16944 20.8102 8.48166 20.9388 8.8 21.0508V21.6C8.8007 22.2363 9.05378 22.8463 9.50372 23.2963C9.95365 23.7462 10.5637 23.9993 11.2 24H12.8C13.4363 23.9993 14.0463 23.7462 14.4963 23.2963C14.9462 22.8463 15.1993 22.2363 15.2 21.6V21.0523C15.521 20.9406 15.8356 20.8115 16.1426 20.6656L16.5266 21.0496C16.977 21.4991 17.5873 21.7515 18.2236 21.7515C18.86 21.7515 19.4703 21.4991 19.9207 21.0496L21.0504 19.9207C21.5002 19.4705 21.7528 18.8601 21.7527 18.2238C21.7527 17.5874 21.4999 16.9771 21.05 16.527L20.6652 16.143C20.8113 15.8359 20.9407 15.5211 21.0527 15.2H21.6C22.2363 15.1993 22.8463 14.9462 23.2963 14.4963C23.7462 14.0463 23.9993 13.4363 24 12.8V11.2C23.9993 10.5637 23.7462 9.95365 23.2963 9.50372C22.8463 9.05378 22.2363 8.8007 21.6 8.8ZM22.4 12.8C22.3998 13.0121 22.3155 13.2155 22.1655 13.3655C22.0155 13.5155 21.8121 13.5998 21.6 13.6H20.464C20.2886 13.6 20.1181 13.6577 19.9787 13.7641C19.8393 13.8706 19.7387 14.0199 19.6925 14.189C19.5269 14.7881 19.2906 15.3654 18.9885 15.9086C18.9042 16.0604 18.8717 16.2356 18.8959 16.4075C18.9201 16.5795 18.9996 16.7389 19.1224 16.8617L19.9193 17.6586C20.0691 17.8087 20.1533 18.0121 20.1533 18.2242C20.1533 18.4363 20.0691 18.6397 19.9193 18.7898L18.79 19.9187C18.6397 20.0683 18.4362 20.1522 18.2242 20.1522C18.0122 20.1522 17.8087 20.0683 17.6584 19.9187L16.8618 19.1226C16.7392 18.9998 16.5798 18.9203 16.408 18.8961C16.2361 18.8719 16.061 18.9042 15.9091 18.9883C15.3654 19.2904 14.7879 19.5269 14.1885 19.693C14.0195 19.7393 13.8704 19.8398 13.7641 19.9791C13.6577 20.1184 13.6001 20.2888 13.6 20.464V21.6C13.5998 21.8121 13.5155 22.0155 13.3655 22.1655C13.2155 22.3155 13.0121 22.3998 12.8 22.4H11.2C10.9879 22.3998 10.7845 22.3155 10.6345 22.1655C10.4845 22.0155 10.4002 21.8121 10.4 21.6V20.464C10.4 20.2891 10.3427 20.119 10.2369 19.9798C10.1311 19.8405 9.98257 19.7398 9.81408 19.6929C9.21691 19.5257 8.64137 19.2892 8.0992 18.9882C7.94761 18.9044 7.77288 18.872 7.60129 18.8959C7.42969 18.9198 7.27051 18.9989 7.14768 19.121L6.34296 19.9218C6.19266 20.0711 5.98939 20.1548 5.77757 20.1547C5.56575 20.1545 5.36259 20.0706 5.21248 19.9211L4.0832 18.792C4.00878 18.7176 3.94976 18.6293 3.90953 18.532C3.86931 18.4348 3.84866 18.3306 3.84877 18.2254C3.84888 18.1201 3.86975 18.016 3.91018 17.9188C3.95062 17.8217 4.00982 17.7334 4.0844 17.6592L4.8844 16.8623C5.00873 16.7388 5.08898 16.5778 5.11276 16.4042C5.13654 16.2306 5.10254 16.054 5.016 15.9016C4.71012 15.3622 4.47225 14.787 4.30784 14.189C4.26158 14.0198 4.16096 13.8705 4.0215 13.764C3.88203 13.6576 3.71144 13.6 3.536 13.6H2.4C2.18789 13.5998 1.98451 13.5155 1.83453 13.3655C1.68454 13.2155 1.60019 13.0121 1.6 12.8V11.2C1.60028 10.9879 1.68465 10.7846 1.83462 10.6346C1.98459 10.4846 2.18791 10.4003 2.4 10.4H3.536C3.71095 10.4 3.88107 10.3426 4.02033 10.2367C4.15959 10.1309 4.26033 9.98225 4.30712 9.81368C4.47246 9.21786 4.71055 8.64467 5.016 8.10704C5.10252 7.95478 5.13665 7.77833 5.11315 7.6048C5.08965 7.43126 5.00982 7.27024 4.88592 7.14648L4.08128 6.34176C3.9314 6.19163 3.84719 5.98818 3.84711 5.77604C3.84704 5.5639 3.93111 5.3604 4.08088 5.21016L5.21016 4.08128C5.36024 3.9313 5.56371 3.84702 5.77588 3.84695C5.98805 3.84687 6.19158 3.93101 6.34176 4.08088L7.14648 4.88552C7.27016 5.00955 7.43119 5.08947 7.60477 5.11297C7.77834 5.13648 7.95482 5.10226 8.10704 5.0156C8.64468 4.71026 9.21787 4.47228 9.81368 4.30704C9.98224 4.26025 10.1308 4.15953 10.2367 4.02028C10.3426 3.88104 10.4 3.71093 10.4 3.536V2.4C10.4003 2.18791 10.4846 1.98459 10.6346 1.83462C10.7846 1.68465 10.9879 1.60028 11.2 1.6H12.8C13.0121 1.60028 13.2154 1.68465 13.3654 1.83462C13.5154 1.98459 13.5997 2.18791 13.6 2.4V3.536C13.6 3.71133 13.6576 3.88181 13.764 4.02121C13.8703 4.1606 14.0195 4.2612 14.1886 4.30752C14.7866 4.47179 15.3619 4.70966 15.9012 5.01568C16.0537 5.10247 16.2304 5.13664 16.4043 5.11293C16.5781 5.08921 16.7392 5.00893 16.8629 4.88448L17.6594 4.08448C17.7335 4.00973 17.8218 3.95042 17.919 3.90998C18.0162 3.86954 18.1205 3.84877 18.2258 3.84888C18.3309 3.84859 18.4358 3.86916 18.5329 3.9094C18.6299 3.94963 18.7181 4.00874 18.7922 4.08328L19.9215 5.21256C20.071 5.36262 20.155 5.56575 20.1553 5.77757C20.1555 5.98939 20.0718 6.19268 19.9226 6.34304L19.1211 7.14768C18.9988 7.27055 18.9198 7.42982 18.8958 7.60151C18.8719 7.77321 18.9043 7.94804 18.9883 8.09968C19.2897 8.64122 19.5263 9.21642 19.693 9.81336C19.7397 9.98198 19.8404 10.1306 19.9796 10.2366C20.1189 10.3425 20.289 10.3999 20.464 10.4H21.6C21.8121 10.4003 22.0154 10.4846 22.1654 10.6346C22.3153 10.7846 22.3997 10.9879 22.4 11.2V12.8Z" fill="#D5D4D8"/>
            <path d="M12 8C11.2089 8 10.4355 8.2346 9.77772 8.67412C9.11992 9.11365 8.60723 9.73836 8.30448 10.4693C8.00173 11.2002 7.92252 12.0044 8.07686 12.7804C8.2312 13.5563 8.61216 14.269 9.17157 14.8284C9.73098 15.3878 10.4437 15.7688 11.2196 15.9231C11.9956 16.0775 12.7998 15.9983 13.5307 15.6955C14.2616 15.3928 14.8864 14.8801 15.3259 14.2223C15.7654 13.5645 16 12.7911 16 12C15.9988 10.9395 15.577 9.92277 14.8271 9.17288C14.0772 8.42299 13.0605 8.00118 12 8ZM12 14.8571C11.4349 14.8571 10.8825 14.6896 10.4127 14.3756C9.9428 14.0617 9.5766 13.6155 9.36034 13.0934C9.14409 12.5713 9.08751 11.9968 9.19776 11.4426C9.308 10.8884 9.58012 10.3793 9.9797 9.97969C10.3793 9.58012 10.8884 9.308 11.4426 9.19776C11.9968 9.08751 12.5713 9.14409 13.0934 9.36034C13.6155 9.57659 14.0617 9.9428 14.3756 10.4127C14.6896 10.8825 14.8571 11.4349 14.8571 12C14.8563 12.7575 14.5549 13.4837 14.0193 14.0193C13.4837 14.5549 12.7575 14.8562 12 14.8571Z" fill="#D5D4D8"/>
        </svg>
    )
}

export default function LedgerHdPaths() {
    const [path, setPath] = useState(1);

    onKeyDown(e => {
        const dropdownOpen = document.getElementById('hd-paths-dropdown').classList.contains('open')
        if (dropdownOpen) {
            if (e.keyCode === 38) {
                increment()
            } else if (e.keyCode === 40) {
                decrement()
            }
            e.preventDefault()
        }
    })

    const increment = () => {
        setPath(path + 1)
    }

    const decrement = () => {
        if (path > 0) {
            setPath(path - 1)
        }
    }

    const dropDownContent = () => {
        return (
            <div className='ledger-dropdown-content'>
                <div className='title'><Translate id='signInLedger.advanced.subTitle'/></div>
                <div className='desc'><Translate id='signInLedger.advanced.desc'/></div>
                <div className='path-wrapper'>
                    <div className='default-paths'>44 / 397 / 0 / 0</div>
                    <span>&ndash;</span>
                    <div className='custom-path'>
                        {path}
                        <div className='buttons-wrapper'>
                            <div className='arrow-btn increment' role='button' onClick={increment}>
                                <ChevronIcon/>
                            </div>
                            <div className='arrow-btn decrement' role='button' onClick={decrement}>
                                <ChevronIcon/>
                            </div>
                        </div>
                    </div>
                </div>
                <FormButton>
                    <Translate id='signInLedger.advanced.setPath'/>
                </FormButton>
            </div>
        )
    }

    return (
        <Container>
            <DropDown
                name='hd-paths-dropdown'
                icon={<SettingsIcon/>}
                title={<Translate id='signInLedger.advanced.title'/>}
                content={dropDownContent()}
            />
        </Container>
    )
}